<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机组成原理 第二章 数据的表示和运算</title>
      <link href="/2025/02/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%20%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/"/>
      <url>/2025/02/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%20%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h2 id="一、进位计数制及其相互转换">一、进位计数制及其相互转换</h2><h3 id="1-进位计数制">1.进位计数制</h3><p>r进制计数法，逢r进一，这里的r为基数。</p><p><strong>基数</strong>：每个数码位所用到的不同符号的个数，r进制的基数为r。</p><p>二进制（Binary）数的表示方法：11002B</p><p>十进制（Decimalism）数的表示方法：985D</p><p>十六进制（Hexadecimal）数的表示方法：9494H 或 0x9494 或 0X9494</p><blockquote><p><strong>计算机系统内部采用二进制的原因</strong></p><ol><li class="lvl-3">二进制只有两种状态，使用有两个稳定状态的物理器件就可以表示二进制数的每一位，制造成本比较低。</li><li class="lvl-3">二进制位 1 和 0 正好与逻辑值“真”和“假”相对应，为计算机实现逻辑运算和程序中的逻辑判断提供了便利条件。</li><li class="lvl-3">二进制的编码和运算规则都很简单，通过逻辑门电路能方便地实现算术运算。</li></ol></blockquote><h3 id="2-不同进制数之间的相互转换">2.不同进制数之间的相互转换</h3><p>花里胡哨，实际上熟悉每一位的权重自己拼凑更快。</p><p><strong>二级制数转换为八进制和十六进制数</strong>：以小数点为界，每 3 位（八进制）或 4 位（十六进制）一组，分别用对应的八进制或十六进制数取代。不足的部分，整数部分高位补 0，小数部分低位补 0。</p><p><strong>十进制小数转换为二进制小数</strong>：整数部分使用<strong>除基取余法</strong>，小数部分使用<strong>乘基取整法</strong>。</p><p>除基取余法顾名思义，乘基取整法如下图所示：</p><p><img src="https://bu.dusays.com/2025/02/19/67b594c08cf15.png" alt="2eb05651-e316-442a-a0ec-4a5fed324398"></p><p>因此 0.3 用二进制表示为 0.01001…B，后面无限循环1001，这里精确到小数点后五位。</p><blockquote><p><strong>注意</strong>：在计算机中，小数和整数不一样，整数可以连续表示，但<strong>小数是离散的</strong>，所以并不是每个十进制小数都可以准确地用二进制小数表示，例如这里的 0.3 就无法得到精确的结果。但每一个二进制小数都可以用十进制小数精确表示。</p></blockquote><h2 id="二、定点数的编码表示">二、定点数的编码表示</h2><h3 id="1-真值和机器数">1.真值和机器数</h3><p><strong>真值</strong>：生活中，通常用正负号来分别表示整数和负数。+7，-8 这种带正负号的数称为真值。真值是机器数所代表的实际值。</p><p><strong>机器数</strong>：计算机中，通常把数据的符号和数字部分一起编码，将符号数字化，通常用 0 表示正，用 1 表示负。这种把符号数字化的数称为机器数。</p><h3 id="2-定点数和浮点数">2.定点数和浮点数</h3><p>根据小数点的位置是否固定，在计算机中有两种数据格式：<strong>定点表示</strong>和<strong>浮点表示</strong></p><p><strong>定点数</strong>：小数点的位数固定，如 996.007（常规计数）</p><p><strong>浮点数</strong>：小数点的位置不固定，如9.96007*10^2（科学计数法）</p><p><strong>定点数</strong>又分为<strong>无符号数</strong>和<strong>有符号数</strong>，<strong>有符号数</strong>又可以用<strong>原码、反码、补码、移码</strong>四种方式表示。</p><p>现代计算机中，通常用<strong>补码整数表示整数，用原码小数浮点数的尾数部分，用移码表示浮点数的阶码部分</strong>。</p><h3 id="3-机器数的定点表示">3.机器数的定点表示</h3><h4 id="（1）无符号数的表示">（1）无符号数的表示</h4><p><strong>无符号数</strong>：所有的二进制位数均为数值位，没有符号位</p><p>n 位 r 进制数可表示 r^n 个无符号数，范围为 0 到 r^n-1。</p><p>通常无符号数只有整数，不存在无符号小数（例如 C 语言中 unsigned 只能用来修饰整数相关的关键字，不能修饰 float）。</p><h4 id="（2）有符号数的定点表示">（2）有符号数的定点表示</h4><p>定点表示法用来表示定点小数和定点整数：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>定点小数</strong>是纯小数，约定小数点在符号位之后。</p></li><li class="lvl-2"><p><strong>定点整数</strong>是纯整数，约定小数点位置在有效数值部分最低位之后。</p></li></ul><p><img src="https://bu.dusays.com/2025/02/19/67b5a23490baf.png" alt="dd788e55-6b81-4843-9d8e-e5c5d99cace5"></p><blockquote><p><strong>注意</strong>：机器内部实际上并无小数点，只是人为约定。此外，可以用原码、反码补码表示定点整数和定点小数，用移码表示定点整数。</p></blockquote><p>对于定点整数我们常用<strong>逗号</strong>区分符号位和有效数值部分：</p><p><img src="https://bu.dusays.com/2025/02/19/67b5cef768694.png" alt="image-20250219185916462"></p><p>对于定点整数我们常用<strong>点号</strong>区分符号位和小数部分：</p><p><img src="https://bu.dusays.com/2025/02/19/67b5cefb3458d.png" alt="image-20250219185858558"></p><p>因此这里的 1.11 的真值实际上并不是 1 点 11，而是<strong>负 0 点 11</strong>。</p><h4 id="（3）原码">（3）原码</h4><p><strong>原码</strong>：用机器的最高位表示数的符号，其余各位表示数的绝对值。实际上我们上面两张图片里的就是使用的原码表示法。</p><p>原码整数和小数的表示范围如下图所示：</p><p><img src="https://bu.dusays.com/2025/02/19/67b5cefeec82e.png" alt="image-20250219185503036"></p><p><img src="https://bu.dusays.com/2025/02/19/67b5cf02264c1.png" alt="image-20250219185430814"></p><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center">与真值的对应关系简单、直观，与真值的转化简单。</td><td style="text-align:center">0 的表示不唯一，有 +0 和 -0 两个编码。</td></tr><tr><td style="text-align:center">用原码实现<strong>乘除运算</strong>比较简单。</td><td style="text-align:center">用原码实现<strong>加减运算</strong>比较复杂。</td></tr></tbody></table><h4 id="（4）反码">（4）反码</h4><p><strong>反码</strong>：在原码的基础上，<strong>若符号位为0，则反码与原码相同</strong>；<strong>若符号位为1；则数值位全部取反</strong>。</p><p>因此反码与原码所能表示的范围相同，且也存在 +0 和 -0两种表示形式。</p><p>在计算机中，反码是原码转换到补码的中间形式，很少拿来使用。</p><h4 id="（5）补码">（5）补码</h4><p><strong>补码</strong>：<strong>正数的补码 = 原码</strong>；<strong>负数的补码 = 反码末位 + 1</strong>（要考虑进位）</p><p><strong>0</strong> 的补码是<strong>唯一</strong>的，因此补码可以比原码多表示一个数字。</p><p><img src="https://bu.dusays.com/2025/02/19/67b5cf05a53f7.png" alt="image-20250219200042362"></p><p><strong>补码的作用</strong>：使用补码可以将减法操作转变为等价的加法，ALU中无需集成减法器，执行加法操作时，符号位一起参与运算。</p><p><strong>由 [x]补 快速求 [-x]补 的技巧</strong>：符号位、数值位全部取反，末位 +1。</p><p><strong>负数的原码补码转换技巧</strong>：最右边的 1 及其右边部分保持不变，剩下的数值位全部取反。</p><p>说到补码就不得不拿出 CSAPP 上的这张图了，设计这个图的人简直就是天才：</p><p><img src="https://bu.dusays.com/2025/02/19/67b5cf0a40739.png" alt="d1649d4b-0d28-45a1-a141-c789d2ceddac"></p><h4 id="（6）移码">（6）移码</h4><p><strong>移码</strong>：在补码的基础上将符号位取反。</p><p>因此移码和补码的表示范围相同，且 0 也只有一种表示形式。</p><blockquote><p><strong>注意</strong>：移码常用来表示浮点数的阶码，它只能表示整数，不能表示小数</p></blockquote><p><strong>优点</strong>：便于计算机比较大小，如下图所示。</p><p><img src="https://bu.dusays.com/2025/02/19/67b5cf0fda3bf.png" alt="187a92a3-d0ec-4ce6-9a72-791b0e283b85"></p><h4 id="（7）四种编码总结">（7）四种编码总结</h4><p><img src="https://bu.dusays.com/2025/02/19/67b5cf14c73fc.png" alt="caab6a19-9055-44b7-b75f-0a2a01786c53"></p><p>符号位为 0 时，原码等于反码等于补码；符号位为 1 时，原码和补码之间相互转换的方式相同，均为数值位按位取反再加一。</p><h3 id="4-神奇的补码">4.神奇的补码</h3><p><strong>补码的作用</strong>：使用补码可以将减法操作转变为等价的加法，ALU中无需集成减法器，执行加法操作时，符号位一起参与运算。</p><p>为什么补码能够实现这样的功能呢？</p><p>以 4 位的补码为例，因为只能存储 4 位数字，所以它本质上相当于对数字进行取模运算，模为 2 的 4 次方，即为 16。而后将得到的余数存储下来（这里需要了解负数的取模运算规则，例如 -5 对 16 取模，得到的余数为11）。</p><p>对于真值 b，我们定义 b 的补数为 模 + b = b的补数。实际上，这里 b 的补数就是补码。</p><p>可以看到，当 b 为正值时，直接溢出，进行取模运算；当b为负值时，补数相当于 模 - |b|。</p><p>对于 b &lt; 0，如果我们想要运算 a + b，只需要计算 a + b的补数 即可。因为代入我们上面对补数的定义可以得到下面的公式：</p><p>a + b的补数 = a + 模 + b = a + b，因为计算机会自动抛弃溢出的位数（假设 0 &lt; a + b &lt; 模）。</p><p>举个栗子，a 取 5，b 取 -3 ，-3 的补数为 模 + （-3） = 16 +（-3）= 13 = 1101。</p><p>可以看到 1101实际上就是我们定义的 -3 的补码。</p><p>那么，5 +（-3） =  0101 + 1101 = 10010，计算机自动保留四位，得到结果为 0010，即为 2。</p><p>此外，从这个公式我们也能看出为什么负数补码和原码的转换方式是数字位取反再加一：</p><p>同样以 4 位补码为例，b 的补数 - b = 模 = 16 = 1111 +1，那么 b 的补数 + （|b| -1） = 1111</p><p>-3 的补数 1101 和什么样的数相加才能得到 1111呢？答案是，0010。</p><p>所以 |b| - 1 = 0010，|b| = 0010 + 1 = 0011，那 b 的原码不就是 1011吗？</p><p>反过来原码转换成补码我们可以用（b 的补数 - 1）+ |b| = 1111，只需要改变一下 -1的位置就行了。</p><p>感觉写的有点乱啊，拼尽全力只能这样了。</p><h3 id="5-C语言强制类型转换">5.C语言强制类型转换</h3><p>C语言中的有符号数以补码的形式存储，chart型默认按照无符号数整数解释。</p><p><strong>无符号变有符号</strong>：二进制各个位数的值不变，仅改变解释这些位的方式。</p><p><strong>长整数变短整数</strong>：直接高位截断，简单粗暴。</p><p><strong>短整数变长整数</strong>：无符号数进行零扩展，高位用零填充；有符号数进行符号扩展，高位部分用原数字的符号位填充（0 或 1）。</p><h2 id="三、基本运算部件">三、基本运算部件</h2><p><strong>补充常用逻辑门电路</strong>：</p><p><img src="https://bu.dusays.com/2025/02/22/67b97262227fb.jpg" alt="11610001740206561"></p><h3 id="1-一位全加器">1.一位全加器</h3><p><img src="https://bu.dusays.com/2025/02/21/67b83ad5b546a.png" alt="0dcd217b-f0ae-464e-bae8-262ff2e7e26f"></p><p><strong>一位全加器（FA，full adder）</strong> 是最基本的加法单元，有加数 A_i、加数 B_i 与低位传来的进位 C_i-1 共三个输入，有本位和 S_i 及向高位的进位 C_i 共两个输出。</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="31.283ex" height="2.167ex" role="img" focusable="false" viewBox="0 -750 13826.9 958" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">和</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">达</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="msub" transform="translate(5000,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(6217.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(7273.5,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(8572.7,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(9572.9,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(10881.1,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(11881.3,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi mathvariant="normal">和</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">达</mi><mi mathvariant="normal">式</mi><mi>：</mi><msub><mi>S</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>⊕</mo><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>⊕</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="40.429ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 17869.8 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">进</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">达</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="msub" transform="translate(6000,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(7319.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(8375.5,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(9452.5,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(10760.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(11760.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(12149.9,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(13449,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(14449.3,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(15535.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(15924.2,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi mathvariant="normal">进</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">达</mi><mi mathvariant="normal">式</mi><mi>：</mi><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>⊕</mo><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><h3 id="2-串行进位加法器">2.串行进位加法器</h3><p>将 n 个 FA 相连可以得到 n 位加法器，称为串行进位加法器。</p><p><img src="https://bu.dusays.com/2025/02/21/67b83adb98441.png" alt="073dd972-e89f-47b2-86b0-c2cb70d4c787"></p><p>在串行进位加法器中，低位运算的产生进位所需的时间将影响高位运算的时间，位数越多，延迟时间就越长。</p><h3 id="3-并行进位加法器">3.并行进位加法器</h3><p><strong>并行进位（也称先行进位）加法器</strong>可以加快进位产生的速度，进而提升加法运算产生结果的速度。</p><p>从前面的串行进位加法器中我们可以得到：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.855ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11869.8 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(1319.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2375.5,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(3452.5,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(4760.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5760.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(6149.9,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(7449,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(8449.3,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(9535.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(9924.2,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>⊕</mo><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="53.872ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 23811.3 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(1319.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2375.5,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(3452.5,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(4760.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5760.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(6149.9,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(7449,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(8449.3,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(9535.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9924.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(10313.2,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(12293.8,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(14505.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(15505.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(15894.9,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(783,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(18097.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(19098,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(21087.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(21476.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(23422.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo>⊕</mo><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⊕</mo><msub><mi>B</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>2</mn></mrow></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="5.68ex" height="0.271ex" role="img" focusable="false" viewBox="0 -120 2510.7 120" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1338.7,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mo>…</mo><mo>…</mo></math></mjx-assistive-mml></mjx-container><p>一直展开到 C_0，我们可以发现，第 i 位向更高位的进位 C_i 其实从一开始就能够根据被加数、加数的第 1 至 i 位，再结合 C_0 得到，而不用等待前一位的进位。</p><p>我们可以按照这种思路设计出一个四位并行进位加法器：</p><p><img src="https://bu.dusays.com/2025/02/21/67b83ae060101.jpg" alt="5223241740126021"></p><p><img src="https://bu.dusays.com/2025/02/21/67b83ae23010b.png" alt="b066ce64-06b8-4d17-84d8-24675dc1ab0f"></p><p>构造一个 n 位并行进位加法器，需要将 n 个一位全加器连接上 n 位先行进位部分（简称 <strong>CLA 部件</strong>），其作用是“并行产生进位”，即 n 位进位信息几乎是同时产生的。当计算更多位时，我们可以选择将多个 4 并行进位加法器进行串联。</p><h3 id="4-带标志加法器">4.带标志加法器</h3><p>在 n 位加法器的基础上还会再增加一些逻辑电路，使其不仅能计算和/差，还能生成相应的标志信息，分别是：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>OF（Overflow Flag）溢出标志</strong>，用于判断<strong>有符号数</strong>的加减运算是否溢出。0 表示未溢出，1 表示溢出。</p></li><li class="lvl-2"><p><strong>SF（Sign Flag）符号标志</strong>，用于表示<strong>有符号数</strong>的加减运算结果的正负性。 0 表示正，1 表示负。</p></li><li class="lvl-2"><p><strong>ZF（Zero Flag）零标志</strong>，用于判断加减运算结果是否为0。1 表示结果为 0，0表示结果非 0。</p></li><li class="lvl-2"><p><strong>CF（Carry Flag）进位/借位标志</strong>，用于判断<strong>无符号数</strong>的加减运算是否溢出。0 表示未溢出，1表示溢出。</p></li></ul><h3 id="5-算术逻辑单元（ALU）">5.算术逻辑单元（ALU）</h3><p>ALU 是运算器的<strong>核心</strong>，加法器是 ALU 的<strong>核心</strong>。</p><p>ALU的运算数，运算结果位数与计算机的<strong>机器字长</strong>相同。</p><p><strong>ALU 的功能</strong>包括：</p><ul class="lvl-0"><li class="lvl-2"><p>算术运算 - 加、减、乘、除 等</p></li><li class="lvl-2"><p>逻辑运算 - 与、或、非、异或、移位 等</p></li><li class="lvl-2"><p>其他 - 求补码、直送（即不做任何操作）等</p></li></ul><p><img src="https://bu.dusays.com/2025/02/22/67b9733218b26.png" alt="ebd9cda4-2746-4473-8f02-6769c58541af"></p><p>ALU 的基本结构如上图，op 信号用来控制 ALU 所执行的功能，其位数决定了操作数的种类。例如，位数为 3 时，ALU 最多只能有 8 种操作。</p><h2 id="四、定点数的运算">四、定点数的运算</h2><h3 id="1-定点数的移位运算">1.定点数的移位运算</h3><h4 id="（1）逻辑移位">（1）逻辑移位</h4><p>将操作数视为无符号整数，直接整体左移或右移，空位补 0，简单粗暴。</p><h4 id="（2）算术移位">（2）算术移位</h4><p><img src="https://bu.dusays.com/2025/02/22/67b97fae89efe.png" alt="c83588c0-464f-4e38-9946-eaef09977933"></p><p>算术移位的一个特点是，移位后符号位不会改变（注意说的是符号位不会改变，而不是符号位不会移动）。、</p><p>左移可能会溢出，右移可能会丢失精度。</p><p>实际上想象成对真值进行乘 2 ，除 2 运算，自然就知道要补 1 还是 0 了。</p><h4 id="（3）循环移位">（3）循环移位</h4><p>循环移位即为将移出的那一位再填补到另一侧的空位上去。</p><p>对于一些有进位位的情况，将进位位视为普通的比特位即可，例如</p><p><strong>1</strong> 01110101，这里标粗的位置是进位位，循环左移结果为 <strong>0</strong> 11101011。</p><h3 id="2-定点数的加减运算">2.定点数的加减运算</h3><h4 id="（1）补码加减运算">（1）补码加减运算</h4><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="34.857ex" height="2.72ex" role="img" focusable="false" viewBox="0 -883.9 15406.7 1202.1" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1250.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2250.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(3009.4,0)"><g data-mml-node="mo"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(311,-176.7) scale(0.707)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g><g data-mml-node="mo" transform="translate(4355.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5411.1,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(5689.1,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(6439.1,0)"><g data-mml-node="mo"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(311,-176.7) scale(0.707)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g><g data-mml-node="mo" transform="translate(7729.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8729.7,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9007.7,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(9766.7,0)"><g data-mml-node="mo"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(311,-176.7) scale(0.707)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g><g data-mml-node="mo" transform="translate(10834.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(11223.8,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12101.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12586.8,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(13106.8,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(15017.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mo stretchy="false">[</mo><mi>A</mi><mo>+</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mi mathvariant="normal">补</mi></msub><mo>=</mo><mo stretchy="false">[</mo><mi>A</mi><msub><mo stretchy="false">]</mo><mi mathvariant="normal">补</mi></msub><mo>+</mo><mo stretchy="false">[</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mi mathvariant="normal">补</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><msup><mn>2</mn><mrow data-mjx-texclass="ORD"><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="36.617ex" height="2.72ex" role="img" focusable="false" viewBox="0 -883.9 16184.7 1202.1" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1250.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2250.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(3009.4,0)"><g data-mml-node="mo"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(311,-176.7) scale(0.707)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g><g data-mml-node="mo" transform="translate(4355.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5411.1,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(5689.1,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(6439.1,0)"><g data-mml-node="mo"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(311,-176.7) scale(0.707)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g><g data-mml-node="mo" transform="translate(7729.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8729.7,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9007.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9785.7,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(10544.7,0)"><g data-mml-node="mo"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(311,-176.7) scale(0.707)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g><g data-mml-node="mo" transform="translate(11612.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12001.8,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12879.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(13364.8,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(13884.8,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(15795.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mo stretchy="false">[</mo><mi>A</mi><mo>−</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mi mathvariant="normal">补</mi></msub><mo>=</mo><mo stretchy="false">[</mo><mi>A</mi><msub><mo stretchy="false">]</mo><mi mathvariant="normal">补</mi></msub><mo>+</mo><mo stretchy="false">[</mo><mo>−</mo><mi>B</mi><msub><mo stretchy="false">]</mo><mi mathvariant="normal">补</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><msup><mn>2</mn><mrow data-mjx-texclass="ORD"><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><h4 id="（2）溢出判断方法">（2）溢出判断方法</h4><p>只有以下两种情况才会导致溢出：</p><p><strong>正 + 正 = 负（上溢）；负 + 负 = 正（下溢）</strong></p><p><strong>方法一</strong>：根据操作数和结果的符号判断</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="25.006ex" height="2.712ex" role="img" focusable="false" viewBox="0 -1033 11052.5 1198.6" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1046.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2102.6,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(783,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="msub" transform="translate(3391.6,0)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="msub" transform="translate(4689.7,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(0,637)"><svg width="760" height="237" x="0" y="148" viewBox="190 148 760 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.28,1)" style="stroke-width: 3;"/></svg></g></g><g data-mml-node="mi" transform="translate(793,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(6211,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(7211.3,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(0,648)"><svg width="750" height="237" x="0" y="148" viewBox="187.5 148 750 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.25,1)" style="stroke-width: 3;"/></svg></g></g><g data-mml-node="mi" transform="translate(783,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="msub" transform="translate(8500.3,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(0,615)"><svg width="759" height="237" x="0" y="148" viewBox="189.8 148 759 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.277,1)" style="stroke-width: 3;"/></svg></g></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="msub" transform="translate(9798.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>V</mi><mo>=</mo><msub><mi>A</mi><mi>S</mi></msub><msub><mi>B</mi><mi>S</mi></msub><msub><mover><mi>C</mi><mo accent="true">―</mo></mover><mi>S</mi></msub><mo>+</mo><msub><mover><mi>A</mi><mo accent="true">―</mo></mover><mi>S</mi></msub><msub><mover><mi>B</mi><mo accent="true">―</mo></mover><mi>S</mi></msub><msub><mi>C</mi><mi>S</mi></msub></math></mjx-assistive-mml></mjx-container><p>若 V = 0，则未溢出；若 V = 1，则发生溢出。</p><p><strong>方法二</strong>：根据进位判断</p><p>若符号位的进位 Cs 与最高数值位的进位 C1 不同，则发生溢出，相同则没有溢出。</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="12.965ex" height="1.97ex" role="img" focusable="false" viewBox="0 -705 5730.6 870.6" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1046.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2102.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(3578.9,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(4579.1,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(748,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>V</mi><mo>=</mo><msub><mi>C</mi><mi>S</mi></msub><mo>⊕</mo><msub><mi>C</mi><mn>1</mn></msub></math></mjx-assistive-mml></mjx-container><p>若 V = 0，则未溢出；若 V = 1，则发生溢出。</p><p><strong>方法三</strong>：双符号位判断</p><p>双符号位补码又称模 4 补码，单符号位补码又称模 2 补码。</p><p>运算结果的两个符号位 Ss1 和 Ss2 相同，则未溢出，不同则发生溢出，此时最高位符号位代表真正的符号（实际上原理与方法二相同）。</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="14.335ex" height="1.97ex" role="img" focusable="false" viewBox="0 -705 6336.3 870.6" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1046.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2102.6,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(645,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(3830.4,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(4830.6,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(645,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>V</mi><mo>=</mo><msub><mi>S</mi><mrow data-mjx-texclass="ORD"><mi>S</mi><mn>1</mn></mrow></msub><mo>⊕</mo><msub><mi>S</mi><mrow data-mjx-texclass="ORD"><mi>S</mi><mn>2</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><p>若 V = 0，则未溢出；若 V = 1，则发生溢出。</p><blockquote><p><strong>注意</strong>：对于双符号位补码，实际存储时只存一个符号位，运算时会复制一个符号位，因此不会增加存储所需要的空间。</p></blockquote><h4 id="（3）无符号数加减运算">（3）无符号数加减运算</h4><p><strong>加法</strong>：直接按位相加，同补码</p><p><strong>减法</strong>：减数<strong>全部位</strong>按位取反，末尾加一，减法变加法。</p><blockquote><p><strong>注意</strong>：本质上和补码的加减运算是一样的，因为减数的全部位按位取反再加一后，得到的结果就是减数的相反数的补码。而对于正数来说，原码和补码是相同的，所以依旧可以将其视为补码的加减运算。</p></blockquote><p><strong>溢出判断</strong>：n bit 无符号整数运算结果是否落在 0 到 2^n - 1 范围内</p><ul class="lvl-0"><li class="lvl-2"><p><strong>加法</strong>：最高位产生的进位 = 1 时，发生溢出，否则未溢出。</p></li><li class="lvl-2"><p><strong>减法</strong>：减法变加法，最高位产生的进位 = 0 时，发生溢出，否则未溢出（因为最高位进行的运算是 0 + 1，如果没有进位，说明结果的符号位是 1，为负数，不在表示范围内）。</p></li></ul><h4 id="（4）补码加减运算电路">（4）补码加减运算电路</h4><p><img src="https://bu.dusays.com/2025/02/23/67bac685bd020.png" alt="d2f3e52b-ccb1-4fdb-8cbf-a724a776b0ca"></p><p>补码加减运算电路如上图所示，<strong>Sub（Subtraction）</strong> 信号用于控制电路进行加法还是减法运算，0 表示加法，1 表示减法。当进行加法运算时，加数 B 不会被进行任何处理；进行减法运算时，B 先被按位全部取反，同时，Sub 信号还与 Cin 相连，相当于还会再进行一次加一的操作。</p><p>因为无符号数加减运算本质上和补码相同，因此该电路同样也能用于无符号数加减运算。</p><p>下图为四种标志信息的逻辑电路：</p><p><img src="https://bu.dusays.com/2025/02/23/67badc86091e0.png" alt="261d8c29-29a7-4bd4-bca7-c851bad99162"></p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="87.419ex" height="2.167ex" role="img" focusable="false" viewBox="0 -750 38639.1 958" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" fill="black" stroke="black"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(763,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1789.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2845.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4290,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(5290.3,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(7638.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8638.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g><g data-mml-node="mi" transform="translate(10416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(11416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">高</text></g><g data-mml-node="mi" transform="translate(12416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(13416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(14416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">进</text></g><g data-mml-node="mi" transform="translate(15416.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mo" transform="translate(16638.9,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(17639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">次</text></g><g data-mml-node="mi" transform="translate(18639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">高</text></g><g data-mml-node="mi" transform="translate(19639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(20639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(21639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">进</text></g><g data-mml-node="mi" transform="translate(22639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(23639.1,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(24639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">反</text></g><g data-mml-node="mi" transform="translate(25639.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">映</text></g><g data-mml-node="mstyle" fill="red" stroke="red" transform="translate(26639.1,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">符</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mstyle" fill="black" stroke="black" transform="translate(4000,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">加</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">减</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">否</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">溢</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mstyle mathcolor="black"><mi>O</mi><mi>F</mi><mo>=</mo><msub><mi>C</mi><mi>n</mi></msub><mo>⊕</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><mo>−</mo><mi mathvariant="normal">即</mi><mi mathvariant="normal">最</mi><mi mathvariant="normal">高</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">进</mi><mi mathvariant="normal">位</mi><mo>⊕</mo><mi mathvariant="normal">次</mi><mi mathvariant="normal">高</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">进</mi><mi mathvariant="normal">位</mi><mi>，</mi><mi mathvariant="normal">反</mi><mi mathvariant="normal">映</mi><mstyle mathcolor="red"><mi mathvariant="normal">带</mi><mi mathvariant="normal">符</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">数</mi><mstyle mathcolor="black"><mi mathvariant="normal">加</mi><mi mathvariant="normal">减</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">否</mi><mi mathvariant="normal">溢</mi><mi mathvariant="normal">出</mi></mstyle></mstyle></mstyle></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="83.367ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 36848.3 950" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" fill="black" stroke="black"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(645,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1671.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2727.6,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4070,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5070.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(5848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">也</text></g><g data-mml-node="mi" transform="translate(6848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">就</text></g><g data-mml-node="mi" transform="translate(7848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(8848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(9848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(10848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(11848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="mi" transform="translate(12848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(13848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(14848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">高</text></g><g data-mml-node="mi" transform="translate(15848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(16848.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(17848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">符</text></g><g data-mml-node="mi" transform="translate(18848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(19848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(20848.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(21848.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(22848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">反</text></g><g data-mml-node="mi" transform="translate(23848.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">映</text></g><g data-mml-node="mstyle" fill="red" stroke="red" transform="translate(24848.3,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">符</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mstyle" fill="black" stroke="black" transform="translate(4000,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">加</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">减</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">正</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">负</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">性</text></g></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mstyle mathcolor="black"><mi>S</mi><mi>F</mi><mo>=</mo><msub><mi>S</mi><mi>n</mi></msub><mo>−</mo><mo>−</mo><mi mathvariant="normal">也</mi><mi mathvariant="normal">就</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">最</mi><mi mathvariant="normal">高</mi><mi mathvariant="normal">位</mi><mi>（</mi><mi mathvariant="normal">符</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">位</mi><mi>）</mi><mi>，</mi><mi mathvariant="normal">反</mi><mi mathvariant="normal">映</mi><mstyle mathcolor="red"><mi mathvariant="normal">带</mi><mi mathvariant="normal">符</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">数</mi><mstyle mathcolor="black"><mi mathvariant="normal">加</mi><mi mathvariant="normal">减</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">负</mi><mi mathvariant="normal">性</mi></mstyle></mstyle></mstyle></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="90.434ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 39971.7 950" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" fill="black" stroke="black"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(723,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1749.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2805.6,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4148,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5148.3,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(6542.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(7542.7,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(646,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(8814.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(9814.7,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(646,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(11086.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(12086.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">仅</text></g><g data-mml-node="mi" transform="translate(13864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="mi" transform="translate(14864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(15864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(16864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(17864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="mi" transform="translate(18864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">所</text></g><g data-mml-node="mi" transform="translate(19864.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(20864.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(21293.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(21638.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(21999.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">全</text></g><g data-mml-node="mn" transform="translate(22999.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(23499.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(24499.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(25499.7,0)"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(26222.7,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(26971.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">才</text></g><g data-mml-node="mi" transform="translate(27971.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mn" transform="translate(28971.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(29471.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(30471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">此</text></g><g data-mml-node="mi" transform="translate(31471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(32471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(33471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">示</text></g><g data-mml-node="mi" transform="translate(34471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(35471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(36471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(37471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="mi" transform="translate(38471.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mn" transform="translate(39471.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mstyle mathcolor="black"><mi>Z</mi><mi>F</mi><mo>=</mo><msub><mi>S</mi><mi>n</mi></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>S</mi><mn>2</mn></msub><mo>+</mo><msub><mi>S</mi><mn>1</mn></msub><mo>−</mo><mo>−</mo><mi mathvariant="normal">仅</mi><mi mathvariant="normal">当</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">所</mi><mi mathvariant="normal">有</mi><mi>b</mi><mi>i</mi><mi>t</mi><mi mathvariant="normal">全</mi><mn>0</mn><mi mathvariant="normal">时</mi><mi>，</mi><mi>Z</mi><mi>F</mi><mi mathvariant="normal">才</mi><mi mathvariant="normal">为</mi><mn>1</mn><mi>，</mi><mi mathvariant="normal">此</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">示</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">为</mi><mn>0</mn></mstyle></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="78.653ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 34764.8 950" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" fill="black" stroke="black"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(760,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1786.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2842.6,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(485,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1057,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(4865.5,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(5865.7,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(7609.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(8665.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(10109.9,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(11110.2,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(748,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(12539.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(13595.3,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(485,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1057,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(15618.2,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(16618.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(17263.4,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(17835.4,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(18264.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(18986.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(19986.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(20764.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">反</text></g><g data-mml-node="mi" transform="translate(21764.8,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">映</text></g><g data-mml-node="mstyle" fill="blue" stroke="blue" transform="translate(22764.8,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">无</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">符</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mstyle" fill="black" stroke="black" transform="translate(4000,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">加</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">减</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">否</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">溢</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mstyle mathcolor="black"><mi>C</mi><mi>F</mi><mo>=</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>⊕</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>C</mi><mi>n</mi></msub><mo>⊕</mo><msub><mi>C</mi><mn>0</mn></msub><mo>=</mo><msub><mi>C</mi><mrow data-mjx-texclass="ORD"><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>⊕</mo><mi>S</mi><mi>u</mi><mi>b</mi><mn>0</mn><mo>−</mo><mo>−</mo><mi mathvariant="normal">反</mi><mi mathvariant="normal">映</mi><mstyle mathcolor="blue"><mi mathvariant="normal">无</mi><mi mathvariant="normal">符</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">数</mi><mstyle mathcolor="black"><mi mathvariant="normal">加</mi><mi mathvariant="normal">减</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">否</mi><mi mathvariant="normal">溢</mi><mi mathvariant="normal">出</mi></mstyle></mstyle></mstyle></math></mjx-assistive-mml></mjx-container><h3 id="3-定点数的乘除运算">3.定点数的乘除运算</h3><p>本节中，n 均指数值位的位数。</p><h4 id="（1）原码的乘法运算">（1）原码的乘法运算</h4><p>原码乘法的特点是：乘积的符号位由两个乘数的符号位异或得到；乘积的数值位是两个乘数的绝对值之积。</p><p><strong>原码一位乘</strong></p><p><img src="https://bu.dusays.com/2025/02/25/67bd9371501b3.png" alt="75ef8e87-2a82-487c-b6f3-1cafcbe722fd"></p><p>在进行运算时，需要先清空 ACC 寄存器，此时 MQ 寄存器中存储的是乘数。</p><p><img src="https://bu.dusays.com/2025/02/25/67bd937873a5f.png" alt="05126962-9f44-4257-9ab2-be8b4ade0fc4"></p><p>第一步，MQ 寄存器中的最低位与 X 寄存器中的被乘数相乘，结果加到 ACC 寄存器中。</p><p><img src="https://bu.dusays.com/2025/02/25/67bd937e7f131.png" alt="470f6e05-d354-44ca-930a-4f308f759753"></p><p>第二步，将 ACC 寄存器和 MQ 寄存器中的数视为一个整体，进行<strong>逻辑右移</strong>。</p><p>就这样每次都<strong>先进行加法，然后再进行移位，重复 n 次</strong>，n 为数值位的长度，最后得到结果，乘积的高位存储在 ACC 中，低位存储在 MQ 中。</p><p><strong>乘法两位乘</strong>（王道上没有？到时候看情况补吧。）</p><h4 id="（2）补码的乘法运算">（2）补码的乘法运算</h4><p>需要知道所以然吗？</p><p><strong>补码一位乘（booth算法）</strong></p><p>补码一位乘的规则是<strong>进行 n 轮加法、移位（注意是算术右移），最后再多来一次加法</strong>。</p><p>根据辅助位（初始为 0）和 MQ 最低位来决定加数的内容：</p><ul class="lvl-0"><li class="lvl-2"><p>辅助位 - MQ 最低位 = 1 时，（ACC）+ [x]补</p></li><li class="lvl-2"><p>辅助位 - MQ 最低位 = 0 时，（ACC）+ 0</p></li><li class="lvl-2"><p>辅助位 - MQ 最低位 = -1 时，（ACC）+ [-x]补</p></li></ul><p><img src="https://bu.dusays.com/2025/02/26/67bec1823efa7.png" alt="c49cf462-c4e6-4a20-8cc2-6630abbcbc6a"></p><p><strong>注意</strong>：图中红色比特位我们称之为辅助位，虽然他也在 MQ 寄存器，但为了统一，我们依旧将灰色比特位称为 MQ 最低位，在进行算术右移时，ACC 和 MQ（包括辅助位）的内容看做一个整体进行右移。</p><p><strong>补码两位乘</strong>（待定）</p><h4 id="（3-）快速乘法器">（3 ）快速乘法器</h4><p>……</p><h4 id="（4）原码的除法运算">（4）原码的除法运算</h4><p>原码除法的特点是：商的符号位由被除数和除数的符号位异或得到；商的数值位是这两个数的绝对值之商。</p><p><strong>恢复余数法</strong></p><p><img src="https://bu.dusays.com/2025/02/26/67bf0f15f0f1f.png" alt="739ebca0-f135-4f53-864b-78fb087f7dcb"></p><p>初始情况下如上图所示，MQ 寄存器清零，从末位开始上商。</p><p>但计算机不会直接判断商 1 还是商 0，而是选择先默认商1，然后求余数（ACC）-（除数）-&gt; ACC。</p><p>以改图为例就是计算出 01101 的负数的补码为 10011，然后将其与（ACC）相加，得到结果为 11110，首位为 1，说明是负数，不应该商 1。</p><p>于是计算机将商上去的 1 改为 0，再恢复余数（ACC）-（除数）-&gt; ACC。</p><p>（什么？你问我为什么原码除法里涉及了补码？计算机：什么原码补码，我不到啊，我只会算二进制加法。）</p><p>如果求出的余数是正数，则说明商 1 是正确的，不需要修改。</p><p>确定了商之后，将 ACC 和 MQ 的内容视作整体进行左移，然后继续在 MQ 的末尾上商。</p><p>以此类推，共计<strong>上商 n+1 次，逻辑左移 n 次</strong>。</p><blockquote><p><strong>注意</strong>：如果最后一步上商后余数为负，依旧需要恢复余数并改商 0 。</p></blockquote><p><img src="https://bu.dusays.com/2025/02/26/67becc6e8c644.png" alt="image-20250226154629734"></p><p>最后结果如上图所示，求得商为 0.1101，余数为 0.0111*2^(-n)，因为共左移 n 次。</p><p><strong>不恢复余数法（加减交替法）</strong></p><p><img src="https://bu.dusays.com/2025/02/26/67bf0dfd705c4.png" alt="ea17cce7-917f-4888-8747-e734ae136c7d"></p><p>回顾恢复余数法的过程，在发现余数 a 为负后，选择进行加 b 左移再减 b，最后得到新的余数。我们可以将这三步合并为两步，直接进行左移然后加 b，这就是不恢复余数法（也称加减交替法）。</p><ul class="lvl-0"><li class="lvl-2"><p>恢复余数法：当余数为负时商 0，并 + |除数|，再左移，再 - |除数|（三步）</p></li><li class="lvl-2"><p>加减交替法：当余数为负时商 0，并左移，再 + |除数|（两步）</p></li></ul><p><img src="https://bu.dusays.com/2025/02/26/67bf0e0239b14.png" alt="image-20250226161006092"></p><blockquote><p><strong>注意</strong>：虽然这种方式叫不恢复余数法，但如果最后得到的余数为负，依旧要改商 0，并加上 [|y|] 补得到正确的余数。也就是说依旧有可能会出现恢复余数的步骤。</p></blockquote><h4 id="（5）补码的除法运算">（5）补码的除法运算</h4><p>补码除法的特点：符号位参与运算，被除数（余数）、除数均采用<strong>双符号位</strong>。</p><p>具体计算流程为：</p><ul class="lvl-0"><li class="lvl-2"><p>被除数和除数同号，则被除数减去除数；异号则被除数加上除数。</p></li><li class="lvl-2"><p>余数和除数同号，商 1，余数左移一位减去除数。</p></li><li class="lvl-2"><p>余数和除数异号，商 0，余数左移一位加上除数。</p></li><li class="lvl-2"><p>重复进行 n 次。</p></li><li class="lvl-2"><p>末尾商恒置为 1（省事且精度误差不超过 2^(-n)）。</p></li></ul><p><img src="https://bu.dusays.com/2025/02/26/67bf0e07747f2.png" alt="image-20250226170134869"></p><blockquote><p><strong>注意</strong>：因为补码的加减交替法最后的末位商恒置为1，因此不会出现恢复余数的情况。</p></blockquote><p><strong>原码、补码加减交替法的比较</strong></p><table><thead><tr><th style="text-align:center">除法类型</th><th style="text-align:center">符号位参与运算</th><th style="text-align:center">加减次数</th><th style="text-align:center">移位情况</th><th style="text-align:center">上商、加减原则</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><strong>原码加减交替法</strong></td><td style="text-align:center">否</td><td style="text-align:center">n + 1 或 n + 2</td><td style="text-align:center">左移 n 次</td><td style="text-align:center">余数的正负</td><td style="text-align:center">若最终余数为负，则需恢复余数</td></tr><tr><td style="text-align:center"><strong>补码加减交替法</strong></td><td style="text-align:center">是</td><td style="text-align:center">n + 1</td><td style="text-align:center">左移 n 次</td><td style="text-align:center">余数和除数是否同号</td><td style="text-align:center">末位商恒置 1</td></tr></tbody></table><h2 id="五、浮点数的表示与运算">五、浮点数的表示与运算</h2><p><strong>规格化</strong></p><p>锐意更新中…</p><p>要碎了…</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数二 随笔</title>
      <link href="/2025/02/22/%E6%95%B0%E4%BA%8C-%E9%9A%8F%E7%AC%94/"/>
      <url>/2025/02/22/%E6%95%B0%E4%BA%8C-%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<h2 id="赞美泰勒！🙌🏻-🙌🏻-🙌🏻">赞美泰勒！🙌🏻 🙌🏻 🙌🏻</h2><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 32.155ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.943ex; min-width: 32.155ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.016ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1358.6)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1358.6) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="5028.3 -1358.6 1 2217.2" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-150.6)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(469,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(814,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1414,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2263.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3319.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4113.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(5114,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(335.3,-686)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(6784.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(7785,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8270,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(8659,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(9667.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1358.6 1 2217.2" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:1" transform="translate(0,599.4)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(1)</mtext></mtd><mtd><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo>=</mo><mi>x</mi><mo>−</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>3</mn><mo>!</mo></mrow></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 37.974ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.927ex; min-width: 37.974ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="4.986ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1351.9)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1351.9) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="6314.3 -1351.9 1 2203.7" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-165.9)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1387,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2236.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(3292.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4014.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(5015,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(335.3,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(6685.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(7686,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(335.3,-686)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(9356.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(10357,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(10842,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(11231,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(12239.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1351.9 1 2203.7" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:2" transform="translate(0,584.1)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(2)</mtext></mtd><mtd><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo>!</mo></mrow></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>4</mn></msup><mrow><mn>4</mn><mo>!</mo></mrow></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 35.352ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.943ex; min-width: 35.352ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.016ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1358.6)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1358.6) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="5734.8 -1358.6 1 2217.2" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-150.6)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(980,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1413,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1882,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2227,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2827,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3676.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4732.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5526.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(6527,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(335.3,-686)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(8197.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9198,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9683,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(10072,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(11080.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1358.6 1 2217.2" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:3" transform="translate(0,599.4)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(3)</mtext></mtd><mtd><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo>=</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>3</mn><mo>!</mo></mrow></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 32.327ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.943ex; min-width: 32.327ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.016ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1358.6)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1358.6) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="5066.3 -1358.6 1 2217.2" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-150.6)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(361,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(890,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1490,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2339.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3395.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4189.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(5190,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mn" transform="translate(474.3,-686)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(6860.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(7861,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8346,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(8735,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(9743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1358.6 1 2217.2" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:4" transform="translate(0,599.4)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(4)</mtext></mtd><mtd><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mo>=</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mn>3</mn></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 35.524ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.943ex; min-width: 35.524ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.016ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1358.6)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1358.6) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="5772.8 -1358.6 1 2217.2" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-150.6)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(980,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1413,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1774,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2303,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2903,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3752.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4808.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5602.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(6603,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mn" transform="translate(474.3,-686)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(8273.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9274,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9759,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(10148,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(11156.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1358.6 1 2217.2" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:5" transform="translate(0,599.4)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(5)</mtext></mtd><mtd><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mo>=</mo><mi>x</mi><mo>−</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mn>3</mn></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 42.688ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.943ex; min-width: 42.688ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.018ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1359)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1359) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="7356 -1359 1 2217.9" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-151)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(898,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1287,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2009.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3009.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3581.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4248.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(5304,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(6098.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(7098.4,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mn" transform="translate(474.3,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(8769.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(9769.4,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mn" transform="translate(474.3,-686)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(11440.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12440.4,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(12925.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(13314.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(14323,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1359 1 2217.9" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:6" transform="translate(0,599)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(6)</mtext></mtd><mtd><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>−</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mn>3</mn></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 39.759ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.943ex; min-width: 39.759ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="5.018ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1359)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1359) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="6708.7 -1359 1 2217.9" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-151)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(499,413) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1231.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(2287,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3009.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4009.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4803.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(5803.9,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(335.3,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(7474.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(8474.9,0)"><g data-mml-node="msup" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(335.3,-686)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="1208.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(10145.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(11145.9,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(11630.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(12019.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(13028.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1359 1 2217.9" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:7" transform="translate(0,599)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(7)</mtext></mtd><mtd><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo>!</mo></mrow></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>3</mn><mo>!</mo></mrow></mfrac><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="direction: ltr; text-align: center; margin: 1em 0; display: flex; min-width: 48.792ex; position: relative;"><svg style="overflow: visible; min-height: 1px; vertical-align: -1.862ex; min-width: 48.792ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="4.855ex" role="img" focusable="false" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1323)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1323) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="8705 -1323 1 2146" style="overflow: visible;"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,-137)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1111.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2111.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(2683.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(422,413) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(3807.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(4863.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5585.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(6585.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(7114.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7908.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(8908.9,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(529,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1669.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(2669.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3169.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(1610.2,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z" style="stroke-width: 3;"/></g></g><rect width="3758.4" height="60" x="120" y="220"/></g><g data-mml-node="msup" transform="translate(12907.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(14138.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(15138.4,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(15623.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(16012.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(17020.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1323 1 2146" style="overflow: visible;"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:8" transform="translate(0,613)"><text data-id-align="true"/><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)" style="stroke-width: 3;"/></g></g></g></g></svg></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtable displaystyle="true"><mlabeledtr><mtd><mtext>(8)</mtext></mtd><mtd><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mi>a</mi></msup><mo>=</mo><mn>1</mn><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mfrac><mrow><mi>a</mi><mo stretchy="false">(</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><mn>2</mn><mo>!</mo></mrow></mfrac><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mtd></mlabeledtr></mtable></math></mjx-assistive-mml></mjx-container>]]></content>
      
      
      <categories>
          
          <category> 高数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理 第一章 计算机系统概述</title>
      <link href="/2025/02/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%20%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
      <url>/2025/02/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%20%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、计算机系统的组成">一、计算机系统的组成</h2><p>计算机系统由<strong>硬件系统</strong>和<strong>软件系统</strong>构成。</p><p>如果一个功能既可以用硬件实现，又可以用软件实现，则称为<strong>软件和硬件在逻辑功能上是等价的</strong>。例如对于乘法，我们可以设计电路，让其能够直接计算乘法，也可以设计软件通过多次加法的方式来实现。一般来说， 硬件实现成本较高，效率也高，软件实现则反之。</p><p>既然某些功能具有软/硬件逻辑功能的等价性，那么我们在设计一个计算机系统时需要明确哪些功能由硬件实现，哪些功能由软件实现。软件和硬件功能界面的划分是由设计目标、性能性价比、技术水平等综合因素决定的。</p><p><strong>指令集体系结构（ISA）</strong>：规定了软件和硬件之间的界面。设计计算机系统的ISA，就是要定义其可以支持哪些指令，以及每条指令的作用是什么、每条指令的用法是什么。</p><h2 id="二、计算机硬件">二、计算机硬件</h2><h3 id="1-冯-·-诺依曼计算机">1.冯 · 诺依曼计算机</h3><p>冯 · 诺依曼在研究 EDVAC 机时提出了<strong>存储程序</strong>的概念，其基本思想是：将实现编制好的程序和原始数据送入主存储器后才能执行，一旦程序被启动执行，就无需操作人员的干预，计算机会自动逐条执行指令，直至程序执行结束。</p><p>以此为基础的计算机统称冯 · 诺依曼计算器，具有如下特点：</p><ol><li class="lvl-3"><p>采用<strong>存储程序</strong>的工作方式。</p></li><li class="lvl-3"><p>计算机硬件系统由<strong>运算器、存储器、控制器、输入设备和输出设备</strong> 5 大部件组成。</p></li><li class="lvl-3"><p>指令和数据以<strong>同等地位</strong>存储在存储器中，形式上没有区别，但计算机应能区分它们。</p></li><li class="lvl-3"><p>指令和数据均用二进制代码表示。</p></li><li class="lvl-3"><p>指令由操作码和地址码组成，操作码指出操作的类型，地址码指出操作数的地址。</p></li><li class="lvl-3"><p>机器<strong>以运算器为中心</strong>，输入输出设备与存储器间的数据传送通过运算器完成。</p></li></ol><p><img src="https://bu.dusays.com/2025/02/17/67b32a6aaf3a3.png" alt="49d44fdd-6b3e-4d54-a161-2059ee223da7"></p><p>上图为冯 · 诺依曼计算机硬件系统的结构，可以看到机器以运算器为中心，数据需要以运算器为中转站传输到存储器和输出设备。这种方式较为低效，因此<strong>现代计算机的结构都是以存储器为中心</strong>，输入设备可以直接将数据传输到存储器中，具体如下图所示：</p><p><img src="https://bu.dusays.com/2025/02/17/67b32a71c85a5.png" alt="2b738fd6-8fff-41dd-ab0d-3c3ecd669743"></p><p>这种方式更多地解放了运算器的时间，可以进行更多运算。</p><p>由于运算器和控制器之间的逻辑关系十分紧密，这两个部件通常被集成在同一个芯片上的，即 CPU（<strong>CPU包括运算器和控制器</strong>）。CPU和主存储器统称为主机，不包括辅存。辅存一般指固态硬盘等，我们将其归为I/O设备。辅存的信息必须调入主存之后才能为CPU所访问。我们常说的运行内容即为主存，机身内存则为辅存。</p><p><img src="https://bu.dusays.com/2025/02/17/67b32a7885690.png" alt="b406fd3f-e2f6-4cdd-a016-f08f18df81b2"></p><h3 id="2-各个硬件的工作原理">2.各个硬件的工作原理</h3><h4 id="（1）主存储器">（1）主存储器</h4><p>主存储器的工作方式是按存储单元的地址进行存取，这种存取方式称为<strong>按地址存取方式</strong>。</p><p>主存储器由<strong>存储体、存储器地址寄存器（MAR）、存储器数据寄存器（MDR）、时序控制逻辑</strong>构成。</p><p>存储体存放二进制信息；MAR 存放访存地址；MDR 用于暂存要从存储器中读或写的信息；时序控制逻辑用于产生存储器操作所需的各种时序信号。</p><p><strong>存储体</strong>由许多<strong>存储单元</strong>组成，每个存储单元包含若干<strong>存储元件</strong>，每个存储元件存储一位二级制代码 0 或 1。存储单元存储的这一串二进制代码称为<strong>存储字</strong>，这串代码的位数为<strong>存储字长</strong>，存储字长可以是 1B（8bit）或是<strong>字节的偶数倍</strong>。</p><p>MAR用于寻址，其位数反映了最多可寻址的存储单元的个数。</p><p>MDR的位数通常等于存储字长。</p><blockquote><p><strong>注意</strong>：MAR 和 MDR 虽然是存储器的一部分，但在现代计算机中却是存在于 CPU 中的；此外，后面将提到的高速缓存（Cache）也是存在于 CPU 中。故 CPU 不只包含运算器和控制器。</p></blockquote><h4 id="（2）运算器">（2）运算器</h4><p>运算器用于实现算术运算和逻辑运算。</p><p>运算器包括若干通用寄存器，用于暂存操作数和中间结果，如 <strong>累加器（ACC）、乘商寄存器（MQ）、操作数寄存器（X）、变址寄存器（IX）、基址寄存器（BR）</strong> 等，其中前三种寄存器是必须具备的。</p><ul class="lvl-0"><li class="lvl-2"><p><strong>ACC</strong>：累加器，用于存放操作数，或运算结果。</p></li><li class="lvl-2"><p><strong>MQ</strong>：乘商寄存器，在乘、除运算时，用于存放操作数或运算结果。</p></li><li class="lvl-2"><p><strong>X</strong>：通用的操作数寄存器，用于存放操作数，可能有多个。</p></li><li class="lvl-2"><p><strong>ALU</strong>：算术逻辑单元，通过内部复杂的电路实现算术运算、逻辑运算。</p></li></ul><p>运算器内还有<strong>程序状态寄存器（PSW）</strong>，也称<strong>标志寄存器</strong>，用于存放ALU运算得到的一些标志信息或处理机的状态信息，如结果是否溢出、有无产生进位或借位、结果是否为负等。</p><p>在进行不同的运算时，各存储器担任不同的功能。值得注意的是，进行乘法运算时，无论得到的乘积是否超过单个寄存器的存储上限，都会使用 ACC 来存放高位，MQ 来存放低位，因为结果本身是两倍长度。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">加</th><th style="text-align:center">减</th><th style="text-align:center">乘</th><th style="text-align:center">除</th></tr></thead><tbody><tr><td style="text-align:center">ACC</td><td style="text-align:center">被加数、和</td><td style="text-align:center">被减数、差</td><td style="text-align:center">乘积高位</td><td style="text-align:center">被除数、余数</td></tr><tr><td style="text-align:center">MQ</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">乘数、乘积低位</td><td style="text-align:center">商</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">加数</td><td style="text-align:center">减数</td><td style="text-align:center">被乘数</td><td style="text-align:center">除数</td></tr></tbody></table><h4 id="（3）控制器">（3）控制器</h4><p>控制器由 <strong>控制单元（CU）、指令寄存器（IR）、程序计数器（PC）</strong> 组成。</p><ul class="lvl-0"><li class="lvl-2"><p><strong>CU</strong>：控制单元，分析指令，给出控制信号。</p></li><li class="lvl-2"><p><strong>IR</strong>：指令寄存器，存放当前执行的指令。</p></li><li class="lvl-2"><p><strong>PC</strong>：程序计数器，存放下一条指令地址，有自动加 1 的功能。</p></li></ul><p>完成一条指令需要经历：取指令、分析指令、执行指令三个阶段（前两阶段也可统称取值）。</p><h4 id="（4）工作流程">（4）工作流程</h4><p>下面以第一条取数指令为例讲述工作流程：</p><p><img src="https://bu.dusays.com/2025/02/18/67b43f3b339d8.png" alt="4b8e9217-1506-4cd1-8bcc-5f01c2a5bd1d"></p><p><img src="https://bu.dusays.com/2025/02/18/67b43f3ead8c1.png" alt="0a368969-356a-4ace-afc2-744a1103f679"></p><ul class="lvl-0"><li class="lvl-2"><p>初始情况下，（PC）= 0，指向第一条指令的存储地址（括号表示寄存器中存储的内容）</p></li><li class="lvl-2"><p>#1：（PC）-&gt; MAR，导致（MAR）= 0</p></li><li class="lvl-2"><p>#2：主存储器根据 MAR 中存储的内容，找到存储体里0号地址所对应的数据</p></li><li class="lvl-2"><p>#3：M（MAR）-&gt; MDR，导致（MDR）= 000001 0000000101（M指主存储器）</p></li><li class="lvl-2"><p>#4：（MDR）-&gt; IR，导致（IR）= 000001 0000000101</p></li><li class="lvl-2"><p>#5：OP（IR）-&gt; CU，指令的操作码送到CU，CU分析后得知是取数指令</p></li><li class="lvl-2"><p>#6：Ad（IR）-&gt; MAR，指令的地址码送到MAR，导致（MAR）= 5</p></li><li class="lvl-2"><p>#7：主存储器根据 MAR 中存储的内容，找到存储体里0号地址所对应的数据</p></li><li class="lvl-2"><p>#8：M（MAR）-&gt; MDR，导致（MDR）= 0000000000000010 = 2</p></li><li class="lvl-2"><p>#9：（MDR）-&gt; ACC，导致（ACC）= 0000000000000010 = 2</p></li></ul><p>取指令（#1 - 4）、分析指令（#5）、执行取数指令（#6 - 9）</p><p>一般来说，不同指令的取指令和分析指令的过程都是相同的，执行阶段才会出现区别。</p><h2 id="三、计算机软件">三、计算机软件</h2><h3 id="1-系统软件和应用软件">1.系统软件和应用软件</h3><p>软件按其功能分类，可分为<strong>系统软件</strong>和<strong>应用软件</strong>。</p><p><strong>系统软件</strong>是一组保证计算机系统高效、正确运行的<strong>基础</strong>软件，通常作为系统资源提供给用户使用。系统软件包括：操作系统（OS）、数据库管理系统（DBMS）、语言处理程序、分布式软件系统、网络软件系统、标准库程序、服务性程序等。</p><p><strong>应用软件</strong>指用户为解决某个应用领域中的各类问题而编制的程序，例如我们平时常用的各种 APP 等。</p><h3 id="2-三个级别的语言">2.三个级别的语言</h3><p>三种机器语言的特点：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>机器语言</strong>：也称二进制代码语言。机器语言是计算机<strong>唯一</strong>可以识别和执行的语言。</p></li><li class="lvl-2"><p><strong>汇编语言</strong>：汇编语言使用英文单词或其缩写代替二进制的指令代码。</p></li><li class="lvl-2"><p><strong>高级语言</strong>：如C、C++、Python等。</p></li></ul><p>各种翻译器的概念：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>汇编程序（汇编器）</strong>：将汇编语言程序翻译成机器语言程序。</p></li><li class="lvl-2"><p><strong>解释程序（解释器</strong>）：将源程序中的语句按执行顺序逐条翻译成机器指令并立即执行。</p></li><li class="lvl-2"><p><strong>编译程序（编译器）</strong>：将高级语言程序翻译成<strong>汇编语言或机器语言程序</strong>。</p></li></ul><blockquote><p><strong>注意</strong>：编译程序和解释程序都能够将高级语言翻译成机器语言，前者是将源程序一次全部翻译成机器语言程序，而后再执行机器语言程序（只需翻译一次），后者则是对每一个语句进行翻译并立即执行，即每次执行都要进行翻译。因此解释型的语言要比编译型的语言效率更低。JavaScript、Python、Shell等都是解释型语言。</p></blockquote><h2 id="四、计算机系统的层次结构">四、计算机系统的层次结构</h2><h3 id="1-层次结构">1.层次结构</h3><p><img src="https://bu.dusays.com/2025/02/18/67b43f42ca425.png" alt="16bf2db9-0d03-43e1-b874-59d68ac6444b"></p><p>从下到上分别为<strong>微程序机器层</strong> -&gt; <strong>传统机器语言层</strong> -&gt; <strong>操作系统层</strong> -&gt; <strong>汇编语言层</strong> -&gt; <strong>高级语言层</strong></p><p>层次之间关系紧密，下层是上层的基础，上层是下层的扩展。下面两层属于硬件部分，上面三层属于软件部分，软件与硬件之间的界面就是指令集体系结构（ISA）。本课程所探讨的主要内容就是传统机器 M1 和微程序机器 M0。</p><h3 id="2-从源程序到可执行文件">2.从源程序到可执行文件</h3><p>文件的翻译需要经过<strong>预处理阶段、编译阶段、汇编阶段、链接阶段</strong>这四个阶段。</p><p><img src="https://bu.dusays.com/2025/02/18/67b43f47ca539.png" alt="960caba0-408f-45ba-87b8-a62b6fff9278"></p><h2 id="五、计算机的性能指标">五、计算机的性能指标</h2><h3 id="1-机器字长">1.机器字长</h3><p>我们通常说的“某 16 位或 32 位机器”，其中的 16、32 指的就是<strong>机器字长</strong>，简称<strong>字长</strong>。字长是指计算机进行一次整数运算（定点整数运算）所能处理的二进制数据的位数，通常与CPU的寄存器位数、ALU有关。</p><blockquote><p><strong>机器字长、指令字长和存储字长的关系</strong></p><ul class="lvl-1"><li class="lvl-2">指令字长：一个指令字中包含的二进制代码的位数</li><li class="lvl-2">存储字长：一个存储单元存储的二进制代码的位数</li></ul><p>早期的存储字长一般与指令字长、机器字长相等，因此访问一次主存储器便可读取出一条指令或一个数据。但随着计算机的发展，指令字长和机器字长都可变，但必须是字节的整数倍。</p></blockquote><h3 id="2-存储器的容量">2.存储器的容量</h3><p>主存容量是指主存储器所能存储信息的最大容量，通常以字节（B）来衡量，也可用字数×字长（如 512K×16 位）来表示存储容量。MAR位数反映存储单元个数，MDR位数反映存储单元的字长。</p><h3 id="3-CPU的性能指标">3.CPU的性能指标</h3><p><strong>CPU时钟周期</strong>：单位：微秒（us），纳秒（ns）</p><p><strong>CPU主频（时钟频率）</strong>：等于1/CPU时钟周期</p><p><strong>CPI（Clock cycle Per Instruction）</strong>：执行<strong>一条指令</strong>所需的时钟周期数</p><blockquote><p><strong>注意</strong>：不同指令的CPI可能不同，因此一般CPI指某程序中所有指令执行所需的平均时钟周期数，即平均CPI。相同指令的CPI也有可能不同，例如对于一个取数指令，其CPI还和主存、内存当前的状态有关。</p></blockquote><p><strong>IPS（Instructions Per Second）</strong>：每秒执行多少条指令，等于主频/平均CPI</p><p>MIPS：每秒执行多少百万条指令</p><p><strong>FLOPS（Floating-point Operations Per Second）</strong>：每秒执行多少次浮点运算</p><p>MFLOPS、GFLOPS、TFLOPS、PFLOPS、EFLOPS、ZFLOPS：每秒执行多少百万、十亿、万亿、千万亿、百京、十万京次浮点运算</p><h3 id="4-系统整体的性能指标">4.系统整体的性能指标</h3><p><strong>数据通路带宽</strong>：数据总线一次所能并行传送信息的位数（各硬件部件通过数据总线传输数据）</p><p><strong>吞吐量</strong>：指系统在单位时间内处理请求的数量</p><p><strong>响应时间</strong>：指从用户向计算机发送一个请求，到系统对该请求做出响应并获得他所需要的结果的等待时间。</p><p><strong>基准程序（Benchmarks）</strong>：专门用来进行性能评价的一组程序，能够很好的反应机器在运行实际负载时的性能。但并不是绝对准确的。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英二真题精读</title>
      <link href="/2024/12/31/%E8%8B%B1%E4%BA%8C%E7%9C%9F%E9%A2%98%E7%B2%BE%E8%AF%BB/"/>
      <url>/2024/12/31/%E8%8B%B1%E4%BA%8C%E7%9C%9F%E9%A2%98%E7%B2%BE%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="1997">1997</h2><h3 id="PartⅠ-Cloze-Test">PartⅠ Cloze Test</h3><p>Manpower Inc., with 560 000 workers, is the world's largest temporary employment agency. Every morning, its people  <span class="bubble-content">(1)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> swarm</span></span> into the offices and factories of America, seeking a day's working for a day's pay.</p><wavy>One day at a time.</wavy> <span class="bubble-content">(2)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> As</span></span> industrial giants like General Motors and IBM struggle to survive <span class="bubble-content">(3)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> by</span></span> reducing the number of employees, Manpower, based in Milwaukee, Wisconsin, is booming.<span class="bubble-content">(4)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> Even though</span></span> its economy continues to recover, the US is increasingly becoming a nation of part-timers and temporary workers. This "<span class="bubble-content">(5)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> disposable</span></span>" work force is the most important <span class="bubble-content">(6)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> trend</span></span> in American business today, and it is <span class="bubble-content">(7)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> fundamentally</span></span> changing the relationship between people and their jobs. The phenomenon provides a way for companies to remain globally competitive <span class="bubble-content">(8)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> while</span></span> avoiding market cycles and the growing burdens <span class="bubble-content">(9)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> imposed</span></span> by employment rules, health care costs and pension plans. For workers it can mean an end to the security, benefits and sense of <span class="bubble-content">(10)</span><span class="bubble-notation"><span class="bubble-item" style="background-color: yellow;"> importance</span></span> that came from being a loyal employee. <details class="folding-tag" yellow><summary> 题目及词汇 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center">题目编号</th><th style="text-align:center">选项A</th><th style="text-align:center">选项B</th><th style="text-align:center">选项C</th><th style="text-align:center">选项D</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">swarm</td><td style="text-align:center">stride</td><td style="text-align:center">separate</td><td style="text-align:center">slip</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">For</td><td style="text-align:center">Because</td><td style="text-align:center">As</td><td style="text-align:center">Since</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">from</td><td style="text-align:center">in</td><td style="text-align:center">on</td><td style="text-align:center">by</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Even though</td><td style="text-align:center">Now that</td><td style="text-align:center">If only</td><td style="text-align:center">Provided that</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">durable</td><td style="text-align:center">disposable</td><td style="text-align:center">available</td><td style="text-align:center">transferable</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">approach</td><td style="text-align:center">flow</td><td style="text-align:center">fashion</td><td style="text-align:center">trend</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">instantly</td><td style="text-align:center">reversely</td><td style="text-align:center">fundamentally</td><td style="text-align:center">sufficiently</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">but</td><td style="text-align:center">while</td><td style="text-align:center">and</td><td style="text-align:center">whereas</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">imposed</td><td style="text-align:center">restricted</td><td style="text-align:center">illustrated</td><td style="text-align:center">confined</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">excitement</td><td style="text-align:center">conviction</td><td style="text-align:center">enthusiasm</td><td style="text-align:center">importance</td></tr></tbody></table><p><strong>temporary</strong> [ˈtemprəri] a. 临时的，暂时的 &amp; n. 临时工</p><p><strong>swarm</strong> [swɔːm] v. 成群地来回移动 &amp; n. 一大群，一大批</p><p><strong>giant</strong> [ˈdʒaɪənt] n. 巨人；大公司；巨兽</p><p><strong>part-timer</strong> [ˌpɑːt ˈtaɪmə(r)] n. 兼职者；部分时间工作的人</p><p><strong>disposable</strong> [dɪˈspəʊzəbl] a. 一次性的；可任意处理的；可自由支配的</p><p><strong>burden</strong> [ˈbɜːdn] n. 负担，重担 &amp; v. 使负担 ，使承受重担</p><p><strong>impose</strong> [ɪmˈpəʊz] v. 把...强加于；推行，采用；强迫</p><p><strong>pensin</strong> ['penʃ(ə)n] n. 养老金，退休金</p><p><strong>stride</strong> [straɪd] v.大步走；阔步行走 &amp; n. 进展，进步；步态</p><p><strong>durable</strong> [ˈdjʊərəbl] a. 耐用的，持久的 &amp; n. 耐用品</p><p><strong>reversely</strong> [rɪˈvɜːsli] ad. 相反地，反向地</p><p><strong>sufficiently</strong> [sə'fɪʃ(ə)ntlɪ] ad. 足以，充分地，最大限度地</p><p><strong>whereas</strong> [ˌweərˈæz] conj. 然而，但是，尽管 &amp; n. 开场白，引言</p><p><strong>One day at a time.</strong> 一天一过。/专注于今天。</p>              </div>            </details><h3 id="Part-Ⅱ-Reading-Comprehension">Part Ⅱ Reading Comprehension</h3><h4 id="Passage-1">Passage 1</h4><p>It was 3: 45 in the morning when the vote was finally taken. After six months of arguing and final 16 hours of hot parliamentary debates, Australia's Northern Territory became the first legal authority in the world to allow doctors to take the lives of incurably ill patients who wish to die. The measure passed by the convincing vote of 15 to 10. Almost immediately word flashed on the Internet and <wavy>was picked up</wavy>, half a world away, <wavy>by John Hofsess</wavy>, executive director of the Right to Die Society of Canada. He <wavy>sent it on</wavy> via the group's on-line service, Death NET. Says Hofsess: &quot;We posted bulletins all day long, because <wavy>of course</wavy> this isn't just something that happened in Australia. It's world history.&quot;</p><wavy>The full import may take a while to sink in.</wavy> The NT Rights of the Terminally Ill law <wavy>has left physicians and citizens alike trying to deal with its moral and practical implications.</wavy> Some have <wavy>breathed sighs of relief</wavy>, others, including churches, right-to-life groups and the Australian Medical Association, bitterly attacked the bill and the haste of its passage. But the tide is unlikely to turn back. In Australia—where an aging population, life-extending technology and changing community attitudes have all played their part—other states are going to consider making a similar law to deal with euthanasia. In the US and Canada, where the right-to-die movement is gathering strength, observers are waiting for the dominoes to start falling.<p>Under the new Northern Territory law, an adult patient can request death—probably by a deadly injection or pill—to put an end to suffering. The patient must be diagnosed as terminally ill by two doctors. After a &quot;cooling off&quot; period of seven days, the patient can sign a certificate of request. After 48 hours the wish for death can be met. For Lloyd Nickson, a 54-year-old Darwin resident suffering from lung cancer, The NT Rights of Terminally Ill law means he can <wavy>get on with living without the haunting fear of his suffering</wavy>: a terrifying death from his breathing condition. &quot;I'm not afraid of dying from a spiritual point of view, but what I was afraid of was how I'd go, because I've watched people die in the hospital fighting for oxygen and clawing at their masks,&quot; he says.</p> <details class="folding-tag" yellow><summary> 题目及词汇 </summary>              <div class='content'>              <p><strong>parliamentary</strong> [ˌpɑːrləˈmentri] a. 议会的；国会的</p><p><strong>territory</strong> [ˈterətɔːri] n. 领土；地区；（美国）准州</p><p><strong>incurably</strong> [ɪn'kjʊərəblɪ] ad. 无法治愈地；无可救药地</p><p><strong>executive</strong> [ɪɡˈzekjətɪv] a. 行政的；有执行权的 &amp; n. 经理；管理人员；领导层</p><p><strong>send on</strong> 转寄，转发，转达</p><p><strong>bulletin</strong> [ˈbʊlətɪn] n. 公告；新闻简报 &amp; v. 公布；公告</p><p><strong>import</strong> [ˈɪmpɔːrt] n. 重要性；意思；输入；进口 &amp; v. 进口；导入；输入</p><p><strong>sink in</strong> 终于被充分理解；终于被完全领悟</p><p><strong>terminally</strong> ['tɜːmɪnəli] ad. 在末尾；在末期</p><p><strong>physician</strong> [fɪˈzɪʃn] n. 医师；内科医生</p><p><strong>moral</strong> [ˈmɔːrəl] a. 道德的；道德上的 &amp; n. 品行；道德；寓意</p><p><strong>implication</strong> [ˌɪmplɪˈkeɪʃn] n. 可能的影响；含义；暗指</p><p><strong>church</strong> [tʃɜːrtʃ] n. 教堂；基督教机构</p><p><strong>bitterly</strong> [ˈbɪtərli] ad. 苦涩地；伤心地；愤怒地；极其寒冷地</p><p><strong>bill</strong> [bɪl] n. 法案；议案；账单；海报；鸟嘴 &amp; v. 开账单；把…宣传为…</p><p><strong>haste</strong> [heɪst] n. 匆忙；仓促；急速 &amp; v. 匆忙；催促</p><p><strong>passage</strong> [ˈpæsɪdʒ] n. 通过；通道；段落；章节；旅程；同行许可 &amp; v. 通过；航海</p><p><strong>tide</strong> [taɪd] n. 潮汐；潮流；趋势 &amp; v. 随潮漂流</p><p><strong>euthanasia</strong> [ˌjuːθəˈneɪʒə] n. 安乐死</p><p><strong>domino</strong> [ˈdɒmɪnəʊ] n. 多米诺骨牌</p><p><strong>certificate</strong> [səˈtɪfɪkət , səˈtɪfɪkeɪt] n. 证明；合格证书；文凭 &amp; v. 发给结业证书</p><p><strong>resident</strong> [ˈrezɪdənt] n. 居民；住户；旅客 &amp; a. 居住的</p><p><strong>get on with</strong> 继续（干某事）；在…获得成功；与…友好相处;</p><p><strong>haunting</strong> [ˈhɔːntɪŋ] a. 萦绕心头的；使人难忘的</p>              </div>            </details><h4 id="Passage-2">Passage 2</h4><p>A report consistently brought back by visitors to the US is how friendly, courteous, and helpful most Americans were to them. To be fair, this observation is also frequently made of Canada and Canadians, and should best be considered North American. There are, of course, exceptions. Small-minded officials, rude waiters, and ill-mannered taxi drivers are hardly unknow in the US. Yet it is an observation made so frequently that it deserves comment.</p><p>For a long period of time and in many parts of the country, <wavy>a traveler was a welcome break in an otherwise dull existence.</wavy> Dullness and loneliness were common problems of the families who generally lived distant from one another. Strangers and travelers were welcome sources of diversion, and brought news of the outside world.</p><p>The harsh realities of the frontier also shaped this tradition of hospitality. Someone traveling alone, if hungry, injured, or ill, often <wavy>had nowhere to turn except to the nearest cabin or settlement.</wavy> It was not a matter of choice for the traveler or merely a charitable impulse on the part of the settlers. It reflected the harshness of daily life: if you didn't take in the stranger and take care of him, there was no one else who would. And someday, remember, you might be in the same situation.</p><p>Today there are many charitable organizations which specialize in helping the weary traveler. Yet, the old tradition of hospitality to strangers is  still very strong in the US, especially in the smaller cities and towns away from the busy tourist trails. &quot;I was just traveling through, got talking with this American, and pretty soon he invited me home for dinner—amazing.&quot; Such observations reported by visitors to the US are not uncommon, but are not always understood properly. <wavy>The casual friendliness of many Americans should be interpreted neither as superficial nor as artificial, but as the result of a historically developed cultural tradition.</wavy></p><p>As is true of any developed society, in America a complex set of cultural signals, assumptions, and conventions underlies all social interrelationships. And, of course, speaking a language does not necessarily mean that someone understands social and cultural patterns. Visitors who fail to &quot;translate&quot; cultural meanings properly often draw  wrong conclusions. For example, when an American uses the word &quot;friend&quot;, the cultural implications of the word may be quite different from those it has in the visitor's language and culture. It takes more than a brief encounter on a bus to distinguish between courteous convention and individual interest. Yet, being friendly is a virtue that many Americans value highly and expect from both neighbors and strangers.</p> <details class="folding-tag" yellow><summary> 题目及词汇 </summary>              <div class='content'>              <p><strong>consistently</strong> [kənˈsɪstəntli] ad. 一贯地；始终如一地</p><p><strong>courteous</strong> [ˈkɜːtiəs] a. 有礼貌的；客气的</p><p><strong>diversion</strong> [daɪˈvɜːʃn] n. 转移；转向；消遣；转移视线（或注意力）的事物</p><p><strong>frontier</strong> [ˈfrʌntɪə(r)] n. 边境；边界；边缘地区 &amp; a. 边疆的；边地的</p><p><strong>cabin</strong> [ˈkæbɪn] n. 小屋；隔间 &amp; v. 把…关在小屋里</p><p><strong>charitable</strong> [ˈtʃærətəbl] a. 慈善的；宽厚的；仁爱的</p><p><strong>take in</strong> 收容； 理解；进账；抓走；摄入；吸收；领会；参观；欣赏；欺骗</p><p><strong>weary</strong> [ˈwɪəri] a. 疲倦的；疲惫的；使人厌烦的 &amp; v. 使疲劳；使失去热情</p><p><strong>hospitality</strong> [ˌhɒspɪˈtæləti] n. 好客；殷勤款待；热情接待</p><p><strong>pretty</strong> [ˈprɪti] ad. 非常；很 &amp; a. 漂亮的；精致的 &amp; n. 漂亮的人或物</p><p><strong>interpret</strong> [ɪnˈtɜːprət] v. 解释；口译；诠释；领会</p><p><strong>superficial</strong> [ˌsuːpəˈfɪʃl] a. 表面的；肤浅的；表皮的；粗枝大叶的</p><p><strong>assumption</strong> [əˈsʌmpʃn] n. 假定；假设；（责任的）承担；（权利的）获得</p><p><strong>convention</strong> [kənˈvenʃn] n. 习俗；惯例；公约；协定；集会</p><p><strong>underlie</strong> [ˌʌndəˈlaɪ] v. 构成…的基础；作为…的原因</p>              </div>            </details><h4 id="Passage-3">Passage 3</h4><p>Technically，any substance other than food that alters our body or mental functioning is a drug. Many people mistakenly believe the term drug refers only to some sort of medicine or an illegal chemical taken by drug addicts. They don't realize that familiar substances such as alcohol and tobacco are also drugs. This is why the more neutral term substance is now used by many physicians and psychologists. The phrase “substance abuse” is often used  instead of &quot;drug abuse&quot; to make clear that substances such as alcohol and tobacco can be just as harmfully misused as heroin and cocaine.</p><p>We live a society in which the medical and social use of substances (drugs) is pervasive: an aspirin to quiet a headache, some wine to be sociable, coffee to get going in the morning, a cigarette for the nerves. When do these socially acceptable and apparently constructive uses of a substance become misuse? <wavy>First of all, most substances taken in excess will produce negative effects such as poisoning or intense perceptual distortions.</wavy> Repeated use of a substance can also lead to physical addiction or substance dependence. <wavy>Dependence is marked first by an increased tolerance, with more and more of the substance required to produce the desired effect, and then by the appearance of unpleasant withdrawal symptoms when the substance is discontinued.</wavy></p><p>Drugs (substances) that affect the central nervous system and alter perception, mood, and behavior are known as psychoactive substances. Psychoactive substances <wavy>are commonly grouped according to</wavy> whether they are stimulants, depressants, or hallucinogens. Stimulants initially speed up or activate the central nervous system, whereas depressants slow it down. Hallucinogens have their primary effect on perception, distorting and altering it in a variety of ways including producing hallucinations. These are the substances often called psychedelic (from the Greek word meaning &quot;mind-manifestation&quot;) because they seemed to radically alter one's state of consciousness.</p><details class="folding-tag" yellow><summary> 题目及词汇 </summary>              <div class='content'>              <p><strong>substance</strong> [ˈsʌbstəns] n. 物质；物品；实质；主旨；财产</p><p><strong>other than</strong> 除了…以外；不同于</p><p><strong>alter</strong> [ˈɔːltə(r)] v. 改变；修改</p><p><strong>term</strong> [tɜːm] n. 术语；措辞；词语；学期；期限 &amp; v. 把…称为；把…叫做</p><p><strong>neutral</strong> [ˈnjuːtrəl] a. 中立的；中性的 &amp; n. 中立者；中和色</p><p><strong>constructive</strong> [kənˈstrʌktɪv] a. 建设性的；有助益的；积极的；构造上的</p><p><strong>perceptual</strong> [pəˈseptʃuəl] a. 感知的；知觉的</p><p><strong>distortion</strong> [dɪˈstɔːʃn] n. 扭曲；失真；变形；曲解</p><p><strong>withdrawal</strong> [wɪðˈdrɔːəl] n. 戒毒（过程）；撤回；收回；退出；撤走</p><p><strong>symptom</strong> [ˈsɪmptəm] n. 症状;征兆</p><p><strong>psychoactive</strong> [ˌsaɪkəʊˈæktɪv] a. 作用于精神的</p><p><strong>manifestation</strong> [ˌmænɪfeˈsteɪʃn] n. 表明；显示；显灵；示威运动</p><p><strong>radically</strong> ['rædɪkli] ad. 彻底地；根本地</p>              </div>            </details><h4 id="Passage-4">Passage 4</h4><p>No company likes to be told it is contributing to the moral decline of a nation. “Is this what you intended to accomplish with your careers?&quot; Senator Robert Dole asked Time Warner executives last week. “You have sold your souls, but must you corrupt our nation and threaten our children as well?” <wavy>At Time Warner, however, such questions are simply the latest manifestation of the soul-searching that has involved the company ever since the company was born in 1990.</wavy> It’s a self-examination that has, at various times, involved issues of responsibility, creative freedom and the corporate bottom line.</p><p>At the core of this debate is chairman Gerald Levin, 56, who <wavy>took over for the late Steve Ross</wavy> in 1992. On the financial front, Levin is under pressure to raise the stock price and reduce the company’s mountainous debt, which will increase to $ 17.3 billion after two new cable deals close. He has promised to sell off some of the property and restructure the company, but investors are waiting impatiently.</p><p>The flap over rap is not making life any easier for him. Levin has consistently defended the company’s rap music on the grounds of expression. In 1992, when Time Warner was under fire for releasing Ice-T’s violent rap song Cop Killer, Levin described rap as a lawful expression of street culture, which deserves an outlet. “The test of any democratic society, ”he wrote in a Wall Street Journal column, “lies not in how well it can control expression but in whether it gives freedom of thought and expression the widest possible latitude, however disputable or irritating the results may sometimes be. We won’t retreat in the face of any threats.”</p><p>Levin would not comment on the debate last week, but there were signs that the chairman <wavy>was backing off his hard-line stand, at least to some extent.</wavy> During the discussion of rock singing verses at last month’s stockholders’ meeting, Levin asserted that “music is not the cause of society’s ills” and even cited his son, a teacher in the Bronx, New York, who uses rap to communicate with students. But he talked as well about the “balanced struggle” between creative freedom and social responsibility, and he announced that the company would launch a drive to develop standards for distribution and labeling of potentially objectionable music.</p><p>The 15-member Time Warner board is generally supportive of Levin and his corporate strategy. But insiders say several of them have shown their concerns in this matter. “Some of us have known for many, many years that the freedoms under the First Amendment are not totally unlimited, ” says Luce. “I think it is perhaps the case that some people associated with the company have only recently come to realize this.”</p><details class="folding-tag" yellow><summary> 题目及词汇 </summary>              <div class='content'>              <p><strong>senator</strong> [ˈsenətə(r)] n. 参议员；（大学理事会的）理事</p><p><strong>corrupt</strong> [kəˈrʌpt] v. 损坏；破坏；使堕落；使腐化 &amp; a. 腐败的；有缺陷的；错误的</p><p><strong>stock</strong> [stɒk] n. 股票；备料；库存；高汤 &amp; v. 存储</p><p><strong>cable</strong> [ˈkeɪbl] n. 有线电视；电缆；电报；钢索 &amp; v. （给…）发电报</p><p><strong>flap</strong> [flæp] n. 忧虑；困惑；激动；公众不同意；拍打 &amp; v. 拍击；摆动；激动；忧虑</p><p><strong>outlet</strong> [ˈaʊtlet] n. 出口；（感情、思想、精力发泄的）出路；销路；经销店</p><p><strong>democratic</strong> [ˌdeməˈkrætɪk] a.民主的；平等的</p><p><strong>latitude</strong> [ˈlætɪtjuːd] n. 维度；选择（做什么事或做事方式）的自由</p><p><strong>disputable</strong> [dɪˈspjuːtəbl] a. 有争议的；可质疑的；可商榷的</p><p><strong>extent</strong> [ɪkˈstent] n. 程度；范围；大小；限度；面积</p><p><strong>verse</strong> [vɜːs] n. 诗；韵文；歌曲的段落</p><p><strong>assert</strong> [əˈsɜːt] v.断言；生效；坚称；维护</p><p><strong>distribution</strong> [ˌdɪstrɪˈbjuːʃn] n. 分布；分配；散布</p><p><strong>objectionable</strong> [əbˈdʒekʃənəbl] a. 令人反感的；令人不快的</p>              </div>            </details><h4 id="Passage-5">Passage 5</h4><p>Much of the language used to describe monetary policy, such as “steering the economy to a soft landing” or “a touch on the brakes”, makes it sound like a precise science. Nothing could be further from the truth. The link between interest rates and inflation is uncertain. And there are long, variable lags before policy changes have any effect on the economy. <wavy>Hence the analogy that likens the conduct of monetary policy to driving a car with a blackened windscreen, a cracked rear-view mirror and a faulty steering wheel.</wavy></p><p>Given all these disadvantages, central bankers seem to have had much to boast about of late. Average inflation in the big seven industrial economies fell to a mere 2.3% last year, close to its lowest level in 30 years, before rising slightly to 2.5% this July. This is a long way below the double-digit rates which many countries experienced in the 1970s and early 1980s.</p><p>It is also less than most forecasters had predicted. <wavy>In late 1994 the panel of economists which The Economist polls each month said that America’s inflation rate would average 3.5% in 1995.</wavy> In fact, it fell to 2.6% in August, and is expected to average only about 3% for the year as a whole. In Britain and Japan inflation is running half a percentage point below the rate predicted at the end of last year. <wavy>This is no flash in the pan;</wavy> over the past couple of years, inflation has been consistently lower than expected in Britain and America.</p><wavy>Economists have been particularly surprised by favourable inflation figures in Britain and the United States, since conventional measures suggest that both economies, and especially America’s, have little productive slack.</wavy> America’s capacity utilisation, for example, hit historically high levels earlier this year, and its jobless rate (5.6% in August) has fallen below most estimates of the natural rate of unemployment— <wavy>the rate below which inflation has taken off in the past.</wavy><p>Why has inflation proved so mild? The most thrilling explanation is, unfortunately, a little defective. Some economists argue that powerful structural changes in the world have up-ended the old economic models that were based upon the historical link between growth and inflation.</p><details class="folding-tag" yellow><summary> 题目及词汇 </summary>              <div class='content'>              <p><strong>monetary</strong> [ˈmʌnɪtri] a. 金融的；货币的；财政的</p><p><strong>brake</strong> [breɪk] n. 刹车；制动器；阻力 &amp; v. 刹（车）</p><p><strong>inflation</strong> [ɪnˈfleɪʃn] n. 通货膨胀；充气</p><p><strong>lag</strong> [læɡ] n. 滞后；间隔 &amp; v. 滞后；落后于</p><p><strong>analogy</strong> [əˈnælədʒi] n. 类比；比喻</p><p><strong>liken</strong> [ˈlaɪkən] v. 把…比作</p><p><strong>double-digit</strong> [ˌdʌbl ˈdɪdʒɪt] a. 两位数的</p><p><strong>poll</strong> [pəʊl] n. 投票；民意调查 &amp; v. 获得（票数）；对…进行民意调查</p><p><strong>conventional</strong> [kənˈvenʃənl] a. 常规的；普通的；传统的</p><p><strong>slack</strong> [slæk] n. 闲置资源；煤屑 &amp; a. 不紧的；松弛的；懈怠的</p><p><strong>utilisation</strong> [ˌjuːtəlaɪˈzeɪʃn] n. 利用；利用率；效用</p><p><strong>thrilling</strong> [ˈθrɪlɪŋ] a. 惊心动魄的；紧张的；令人兴奋的</p><p><strong>defective</strong> [dɪˈfektɪv] a. 有缺陷的；有毛病的</p><p><strong>up-end</strong> [ʌp end] v. 倒立；（使）颠倒</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 真题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>湖科大2024年每日一题汇总</title>
      <link href="/2024/12/15/%E6%B9%96%E7%A7%91%E5%A4%A72024%E5%B9%B4%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2024/12/15/%E6%B9%96%E7%A7%91%E5%A4%A72024%E5%B9%B4%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>题目来源：<a href="https://space.bilibili.com/360996402">b站up主湖科大教书匠</a></p><p>更新中，未完结...</p><h2 id="第一周">第一周</h2><details class="folding-tag" blue open><summary> 9月6日 </summary>              <div class='content'>              <p><img src="https://bu.dusays.com/2024/12/15/675ec03f4e0d5.webp" alt="9-6-q"></p>              </div>            </details><details class="folding-tag" blue><summary> 查看答案 </summary>              <div class='content'>              <p>这道题要先了解 OSPF 和 ARP 的工作原理。OSPF 使用 Dijkstra 算法计算出最短路径来进行路由。主机和路由器在使用 ARP 进行 MAC 地址解析时，如果缓存的 ARP 表中不存在对应的MAC地址映射，则会发送一个ARP查询分组，目标地址是 MAC 广播地址<code>FF-FF-FF-FF-FF-FF</code>。对应主机收到报文后，会把自己的 MAC 地址放在ARP响应分组里，通过单播的形式返回给查询方。在这个过程中路径上的路由器无法得知所查询的主机的MAC地址，所以每一跳上的路由器都要单独使用 ARP 进行 MAC 地址查询。</p><p><img src="https://bu.dusays.com/2024/12/15/675ec0262578c.webp" alt="9-6-a"></p>              </div>            </details><details class="folding-tag" blue open><summary> 9月7日 </summary>              <div class='content'>              <p><img src="https://bu.dusays.com/2025/01/04/67789427c7cfc.webp" alt="9-7-q"></p>              </div>            </details><details class="folding-tag" blue><summary> 查看答案 </summary>              <div class='content'>              <p>考察子网划分，送分题。给出的两个子网前缀分别是 10 和 110，剩下的只能是 111，不过还是要对二进制转换敏感，能算得快一点。</p><p><img src="https://bu.dusays.com/2025/01/04/677894557b0fd.webp" alt="9-7-a"></p>              </div>            </details><details class="folding-tag" blue open><summary> 9月8日 </summary>              <div class='content'>              <p><img src="https://bu.dusays.com/2025/01/04/67789cca827c8.webp" alt="9-8-q"></p>              </div>            </details><details class="folding-tag" blue><summary> 查看答案 </summary>              <div class='content'>              <p>啊？你说得对，但是 PDU 是什么？不慌，先看着。首部长度字段值是 5，总长度字段是 1020，协议字段值是 17，说明封装的是 UDP 数据报。1020 减去 IPv4 首部，减去 UDP 首部 8 字节。这为什么有个 5，先按照默认 IPv4 首部长度 20 字节算吧，得到结果 992 B。</p><p>误打误撞写对了，这里字段值是 5，是因为<strong>首部长度字段的值以 <u>4B</u> 为单位</strong>！</p><p>只能说选项里没给 1007B 还是仁慈了。我笑那周瑜无谋，诸葛少智，倘若是在此处加一个 1007B，那我不是完犊子了？😋</p><p>另外 PDU 是<strong>协议数据单元（Protocol Data Unit）</strong>，用于表示数据在不同协议层之间传输时的数据单位。在物理层中称为比特、链路层中称为帧...</p><p><img src="https://bu.dusays.com/2025/01/04/6778a08830a76.webp" alt="9-8-a"></p>              </div>            </details><details class="folding-tag" blue open><summary> 9月9日 </summary>              <div class='content'>                            </div>            </details><details class="folding-tag" blue><summary> 查看答案 </summary>              <div class='content'>                            </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大英（三）口语考试</title>
      <link href="/2024/12/06/%E5%A4%A7%E8%8B%B1%EF%BC%88%E4%B8%89%EF%BC%89%E5%8F%A3%E8%AF%AD%E8%80%83%E8%AF%95/"/>
      <url>/2024/12/06/%E5%A4%A7%E8%8B%B1%EF%BC%88%E4%B8%89%EF%BC%89%E5%8F%A3%E8%AF%AD%E8%80%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>Hello everyone, thank you for your attentive presence. Today, I would like to share with you a relatively unknown topic—scoliosis surgery. This topic is particularly close to my heart as I have just gone through a long and challenging recovery period from scoliosis surgery, taking a year off from my studies. This experience has given me a profound appreciation for the advances in medical technology and a heightened awareness of the importance of health.</p><p>So, what is scoliosis? In a nutshell, scoliosis refers to a lateral curvature of the spine. This abnormal curvature can lead to asymmetry of the trunk, lower back pain, and even affect respiratory and visceral organ functions. Scoliosis surgery is highly complex, involving adjustments and corrections to the skeletal structure of the spine. The specific surgical methods may vary depending on the patient's condition, but typically involve the implantation of metal supports or screws to correct the spinal curvature. When I first learned about 6G technology, I immediately wondered if it could be applied to scoliosis surgery.</p><p>In my research, I found that many challenges related to scoliosis could be effectively addressed with the assistance of 6G. Thus,I mainly divide the application of 6G in scoliosis surgery into three aspects: the formulation of personalized surgical plans: customizing surgical plans, intelligent medical robotics and remote surgery.</p><p>Among them, what impressed me the most was customizing surgical plans. I have been officially hospitalized for a total of 171 days. However, in fact, I spent nearly half a month undergoing various examinations in the hospital to seek the best treatment plan. This is really a time-consuming task. The high speed, low latency, and large capacity of 6G technology provide robust support for personalized surgical plans, can greatly accelerate this process.</p><p>As for the remaining two aspects, I found that the three important indicators of 6G: ultra-high density positioning (sub meter level), ultra-low latency jitter, and ultra-high security all perfectly match them. Taking surgical robots as an example, if 6G support can be obtained in the future, the operating speed and safety of robots will be greatly improved. There is no doubt that these advanced technologies will bring a better treatment environment to patients.</p><p>Through my experience, I deeply understand the importance of scoliosis surgery for patients. At the same time, I see the potential brought about by 6G. In the future, I look forward to seeing that 6G can provide better treatment options and faster recovery for scoliosis patients. Through my sharing, I hope more people can get a better understanding of this surgery and cherish their health even more. Thank you all!</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 作文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客优化日志</title>
      <link href="/2024/11/27/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E6%97%A5%E5%BF%97/"/>
      <url>/2024/11/27/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Twikoo评论系统">1.Twikoo评论系统</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://twikoo.js.org/">Twikoo | 一个简洁、安全、免费的静态网站评论系统</a></p><p><s>云函数使用Vercel部署，目前评论系统需要科学上网才能使用。</s></p><p>目前已能正常使用，感谢牢饭的域名。</p><p>昵称栏输入QQ号后可自动读取头像、昵称、QQ邮箱。</p><p>有时间把具体实现过程补上。</p>              </div>            </details><h2 id="2-增加统计图表">2.增加统计图表</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-19</p><p>参考文章：<a href="https://blog.guole.fun/posts/18158/#">使用Charts插件给Butterfly增加统计图表 | Guo Le's Blog</a></p><p>具体实现效果可参照本博客。</p><p>安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-charts --save</span><br></pre></td></tr></table></figure><p>将下面配置内容写入主题配置文件<code>_config.butterfly.yml</code>中，具体内容可根据自身需求修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计图表，支持发布文章统计、发布日历、Top标签统计、分类统计、分类雷达。</span></span><br><span class="line"><span class="comment"># see https://www.npmjs.com/package/hexo-butterfly-charts</span></span><br><span class="line"><span class="attr">charts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启用功能</span></span><br><span class="line">  <span class="attr">postsChart:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">文章发布统计</span> <span class="comment"># 设置文章发布统计的标题，默认为空</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">1</span> <span class="comment"># 横坐标间隔</span></span><br><span class="line">  <span class="attr">tagsChart:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">Top</span> <span class="number">10</span> <span class="string">标签统计</span> <span class="comment"># 设置标签统计的标题，默认为空</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">1</span> <span class="comment"># 横坐标间隔</span></span><br><span class="line">  <span class="attr">postsCalendar_title:</span> <span class="string">文章发布日历</span> <span class="comment"># 设置发布日历的标题，默认为空</span></span><br><span class="line">  <span class="attr">categoriesChart_title:</span> <span class="comment"># 设置分类统计的标题，默认为空</span></span><br><span class="line">  <span class="attr">categoriesRadar_title:</span> <span class="comment"># 设置分类雷达的标题，默认为空</span></span><br><span class="line">  <span class="attr">echarts_CDN:</span> <span class="string">https://lib.baomitu.com/echarts/4.7.0/echarts.min.js</span></span><br></pre></td></tr></table></figure><p><strong>将发布日历添加到 归档 页面</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>安装插件后，在<code>/Butterfly/layout/archive.pug</code>文件中，<code>#archive</code>下面添加一行<code>#posts-calendar.js-pjax</code>, 新添加的比上一行多缩进两个空格。</p><p>修改后如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  include ./includes/mixins/article-sort.pug</span><br><span class="line">  #archive</span><br><span class="line">    #posts-calendar.js-pjax</span><br><span class="line">    .article-sort-title= _p(&#x27;page.articles&#x27;) + &#x27; - &#x27; + site.posts.length</span><br><span class="line">    +articleSort(page.posts)</span><br><span class="line">    include includes/pagination.pug</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他页面，只需<code>md</code>文件中插入这个标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;posts-calendar&quot;</span> <span class="attr">class</span>=<span class="string">&quot;js-pjax&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>              </div>            </details><p><strong>将 发布统计 添加到 归档 页面</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>安装插件后，在<code>/Butterfly/layout/archive.pug</code>文件中，<code>#archive</code>下面添加一行<code>#posts-chart.js-pjax</code>, 新添加的比上一行多缩进两个空格。</p><p>修改后如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  include ./includes/mixins/article-sort.pug</span><br><span class="line">  #archive</span><br><span class="line">    #posts-chart.js-pjax</span><br><span class="line">    .article-sort-title= _p(&#x27;page.articles&#x27;) + &#x27; - &#x27; + site.posts.length</span><br><span class="line">    +articleSort(page.posts)</span><br><span class="line">    include includes/pagination.pug</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他页面，只需<code>md</code>文件中插入这个标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;posts-chart&quot;</span> <span class="attr">class</span>=<span class="string">&quot;js-pjax&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>个人感觉不好看，删了。</p>              </div>            </details><p><strong>将 标签统计 插入到 标签 页面</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>编辑主题目录<code>/Butterfly/layout/includes/page/tags.pug</code>文件，在开头添加一行<code>#tags-chart(data-length = &quot;10&quot;).js-pjax</code>，<code>data-length = &quot;10&quot;</code>表示显示 Top 10 的标签。</p><p>修改后如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#tags-chart(data-length = &quot;10&quot;).js-pjax</span><br><span class="line">.tag-cloud-title.is-center= _p(&#x27;page.tag&#x27;)</span><br><span class="line">  |  - </span><br><span class="line">  span.tag-cloud-amount= site.tags.length</span><br><span class="line">.tag-cloud-list.is-center</span><br><span class="line">  !=cloudTags(&#123;source: site.tags, minfontsize: 1.2, maxfontsize: 2.1, limit: 0, unit: &#x27;em&#x27;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他页面，只需<code>md</code>文件中插入这个标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &quot;data-length&quot; = how many tags to show, default 10 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tags-chart&quot;</span> <span class="attr">data-length</span>=<span class="string">&quot;10&quot;</span> <span class="attr">class</span>=<span class="string">&quot;js-pjax&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>              </div>            </details><p><strong>将 分类统计（无标题）和 分类雷达图（无标题） 添加到 分类 页面。</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>编辑主题目录<code>/Butterfly/layout/includes/page/categories.pug</code>文件，在第5行添加<code>#categories-chart.js-pjax</code>和<code>#categories-radar.js-pjax</code>。</p><p>修改后如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.category-lists</span><br><span class="line">  .category-title.is-center= _p(&#x27;page.category&#x27;)</span><br><span class="line">    |  - </span><br><span class="line">    span.category-amount= site.categories.length</span><br><span class="line">  #categories-chart.js-pjax</span><br><span class="line">  #categories-radar.js-pjax</span><br><span class="line">  div!= list_categories()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他页面，只需<code>md</code>文件中插入这个标签：</p><p>分类统计（无标题）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;categories-chart&quot;</span> <span class="attr">class</span>=<span class="string">&quot;js-pjax&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>分类雷达图（无标题）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;categories-radar&quot;</span> <span class="attr">class</span>=<span class="string">&quot;js-pjax&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>              </div>            </details>              </div>            </details><h2 id="3-安知鱼波浪">3.安知鱼波浪</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-21</p><p>参考文章：<a href="https://blog.anheyu.com/posts/98c4.html">butterfly文章顶部添加波浪效果 | 安知鱼 (anheyu.com)</a></p><p>具体实现效果可参照本博客文章页面。</p><p>修改 <code>themes/butterfly/layout/includes/header/index.pug</code> 大概第 33 行左右</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">if top_img !== false</span><br><span class="line">  if is_post()</span><br><span class="line">    include ./post-info.pug</span><br><span class="line">+   section.main-hero-waves-area.waves-area</span><br><span class="line">+     svg.waves-svg(xmlns=&#x27;http://www.w3.org/2000/svg&#x27;, xlink=&#x27;http://www.w3.org/1999/xlink&#x27;, viewBox=&#x27;0 24 150 28&#x27;, preserveAspectRatio=&#x27;none&#x27;, shape-rendering=&#x27;auto&#x27;)</span><br><span class="line">+       defs</span><br><span class="line">+         path#gentle-wave(d=&#x27;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&#x27;)</span><br><span class="line">+       g.parallax</span><br><span class="line">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;0&#x27;)</span><br><span class="line">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;3&#x27;)</span><br><span class="line">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;5&#x27;)</span><br><span class="line">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;7&#x27;)</span><br><span class="line">    #post-top-cover</span><br><span class="line">      img#post-top-bg(class=&#x27;nolazyload&#x27; src=bg_img)</span><br><span class="line">  else if is_home()</span><br><span class="line">    #site-info</span><br><span class="line">      h1#site-title=site_title</span><br><span class="line">      if theme.subtitle.enable</span><br></pre></td></tr></table></figure><p>＋号部分为需要添加的内容，将 + 号替换为空格，注意缩进。</p><p>然后在<code>_config.butterfly.yml</code>的 <code>[inject.head]</code> 或者自定义 css 中 引入以下 css：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 波浪css */</span></span><br><span class="line"><span class="selector-class">.main-hero-waves-area</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">11px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waves-area</span> <span class="selector-class">.waves-svg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Animation */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: move-forever <span class="number">25s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.55</span>, <span class="number">0.5</span>, <span class="number">0.45</span>, <span class="number">0.5</span>) infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">7s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9febd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9fe82</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">13s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9fe36</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">20s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9fe</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 黑色模式背景 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">7s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171dc8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d80</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">13s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d3e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">20s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> move-forever &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(-<span class="number">90px</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">85px</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Shrinking for mobile*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.waves-area</span> <span class="selector-class">.waves-svg</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里 css 中<code>fill属性</code>可以控制波浪颜色，建议使其中一个颜色与背景颜色一致。</p>              </div>            </details><h2 id="4-渐变色版权美化">4.渐变色版权美化</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://akilar.top/posts/8322f8e6/">（二创）Copyright-beautify | Akilarの糖果屋</a>友链部分字体似乎被同步修改为蓝色，很丑...</p>              </div>            </details><h2 id="5-友链样式功能升级">5.友链样式功能升级</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://akilar.top/posts/57291286/">Friend Link Card Beautify | Akilarの糖果屋</a></p><p>就喜欢这种大开大合的删减！</p><p>注意部分模式需要额外添加缩略图，即添加一条名为<code>siteshot</code>的配置项。</p><p>有时间把具体实现过程搬过来，但是我不是很喜欢这个风格，后悔了，还不如直接用外挂标签的网站卡片来的好看。</p>              </div>            </details><h2 id="6-导航栏魔改">6.导航栏魔改</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-19</p><p><strong>菜单居中</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>参考文章：<a href="https://www.fomal.cc/posts/eec9786.html">博客魔改教程总结(五) | Fomalhaut🥝</a></p>              </div>            </details><p><strong>颜色修改</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p><code>custom.css</code> 文件插入如下内容，渐变色导航栏。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 导航栏 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">    <span class="comment">/*background: rgba(135,206,250, 0.75);*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">            -<span class="number">45deg</span>,</span><br><span class="line">            <span class="number">#e8d8b9</span>,</span><br><span class="line">            <span class="number">#a3e9eb</span>,</span><br><span class="line">            <span class="number">#00BFFF</span></span><br><span class="line">    );</span><br><span class="line">    backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的 <code>backdrop-filter: var(--backdrop-filter);</code>是博主前置修改内容，无法照搬，只把颜色修改部分搬过去就OK。</p>              </div>            </details>              </div>            </details><h2 id="7-加载动画">7.加载动画</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://blog.anheyu.com/posts/52d8.html">Heo同款loading动画 | 安知鱼 (anheyu.com)</a></p><p>豪坎！</p>              </div>            </details><h2 id="8-引入iconfont彩色图标">8.引入iconfont彩色图标</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://butterfly.js.org/posts/4073eda/">Butterfly进阶教程</a></p>              </div>            </details><h2 id="9-首页轮播">9.首页轮播</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://akilar.top/posts/8e1264d1/">Swiper Bar | Akilarの糖果屋</a></p><p>哎，差点意思。</p>              </div>            </details><h2 id="10-hexo-magnet-插件">10.hexo-magnet 插件</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://www.fomal.cc/posts/eec9786.html">分类: 魔改教程 | Fomalhaut🥝</a>](https://zfe.space/post/hexo-magnet.html)</p><p>挺可爱的。记得加入黑夜模式适配。</p>              </div>            </details><h2 id="11-主题色修改">11.主题色修改</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>Butterfly的主题色配置似乎存在bug，直接跑到 <code>var.style</code> 文件狠狠修改变量，简单粗暴。</p>              </div>            </details><h2 id="12-樱花飘落特效">12.樱花飘落特效</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-19</p><p><strong>使用方式</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>在对应页面加入<code>&lt;script async src=&quot;https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js&quot;&gt;&lt;/script&gt;</code>。</p><p>或者在主题配置文件中全局引入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>挺好看的，就是看久了有点烦，全局引入还是算了。</p><p>想到了那句歌：</p><blockquote><p>さくら さくら 会いたいよ</p><p>いやだ 君に今すぐ会いたいよ</p></blockquote><p>好汀！</p>              </div>            </details><p><strong>单页面引用时与 pjax 产生冲突时的解决方案</strong></p><details class="folding-tag" yellow><summary> 点击查看详情 </summary>              <div class='content'>              <p>我只在友链界面引入了樱花特效，但是由于我我开启了pjax，导致页面切换时樱花特效会一直保留，虽然我们可以手动刷新来清除，但是这样操作过于丑陋了，下面给出我自己的解决方案。</p><p>在source/js目录下新建sakura.js文件，写入如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">loadSakuraScript</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 检查当前页面路径，决定是否加载樱花特效</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span> === <span class="string">&quot;/link/&quot;</span>) &#123; <span class="comment">// 修改为实际路径</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#sakuraScript&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">                script.<span class="property">id</span> = <span class="string">&quot;sakuraScript&quot;</span>;</span><br><span class="line">                script.<span class="property">src</span> = <span class="string">&quot;https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js&quot;</span>;</span><br><span class="line">                script.<span class="property">async</span> = <span class="literal">true</span>;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;樱花脚本已加载&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">50</span>); <span class="comment">// 延迟 50ms</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeSakuraEffect</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 查找可能的 DOM 元素</span></span><br><span class="line">    <span class="keyword">const</span> sakuraCanvas = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (sakuraCanvas) &#123;</span><br><span class="line">        sakuraCanvas.<span class="title function_">remove</span>(); <span class="comment">// 移除特效 Canvas</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;樱花 Canvas 已移除&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 停止所有动画帧（全局强制停止）</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">cancelAnimationFrame</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> id = <span class="variable language_">window</span>.<span class="title function_">requestAnimationFrame</span>(<span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">        <span class="keyword">while</span> (id--) &#123;</span><br><span class="line">            <span class="title function_">cancelAnimationFrame</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;所有动画帧已停止&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除动态加载的脚本</span></span><br><span class="line">    <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#sakuraScript&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (script) &#123;</span><br><span class="line">        script.<span class="title function_">remove</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;樱花脚本已移除&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  页面切换前清除樱花特效</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;pjax:send&quot;</span>, removeSakuraEffect);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  页面切换结束后进行检测</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;pjax:complete&quot;</span>, loadSakuraScript);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面初次加载或刷新时也要检测路径</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, loadSakuraScript);</span><br></pre></td></tr></table></figure><p>然后在主题配置文件的inject部分引入改脚本即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment">#  樱花特效</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/sakura.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>该脚本的主要思路就是取消直接通过标签的方式引用特效（所以记得删除对应页面的特效标签，避免重复加载），通过自定义函数来实现，仅在需要启用特效的页面动态加载。在pjax回调中控制樱花特效的加载与清理，如果检测到页面切换，会在切换前清理掉樱花特效。当进入一个新的页面，会检查当前路径是否需要加载樱花特效。因此我们可以直接修改<code>addEventListener（）</code>函数来控制特效具体要加载在哪些界面。</p><p>嘻嘻，我真厉害。</p>              </div>            </details>              </div>            </details><h2 id="13-字体修改">13.字体修改</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://www.fomal.cc/posts/eec9786.html">分类: 魔改教程 | Fomalhaut🥝</a></p><p>修改字体为霞鹜文楷，楷体真的满足了我对文字的一切美好幻想。</p>              </div>            </details><h2 id="14-markdown渲染器升级">14.markdown渲染器升级</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-19</p><p>参考文章：<a href="https://blog.csdn.net/qq_42951560/article/details/123596899">【Hexo】选择更高级的Markdown渲染器_hexo-renderer-marked-CSDN博客</a></p><p>卸载自带的渲染器：<code>npm un hexo-renderer-marked --save</code></p><p>下载新的：<code>npm i hexo-renderer-markdown-it --save</code></p><p>在Hexo配置文件中加入以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">preset:</span> <span class="string">&quot;default&quot;</span>          <span class="comment"># 使用 Markdown-it 的默认预设，可以改为 &#x27;commonmark&#x27; 或 &#x27;zero&#x27;</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span>               <span class="comment"># 允许在 Markdown 中直接使用 HTML 标签</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span>          <span class="comment"># 禁用 XHTML 输出格式</span></span><br><span class="line">    <span class="attr">langPrefix:</span> <span class="string">&quot;language-&quot;</span>  <span class="comment"># 为代码块的语言添加前缀（如 &quot;language-js&quot;）</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span>             <span class="comment"># 将 Markdown 中的换行符转换为 &lt;br&gt; 标签</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">false</span>           <span class="comment"># 自动将类似 URL 的文本转换为可点击链接</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">false</span>       <span class="comment"># 启用排版优化（例如，将普通引号转成智能引号）</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&quot;“”‘’&quot;</span>           <span class="comment"># 定义引号的样式，使用中文引号样式</span></span><br><span class="line">  <span class="attr">enable_rules:</span>              <span class="comment"># 启用的 Markdown-it 渲染规则（留空表示默认规则）</span></span><br><span class="line">  <span class="attr">disable_rules:</span>             <span class="comment"># 禁用的 Markdown-it 渲染规则（留空表示没有禁用任何规则）</span></span><br><span class="line">  <span class="attr">plugins:</span>                   <span class="comment"># 配置要启用的 markdown-it 插件列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span>       <span class="comment"># 支持缩写 (abbr) 语法</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-cjk-breaks</span> <span class="comment"># 支持中文、日文、韩文换行</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-deflist</span>    <span class="comment"># 支持定义列表 (definition list) 语法</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span>      <span class="comment"># 支持 Emoji 表情</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span>   <span class="comment"># 支持脚注</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span>        <span class="comment"># 支持插入内容 &lt;ins&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-mark</span>       <span class="comment"># 支持标记内容 &lt;mark&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span>        <span class="comment"># 支持下标 &lt;sub&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span>        <span class="comment"># 支持上标 &lt;sup&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-checkbox</span>   <span class="comment"># 支持复选框语法</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-imsize</span>     <span class="comment"># 支持自定义图片尺寸</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-expandable</span> <span class="comment"># 支持可折叠内容</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-mathjax3</span>        <span class="comment"># 支持数学公式 (MathJax3)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">markdown-it-container</span> <span class="comment"># 支持自定义容器 block，用于设置各种自定义内容块</span></span><br><span class="line">      <span class="attr">options:</span> <span class="string">success</span>            <span class="comment"># 定义 &quot;success&quot; 类型的容器（例如，用于成功提示）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">markdown-it-container</span></span><br><span class="line">      <span class="attr">options:</span> <span class="string">tips</span>               <span class="comment"># 定义 &quot;tips&quot; 类型的容器（例如，用于小提示）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">markdown-it-container</span></span><br><span class="line">      <span class="attr">options:</span> <span class="string">warning</span>            <span class="comment"># 定义 &quot;warning&quot; 类型的容器（例如，用于警告提示）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">markdown-it-container</span></span><br><span class="line">      <span class="attr">options:</span> <span class="string">danger</span>             <span class="comment"># 定义 &quot;danger&quot; 类型的容器（例如，用于危险提示）</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span>                            <span class="comment"># 设置锚点的级别，表示从第 2 级标题开始生成锚点（如 `&lt;h2&gt;` 标签）。通常，标题的级别从 1 开始，`level: 2` 表示为所有 2 级及以上标题生成锚点。</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&quot;&quot;</span>                 <span class="comment"># 如果多个标题的锚点链接相同（例如标题文本相同），此选项控制如何避免冲突。默认为空，表示不添加任何后缀（你可以设置为数字后缀如 `-1`, `-2` 等）。</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span>                    <span class="comment"># 是否为每个标题生成永久链接。设置为 `false` 表示不生成锚点链接。如果设置为 `true`，则每个标题将拥有一个对应的可点击的锚点。</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">&quot;header-anchor&quot;</span>     <span class="comment"># 为每个标题的锚点链接添加 CSS 类。这里设置为 `header-anchor`，你可以使用该类来定制锚点的样式。</span></span><br><span class="line">    <span class="attr">permalinkSide:</span> <span class="string">&quot;left&quot;</span>               <span class="comment"># 设置锚点链接显示的位置。`left` 表示链接显示在标题的左边，`right` 则显示在右边。</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">&quot;¶&quot;</span>               <span class="comment"># 设置锚点链接的符号，这里使用 `¶` 符号表示，通常用于表示段落的标记。你可以根据需要更换为其他符号。</span></span><br><span class="line">    <span class="attr">case:</span> <span class="number">0</span>                             <span class="comment"># 控制锚点文本的大小写。`0` 表示不修改大小写，`1` 表示转换为小写，`2` 表示转换为大写。</span></span><br><span class="line">    <span class="attr">separator:</span> <span class="string">&quot;-&quot;</span>                      <span class="comment"># 设置锚点生成时，标题中的空格或特殊字符如何替换，默认为 `-`，即空格会被替换成破折号（例如 `My Title` 会变成 `my-title`）。</span></span><br></pre></td></tr></table></figure><p>额外下载四个markdown-it没有的插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm i markdown-it-checkbox</span><br><span class="line">npm i markdown-it-imsize</span><br><span class="line">npm i markdown-it-expandable</span><br><span class="line">npm i markdown-it-mathjax3</span><br></pre></td></tr></table></figure><p>在主题配置文件中对Math部分进行相关配置，选择启用mathjax，并自行选择其他个性化调整。</p><p>统统加进去，我可以不用，但不能没有（</p>              </div>            </details><h2 id="15-导航栏取消文章标题显示">15.导航栏取消文章标题显示</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-19</p><p>我的文章标题都很长，放在导航栏上很丑，还会和其他部件重叠，因此想要关掉。</p><p>实现方法也很简单，把<code>themes/butterfly/layout/includes/header/nav.pug</code>文件中的<code>span.site-name=(page.title || config.title)</code>修改成<code>span.site-name=(config.title)</code>。</p><p>即取消对文章标题的判断，直接显示博客的标题。</p>              </div>            </details><h2 id="16-引入外挂标签">16.引入外挂标签</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://www.fomal.cc/posts/5389e93f.html">分类: 魔改教程 | Fomalhaut🥝</a></p><p>格式汇总：<a href="https://www.fomal.cc/posts/2013454d.html">Markdown语法与外挂标签写法汇总 | Fomalhaut🥝</a></p><p>实测<code>hexo-renderer-markdown-it</code>渲染器可以支持。</p><p>Butterfly外挂标签很好看，可惜原生markdown不支持这些花里胡哨的东西，不知道会不会养成坏习惯。</p>              </div>            </details><h2 id="17-标题小风车">17.标题小风车</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>参考文章：<a href="https://blog.anheyu.com/posts/sdxhu.html">butterfly 重装日记 | 安知鱼 (anheyu.com)</a></p><p>风车风车还是小风车，真没创意。</p>              </div>            </details><h2 id="18-个人卡片渐变色">18.个人卡片渐变色</h2><details class="folding-tag" cyan><summary> 查看教程 </summary>              <div class='content'>              <p>最后更新时间：2024-12-21</p><p>参考文章：<a href="https://www.fomal.cc/posts/eec9786.html">博客魔改教程总结(一)</a></p><p>在<code>[BlogRoot]\source\css\custom.css</code>自定义样式的文件中引入如下代码（最后记得在<code>inject</code>配置项引入该文件）：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 侧边栏个人信息卡片动态渐变色 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    -<span class="number">45deg</span>,</span><br><span class="line">    <span class="number">#e8d8b9</span>,</span><br><span class="line">    <span class="number">#eccec5</span>,</span><br><span class="line">    <span class="number">#a3e9eb</span>,</span><br><span class="line">    <span class="number">#bdbdf0</span>,</span><br><span class="line">    <span class="number">#eec1ea</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgb</span>(<span class="number">66</span>, <span class="number">68</span>, <span class="number">68</span>);</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  -moz-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑夜模式适配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#191919ee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 个人信息Follow me按钮 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &gt; <span class="selector-id">#card-info-btn</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3eb8be</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程</title>
      <link href="/2024/11/26/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2024/11/26/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>开个坑，会填的，会填的...</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语翻译练习</title>
      <link href="/2024/11/11/%E8%8B%B1%E8%AF%AD%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
      <url>/2024/11/11/%E8%8B%B1%E8%AF%AD%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="翻译1：太湖（Lake-Tai）">翻译1：太湖（Lake Tai）</h2><p>With an area of 2250 square kilometers, Lake Tai in eastern China is the third largest freshwater lake after Poyang Lake and Dongting Lake. The lake houses about 90 islands, ranging in size from a few square meters to several square kilometers. The lake is renowned for its unique &quot;Taihu stones&quot;, which are often employed to decorated traditional Chinese gardens. The lake is also known for its productive fishing industry. Since the late 1970s, harvesting fish and crabs has been invaluable to people living along the lake and has contributed significantly to the economy of the surrounding area. The lake area is home to an extensive ceramics industry, including the Yixing pottery factory, which produces the world-renowned Yixing clay teapots.</p><ul class="lvl-0"><li class="lvl-2"><p>be the third largest freshwater lake after</p></li><li class="lvl-2"><p>range in size form … to … / with size ranging form … to …</p></li><li class="lvl-2"><p>be renowned for / as</p></li><li class="lvl-2"><p>be employed to</p></li></ul><details class="folding-tag" blue><summary> 查看原文 </summary>              <div class='content'>              <p>太湖是中国东部的一个淡水湖，占地面积 2250 平方公里，是中国第三大淡水湖，仅次于潘阳和洞庭。太湖约有 90 个岛屿，大小从几平方米到几平方公里不等。太湖以其独特的“太湖石”而文明，太湖石常用于装饰中国传统园林。太湖也以高产的捕鱼业闻名。自上世纪 70 年代后期以来，捕捞鱼蟹对沿湖的居民来说极为重要，并对周边地区的经济做出了重大的贡献。太湖地区是中国陶瓷业基地之一，其中宜兴的陶瓷厂家生产举世闻名的宜兴紫砂壶。</p>              </div>            </details><h2 id="翻译2：青海湖">翻译2：青海湖</h2><p>3205 meters above the sea level, Qinghai Lake is located about 100 kilometers west of Xining, the capital of Qinghai Province. As the largest saline lake in China, it has a surface area of 4317 square kilometers with a maximum depth of 25.5 meters. There are 23 rivers that empty into Qinghai Lake, most of which are seasonal. Five major rivers provides 80% of the lake's total influx. Located at the crossroads of several bird migration routes across Asia, Qinghai Lake offers many species of birds an intermediate stop during their migration. On the western side of the lake are the well-known &quot;Bird Island&quot;, which attract birdwatchers from across the globe. Every summer sees numerous visitors come here to watch the Qinghai Lake International Cycling Race.</p><ul class="lvl-0"><li class="lvl-2"><p>be … above the sea level</p></li><li class="lvl-2"><p>empty into流入；把（某容器）中之物全部倒进（另一容器）</p></li></ul><details class="folding-tag" green><summary> 查看原文 </summary>              <div class='content'>              <p>青海湖位于海拔 3205 米、青海省省会西宁以西约 100 公里处，是中国最大的咸水湖，面积 431平方公里，最深处 25.5 米。有 23 条河注入湖中，其中大部分是季节性的。百分之八的湖水源于五条主要河流。青海湖位于跨越亚洲的几条候鸟迁徙路线的交叉处。许多鸟类把青海湖作为迁徙过程中的暂息地。湖的西侧是著名的“鸟岛”，吸引着来自世界各地的观鸟者。每年夏天，游客们也来这里观看国际自行车比赛。</p>              </div>            </details><h2 id="翻译3：洞庭湖">翻译3：洞庭湖</h2><p>Dongting Lake is a large, shallow lake in northeastern Hunan Province of China. It is a flood basin of Yangtze River. Hence, the lake's size depends largely on the season. The provinces of Hubei and Hunan are named after their relative location to the lake. Hubei means &quot;North of the Lake&quot; while Hunan means &quot;South of the Lake&quot;. Dongting Lake is famous in Chinese culture as the birthplace of dragon boat racing, which is said to have begun on the eastern shore of Dongting Lake as a search for the body of Qu Yuan, a patriotic poet of the Chu. Together with the lake and its surrounding beauty, the racing appeals to tens of thousands of tourists <wavy>from other parts of China and beyond</wavy> each year.</p><ul class="lvl-0"><li class="lvl-2"><p>basin [ˈbeɪsn]n. 盆；洗涤槽；流域；盆地；内港，内湾</p></li><li class="lvl-2"><p>hence</p></li><li class="lvl-2"><p>patriotic [ˌpætriˈɒtɪk]a. 爱国的</p></li><li class="lvl-2"><p>be named after</p></li></ul><details class="folding-tag" red><summary> 查看原文 </summary>              <div class='content'>              <p>洞庭湖位于湖南省东北部，面积很大，但湖水很浅。洞庭湖是长江的蓄洪池，湖的大小很大程度上取决于季节变换。湖北和湖南两省因其与湖的相对位置而得名：湖北意为“湖的北边”，而湖南意为“湖的南边”。洞庭湖作为龙舟赛的发源地，在中国文化中享有盛名。据说龙舟赛始于洞庭湖东岸，为的是搜寻楚国爱国诗人屈原的遗体。龙舟赛与洞庭湖及周边的美景，每年都吸引着成千上万来自全国和世界各地的游客。</p>              </div>            </details><h2 id="翻译4：明朝">翻译4：明朝</h2><p>The Ming Dynasty, which ruled China for 276 years, was depicted as one of the greatest periods of human history for its good governance and social stability. During this period, the thriving handicrafts industry fostered the development of market economy and urbanization. Commodities, including alcohol and silk products, were available on the market in large quantities. At the same time, clocks and tobacco produces, among many other foreign goods, were imported. Beijing, Nanjing, Yangzhou and Suzhou emerged as large commercial centers one after another. It was also during the Ming Dynasty that fleets headed by Navigator Zheng He made seven large-scale, adventurous voyages to the Indian Ocean. What is also worth mentioning is that three of the Four Great Classical Novels of China were written during this period.</p><ul class="lvl-0"><li class="lvl-2"><p>commodity</p></li><li class="lvl-2"><p>tobacco [təˈbækəʊ]</p></li><li class="lvl-2"><p>fleet</p></li><li class="lvl-2"><p>voyage [ˈvɔɪɪdʒ] v.&amp;n.</p></li><li class="lvl-2"><p>be depicted as</p></li><li class="lvl-2"><p>what is worth mentioning is that</p></li></ul><details class="folding-tag" yellow><summary> 查看原文 </summary>              <div class='content'>              <p>明朝统治中国276年，被人们描绘成人类历史上治理有序、社会稳定的最伟大的时代之一。这一时期，手工业的发展促进了市场经济和城市化。大量商品，包括酒和丝绸，都在市场销售。同时，还进口许多外国商品，如时钟和烟草。北京、南京、扬州、苏州这样的大商业中心相继形成。也是在明代，由郑和率领的船队曾到印度洋进行了七次大规模探险航行。还值得一提的是，中国文学的四大经典名著中有三部写于明代。</p>              </div>            </details><h2 id="翻译5：宋朝">翻译5：宋朝</h2><p>During the Song Dynasty, which lasted from 960 till 1279, the economic boom made China the most developed country in the world and science, technology, philosophy and mathematics also flourished. <wavy>China back then was</wavy> the first country to issue paper money, use gunpowder and invent movable-type printing in the world. As population <wavy>ballooned</wavy> rapidly, more and more people moved to cities where there were <wavy>bustling entertainment venues</wavy>. China during the Song Dynasty featured diverse social life. People gathered to appreciate and trade valuable art works. The Song Dynasty featured advanced administration system, with all officials appointed through competitive examination.</p><p>balloon [bəˈluːn]v.&amp;n.</p><p>back then当时;那时候</p><details class="folding-tag" blue><summary> 查看原文 </summary>              <div class='content'>              <p>宋朝始于960年，一直延续到1279年。这一时期，中国经济大幅增长，成为世界上最先进的经济体，科学、技术、哲学和数学蓬勃发展。宋代中国是世界历史上首先发行纸币的国家。宋朝还最早使用火药并发明了活字（movable-type）印刷。人口增长迅速，越来越多的人住进城市，那里有热闹的娱乐场所。社会生活多种多样。人们聚在一起观看和交易珍贵艺术品。宋朝的政府体制在当时也是先进的。政府官员均通过竞争性考试选拔任用。</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 刷题 </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</title>
      <link href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/"/>
      <url>/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥计算机网络 自顶向下方法 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网">《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</a></li><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第二章 应用层">《计算机网络 自顶向下方法》笔记：第二章 应用层</a></li><li><a href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第三章 传输层">《计算机网络 自顶向下方法》笔记：第三章 传输层</a></li><li><a href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面">《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</a></li><li><a href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面">《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</a></li><li><a href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网">《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</a></li></ol></blockquote><h2 id="一、引论和服务">一、引论和服务</h2><h3 id="1-网络节点的连接方式">1.网络节点的连接方式</h3><p><strong>WAN（广域网）一般采用点到点的链路连接</strong>，因为距离较远，带宽大，采用多点连接方式一旦出现碰撞代价过大。</p><p><strong>LAN（局域网）一般采用多点连接方式</strong>，节点只需要连接到共享型介质上，就可以实现与其他所有节点的互通，但多个节点同时尝试发送数据时，可能会产生数据碰撞。</p><p>点到点的链路的链路层服务实现很简单，只是单纯的封装和解封装；多点连接方式网络的链路层功能较为复杂，需要考虑多点接入（协调各节点对共享型介质的访问和使用）、竞争方式（发生冲突之后的协调）、令牌方式（令牌的产生、占有和释放。这里的令牌是一种特殊的数据包，用于控制网络设备访问共享通信介质的一种机制，只有持有令牌的结点才被允许发送数据）等问题。</p><p>在后面的内容中，我们统一规定：</p><ul class="lvl-0"><li class="lvl-2"><p>运行链路层协议的任何设备都称为<strong>节点（node）</strong>，如主机、路由器、交换机和WiFi接入点等。</p></li><li class="lvl-2"><p>沿通信路径连接相邻节点的通信信道称为<strong>链路（link）</strong>，可以是有线链路、无线链路、局域网（共享型链路）。</p></li><li class="lvl-2"><p>在通过特定的链路时，传输节点将数据报封装在<strong>链路层帧</strong>中，并将该帧传送到链路中。</p></li></ul><h3 id="2-链路层提供的服务">2.链路层提供的服务</h3><p>如果说网络层解决的是端到端（主机到主机）的问题，那么链路层解决的是则点到点的问题（这里的点指主机或者路由器）。</p><p>虽然从整体上看链路层提供的服务都是将来自网络层的数据报封装成帧，然后通过单一通信链路从一个节点移动到相邻节点，但具体实现的细节会随着链路层协议的不同而变化。从网络层的角度上看，是直接从一个主机发送到另一个主机，但从链路层的角度看，可能第一跳链路是以太网链路，第二跳链路是帧中继链路，第三跳是无线局域网（如Wi-Fi 802.11标准）。这好比我们从大连到合肥，先坐地铁，再坐飞机，最后坐公交，经历了三种不同的运输方式。</p><p>链路层协议能够提供的可能服务包括：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>成帧（framing）</strong>：一个帧由一个数据字段和若干首部字段组成，其中网络层数据报就插在数据字段中，帧头部使用“<strong>MAC</strong>”（物理）地址来标示源和目的。帧的具体结构在不同的链路层协议中会有所不同。</p></li><li class="lvl-2"><p><strong>链路接入</strong>：<strong>媒体访问控制协议（Medium Access Control，MAC）协议</strong>（这里的MAC和前面的MAC地址是两个不同的概念，天天用缩写终于还是出事了吧doge）规定了帧在链路上传输的规则。点对点链路上，MAC协议主要确保无论何时链路空闲，都能够顺利发送帧；多点连接的情况下，MAC协议较为复杂，用于协调多个节点的帧传输。</p></li><li class="lvl-2"><p><strong>可靠交付</strong>：当链路层协议提供可靠交付服务时，它保证无差错地经链路层移动每个网络层数据报。但是在一些低出错率的链路上（光纤、同轴电缆、和双绞铜线链路）一般不提供可靠地交付服务。</p></li><li class="lvl-2"><p><strong>差错检测和纠正</strong>：链路层的差错检测相较于上两层通常更复杂，并且用<strong>硬件</strong>实现。一般通过让发送节点在帧中包括差错检测比特，接收节点进行差错检查的方式来完成这项工作。差错纠正类似于差错检测，区别在于能额外确定帧中差错的位置并纠正。后面我们将详细介绍具体流程。</p></li><li class="lvl-2"><p><strong>半双工和全双工</strong>：半双工指链路可以双向传输，但是同一时刻只能有一个方向。</p></li></ul><h3 id="3-链路层实现的位置">3.链路层实现的位置</h3><p>链路层的主体部分实在<strong>网络适配器（network adapter）<strong>中实现的，也被称为</strong>网络接口卡（Network Interface Card，NIC）</strong>，就是我们通常说的网卡。网络适配器实现链路层功能和相应的物理层功能，具体关系如下面的主机体系结构所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457df8e66c6.png" alt="1"></p><p>链路层的实现存在于网络中每一个主机、路由器、交换机上，它们之间的通信如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e007f874.png" alt="2"></p><p>发送方：</p><ul class="lvl-0"><li class="lvl-2"><p>在帧中封装数据报。</p></li><li class="lvl-2"><p>加上差错控制编码，实现RDT（Reliable Data Transfer，可靠数据传输）和流量控制功能等。</p></li></ul><p>接收方：</p><ul class="lvl-0"><li class="lvl-2"><p>检查有无出错，执行RDT和流量控制功能等。</p></li><li class="lvl-2"><p>解封装数据报，将其交给上层。</p></li></ul><h2 id="二、差错检测和纠正">二、差错检测和纠正</h2><h3 id="1-场景介绍">1.场景介绍</h3><p><img src="https://bu.dusays.com/2024/11/26/67457e08c88c3.png" alt="3"></p><p>上图是我们研究差错检测与纠正技术的环境。在发送节点，为了保护比特免受差错，使用<strong>差错检测和纠正比特（Error-Detection and-Correction，EDC）</strong> 对数据D进行增强，D即为我们需要保护的数据，它不仅包括从网络层传递下来的数据报，还包括链路帧首部中的链路级的寻址信息、序号。接收方的任务是在只接收到D'和EDC'的情况下，确认D'和D是否相同。</p><p>差错检测和纠正技术并非总能检测出已经出现的比特差错，也就是说没通过检验说明一定出错，通过检验也不能保证一定不出错。</p><p>差错检测主要有以下三种常用技术：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>奇偶校验</strong>：用于描述差错检测和纠正背后隐含的基本思想。</p></li><li class="lvl-2"><p><strong>校验和方法</strong>：通常更多地应用于运输层。</p></li><li class="lvl-2"><p><strong>循环冗余检测</strong>：通常更多地应用在适配器中的链路层</p></li></ul><h3 id="2-奇偶校验">2.奇偶校验</h3><p>差错检测最简单的方式就是用单个<strong>奇偶校验位（parity bit）</strong>，以下图为例：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e1183663.png" alt="4"></p><p>在偶校验方案中，发送方只需要包含一个附加的比特，设置它的值使得这d+1个比特中1的总数是偶数；在奇校验中，则是使得1的个数为奇数。</p><p>接收方接收数据后，如果发下1的个数与预期不一致，则说明至少出现了一个比特差错，准确来说是出现了奇数个比特差错（偶数个差错则会相互抵消，无法被检测到），但无法确定是哪一个比特出错。</p><p>而在<strong>二维奇偶校验（two-dimensional parity）</strong> 中，包含比特值改变的行和列的校验值值都会出现差错，因此接收方可以利用行和列的索引来识别发生差错的单个比特并纠正它，如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e1a4c0db.png" alt="5"></p><p>二维奇偶校验也能够检测一个分组中两个比特差错的任何组合，但无法纠正。此外，二维奇偶校验依旧可能存在无法检测到的比特差错，例如“田”字型的相邻四个比特均出现差错。</p><h3 id="3-检验和方法">3.检验和方法</h3><p>传输层UDP和TCP的检验和字段均是使用的这种方法，发送放将报文段看成一个个16比特的字段，不足16位的用0补齐。把所有字段相加，最高位的进位加到末尾上，得到的结果按位取反后作为校验和。因为一个二进制数和自己的反码相加的结果为全1。因为接收方只需要把所有的字段（包括首部和首部中的检验和）相加，判断得到结果是否为全1（FFFF）即可。</p><p>检验和方法和后面要讲的CRC方法相比，提供了相对弱的差错保护，但所需的分组开销较小。因为传输层的差错检测用软件实现，因此选用简单快速的检验和方法更合适；而链路层的差错检测在适配器中用专门的硬件实现，能够快速执行更加复杂的CRC操作。</p><h3 id="4-循环冗余检测">4.循环冗余检测</h3><p>现今的计算网络中广泛应用的差错检测技术基于<strong>循环冗余检测（Cyclic Redundancy Check，CRC）编码</strong>。</p><p>在研究CRC编码之前，我们先了解以下概念：</p><blockquote><p><strong>（1）模2运算</strong></p><p>加法不进位，减法不借位，位与位之间无关。这意味着加法和减法是相同的，这种操作等价于异或（XRO）。</p><p><strong>（2）位串的两种表示</strong></p><p>以1011为例，它可以表示为：x^3+x+1。</p><p><strong>（3）生成多项式</strong></p><p>CRC中的生成多项式通常表示为以下形式：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="38.191ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 16880.6 1133.9" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(786,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1175,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1747,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2413.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(3469.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,413) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4771,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(5771.3,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msup" transform="translate(7659.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(9864.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(10864.6,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(12258.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(13259,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mi" transform="translate(14172.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(14966.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(15967,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mi>n</mi></msup><mo>+</mo><msub><mi>g</mi><mrow data-mjx-texclass="ORD"><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>x</mi><mrow data-mjx-texclass="ORD"><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>g</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>g</mi><mn>0</mn></msub></math></mjx-assistive-mml></mjx-container><p>其中g是二进制系数，通常为0或者1，生成多项式的最高次项为x^n，最低次项为g0，生成多项式的阶数决定了CRC校验码的长度，两者相等。</p></blockquote><p>CRC 编码的操作如下，对于一个 d 比特的数据D，在发送前，发送方和接收方先约定一个 r+1 比特模式，称为生成多项式，我们将其表示为 G，要求 G 的最高有效位为 1。发送方要选择 r 个附加比特 R，并将他们附加到 D 上，使得得到的 d+r 比特模式用模 2 算术恰好能够被 G 整除。具体如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e231d145.png" alt="6"></p><p>接收方进行差错检测室，用G去除接收到的 d+r 比特，如果余数非零，则说明出现了差错，否则认为数据正确而被接收。而所有的 CRC 计算均采用模2运算来计算。</p><p>那么发送方是怎么计算出R的呢？</p><p>已知生成多项式G是提前约定好的，我们需要设计R满足：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.188ex;" xmlns="http://www.w3.org/2000/svg" width="16.184ex" height="1.829ex" role="img" focusable="false" viewBox="0 -725.5 7153.3 808.5" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1050.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(1550.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(533,413) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(2674.6,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3674.8,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4711.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(5767.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(6367.3,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>D</mi><mo>⋅</mo><msup><mn>2</mn><mi>r</mi></msup><mo>⊕</mo><mi>R</mi><mo>=</mo><mi>n</mi><mi>G</mi></math></mjx-assistive-mml></mjx-container><p>等式左边表示把D左移r位后，再补上R。它的值应该是G的n倍。我们在等式两边同时异或一个R，左边的两个R抵消，得到：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.188ex;" xmlns="http://www.w3.org/2000/svg" width="16.184ex" height="1.829ex" role="img" focusable="false" viewBox="0 -725.5 7153.3 808.5" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1050.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(1550.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(533,413) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(2730.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3785.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4385.9,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5394.1,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(6394.3,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>D</mi><mo>⋅</mo><msup><mn>2</mn><mi>r</mi></msup><mo>=</mo><mi>n</mi><mi>G</mi><mo>⊕</mo><mi>R</mi></math></mjx-assistive-mml></mjx-container><p>这个等式告诉我们，如果我们用G来除D*2^r，得到的余值刚好是R（为什么呢？这里我们把异或看成加号会更容易理解），也就是说：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -2.148ex;" xmlns="http://www.w3.org/2000/svg" width="24.929ex" height="5.428ex" role="img" focusable="false" viewBox="0 -1449.5 11018.6 2399" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1036.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(2092.6,0)"><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(392,0)" style="stroke-width: 3;"/><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(836,0)" style="stroke-width: 3;"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(1669,0)" style="stroke-width: 3;"/><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(2169,0)" style="stroke-width: 3;"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(2447,0)" style="stroke-width: 3;"/><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(3003,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3559,0)" style="stroke-width: 3;"/><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(4003,0)" style="stroke-width: 3;"/></g><g data-mml-node="mrow" transform="translate(6654.2,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M701 -940Q701 -943 695 -949H664Q662 -947 636 -922T591 -879T537 -818T475 -737T412 -636T350 -511T295 -362T250 -186T221 17T209 251Q209 962 573 1361Q596 1386 616 1405T649 1437T664 1450H695Q701 1444 701 1441Q701 1436 681 1415T629 1356T557 1261T476 1118T400 927T340 675T308 359Q306 321 306 250Q306 -139 400 -430T690 -924Q701 -936 701 -940Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(736,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1050.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(1550.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mi" transform="translate(1053.2,-686)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width: 3;"/></g><rect width="2652.3" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(3628.3,0) translate(0 -0.5)"><path data-c="29" d="M34 1438Q34 1446 37 1448T50 1450H56H71Q73 1448 99 1423T144 1380T198 1319T260 1238T323 1137T385 1013T440 864T485 688T514 485T526 251Q526 134 519 53Q472 -519 162 -860Q139 -885 119 -904T86 -936T71 -949H56Q43 -949 39 -947T34 -937Q88 -883 140 -813Q428 -430 428 251Q428 453 402 628T338 922T245 1146T145 1309T46 1425Q44 1427 42 1429T39 1433T36 1436L34 1438Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>R</mi><mo>=</mo><mtext>remainder</mtext><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">(</mo><mfrac><mrow><mi>D</mi><mo>⋅</mo><msup><mn>2</mn><mi>r</mi></msup></mrow><mi>G</mi></mfrac><mo data-mjx-texclass="CLOSE">)</mo></mrow></math></mjx-assistive-mml></mjx-container><blockquote><p><strong>注意</strong>：这里的remainder表示余数，生成多项式G取 r+1 比特是为了能够得到最高 r 位的余数。</p></blockquote><p>下面我们举一个具体的计算示例：</p><p>假设 D = 101110，d = 6，G = 1001，r = 3，在这种情况下计算R。</p><p>我们把D左移3位，末尾补上0，使用模2运算来计算它除以G = 1001后的结果，过程如下：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e2de8cfe.png" alt="7"></p><p>计算过程需要严格按照模 2 运算的规则，最后得到的余数为 11，但是R需要 3 位，因此我们在前面补上一个 0 得到 R。</p><h2 id="三、多点访问链路和协议">三、多点访问链路和协议</h2><h3 id="1-简介">1.简介</h3><p>前面提到网络链路有两种类型：点对点链路和广播链路（即多点连接方式）。</p><ul class="lvl-0"><li class="lvl-2"><p><strong>点对点链路（point-to-point link）</strong> 由链路一端的单个发送方和链路另一端的单个接收方组成。点对点协议（point-to-point protocol，PPP）和高级数据链路控制（high-level data link control，HDLC）便是为这种网络链路设计的协议。</p></li><li class="lvl-2"><p><strong>广播链路（broadcast link）</strong> 能够让多个发送和接收节点都连接到相同的、单一的、共享的广播信道上。这里的广播意味着任何一个节点传输一个帧时，信道都会广播该帧，每个其他节点都会收到一个特定的副本。传统的以太网和无线局域网都是广播链路层技术的例子。</p></li></ul><p>在广播链路中应该如何协调多个发送和接收节点对一个共享广播信道的访问，我们将其称为<strong>多路访问问题（multiple access problem）</strong>。</p><p>在广播链路中，当多个节点同时传输帧时，传输的帧会在所有的接收方处<strong>碰撞（collide）</strong>。当碰撞发生时，接收节点无法有效地获得任何传输的帧。<strong>多路访问协议（multiple access protocol）</strong> 便是用来解决这种问题的。</p><p>一般来说，我们能够将任何多路访问协议划分为以下3种类型之一：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>信道划分协议（channel partitioning protocol）</strong></p></li><li class="lvl-2"><p><strong>随机接入协议（random access protocol）</strong></p></li><li class="lvl-2"><p><strong>轮流协议（taking-turns protocol）</strong></p></li></ul><p>理想情况下，对于速率为 R bps 的广播信道，我们对多路访问协议有如下期望：</p><ul class="lvl-0"><li class="lvl-2"><p>当仅有一个节点发送数据时，该节点具有 R bps 的吞吐量。</p></li><li class="lvl-2"><p>当M个节点，每个节点吞吐量为 R/M bps。</p></li><li class="lvl-2"><p>协议是分散的，不会因为某个主节点故障而导致整个系统崩溃。</p></li><li class="lvl-2"><p>协议是简单的，使实现不昂贵。</p></li></ul><h3 id="2-信道划分协议">2.信道划分协议</h3><p>信道划分协议的思想主要是把信道划分成小片（按照时间、频率、编码等），然后将其分配给每个节点使用，实际上这部分内容我们在第一章也有提及。</p><p><strong>时分多路复用（TMD）</strong> 将时间划分为<strong>时间帧（time frame）</strong>，并进一步划分每个时间帧为N个<strong>时隙（slot）</strong>，然后把每个时隙分配给N个节点中的一个，当某个节点要发送分组时，只能在轮到自己的时隙的时候才能进行传输。例如下图中，被分配到“2”的节点，只能在每个帧里标有“2”的时隙传输数据：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e38d67ca.png" alt="8"></p><p>TMD消除了碰撞且十分公平，每个节点在每个帧时间（注意是帧，不是时隙）内得到了专用的传输速率 R/N bps。但存在以下两个缺陷：</p><ul class="lvl-0"><li class="lvl-2"><p>每个节点被限制于 R/N bps 的平均速率，即使它是唯一需要发送分组的结点。</p></li><li class="lvl-2"><p>节点必须等待它在传输序列中的轮次，只有到自己的轮次才能传输数据。</p></li></ul><p><strong>频分多路复用（FMD）</strong> 将 R bps 信道划分为不同的频段，每个频段具有 R/N 带宽，并把每个频率分配给N个节点中的一个。FDM有着和TMD同样的优缺点，速率也被限制在了 R/N bps。</p><p>第三种信道划分协议是<strong>码分多址（Code Division Multiple，CDMA）</strong>，CDMA对每个节点分配一种不同的编码，然后每个节点用它唯一的编码来对它发送的数据进行编码。通过这种方式，能够实现不同的节点同时传输数据且它们各自相应的接收方仍能正确接收发送方编码的数据比特（假设接收方知道方式方的编码），不会被其他节点发送的数据干扰。</p><h3 id="3-随机接入协议">3.随机接入协议</h3><h4 id="（1）时隙ALOHA">（1）时隙ALOHA</h4><p><strong>时隙ALOHA协议</strong>是最简单的随机接入协议，在该协议中，我们做出一下假设：</p><ul class="lvl-0"><li class="lvl-2"><p>所有帧（这里的帧值的是链路层帧，不是时间帧）是等长的。</p></li><li class="lvl-2"><p>时间被划分成相等的时隙，每个时隙刚好可以发送一帧。</p></li><li class="lvl-2"><p>每个节点只在时隙开始时发送帧。</p></li><li class="lvl-2"><p>节点是同步的，每个节点都知道时隙何时开始。</p></li><li class="lvl-2"><p>如果一个时隙中有两个及以上帧碰撞，则所有的节点在该时隙结束之前都能检测到碰撞。</p></li></ul><p>当碰撞发生后，碰撞的节点不会立即在下一个时隙重传，而是以概率P重传，直到成功。</p><p><img src="https://bu.dusays.com/2024/11/26/67457e40a2eb8.png" alt="9"></p><p>以上图为例，1、2、3号节点在第一个时隙同时发送数据，产生碰撞。三个节点会各自尝试在后面的每个时隙以概率P重传（节点之间是独立的）。在第三个时隙，恰巧1、2号节点同时选择重传，再一次发生碰撞，传送失败。第四个时隙，只有2号节点选择重传，成功传输。第六个时隙，1、3号节点同时选择重传，发送碰撞。第八个时隙，只有1号节点选择重传，成功传输。第九个时隙，三号节点选择重传，没有碰撞，成功传输。</p><p>时隙ALOHA协议有着以下优点：</p><ul class="lvl-0"><li class="lvl-2"><p>当某节点是唯一活跃的节点时，时隙ALOHA允许其以全速R连续传输。</p></li><li class="lvl-2"><p>各个节点之间是高度分散的（但需要在时钟上同步），每个节点之间独立检测碰撞并决定什么时候重传。</p></li></ul><p>但我们从图中也能看出来，当碰撞发生时，该时隙便被浪费了，且后续存在部分空白时隙没有节点选择重传，对时隙的利用率较低。</p><p><strong>时隙ALOHA的效率</strong></p><p>我们用成功传输的时隙占比来计算时隙ALOHA协议的效率，假设有N个节点，每个节点都有很多帧要发送，且在每个时隙中传输的概率是P。则一个节点成功传输的概率为</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.586ex" height="2.593ex" role="img" focusable="false" viewBox="0 -896 5121 1146" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(892,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1614.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2614.4,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(3117.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1666,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup></math></mjx-assistive-mml></mjx-container><p>任何一个节点成功的概率是</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.595ex" height="2.593ex" role="img" focusable="false" viewBox="0 -896 6009 1146" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1391,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1780,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2502.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3502.4,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(4005.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1666,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>N</mi><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup></math></mjx-assistive-mml></mjx-container><p>对其求导，计算出 p = 1/N，时，该值最大。代入p，当N为无穷大时，该值的极限为 1/e = 0.37。即最好情况下，时隙ALOHA的效率为 37%。</p><h4 id="（2）纯ALOHA（非时隙）">（2）纯ALOHA（非时隙）</h4><p>时隙ALOHA协议要求所有的节点同步他们的传输，以在每个时隙开始时开始传输，但第一个ALOHA协议实际上是一个非时隙、完全分散的协议（奇怪，那为什么不直接把这一小节放在第一个讲）。</p><p>无时隙ALOHA协议下，节点无需在时间上同步，当有帧需要传输时，可以马上传输，如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e4b811ae.png" alt="10"></p><p>对于一个 t0 时间发送的帧，在[ t0 - 1，t0 + 1 ]区间内发送的帧都会与它发生碰撞。这个角度看，冲突区间似乎比时隙ALOHA协议增大了一倍，下面我们计算纯ALOHA的效率：</p><p>已知每个节点在一个单位时间内选择传输的概率为p，那么</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="140.564ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 62129.1 1193.3" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(1140,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">指</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">定</text><text data-variant="normal" transform="translate(2000,0) scale(1,-1)" font-size="884px" font-family="serif">节</text><text data-variant="normal" transform="translate(3000,0) scale(1,-1)" font-size="884px" font-family="serif">点</text><text data-variant="normal" transform="translate(4000,0) scale(1,-1)" font-size="884px" font-family="serif">成</text><text data-variant="normal" transform="translate(5000,0) scale(1,-1)" font-size="884px" font-family="serif">功</text></g><g data-mml-node="mo" transform="translate(7140,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7806.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(8862.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9613.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(10002.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">节</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">点</text><text data-variant="normal" transform="translate(2000,0) scale(1,-1)" font-size="884px" font-family="serif">传</text><text data-variant="normal" transform="translate(3000,0) scale(1,-1)" font-size="884px" font-family="serif">输</text></g><g data-mml-node="mo" transform="translate(14002.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(14613.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(15114,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(15865,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(16254,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">它</text><text data-variant="normal" transform="translate(2000,0) scale(1,-1)" font-size="884px" font-family="serif">节</text><text data-variant="normal" transform="translate(3000,0) scale(1,-1)" font-size="884px" font-family="serif">点</text><text data-variant="normal" transform="translate(4000,0) scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mo" transform="translate(21254,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(21532,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(394,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(22551.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(23552,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(24052,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(24496.7,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(394,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(25294.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(25572.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">不</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">传</text></g><g data-mml-node="mo" transform="translate(27572.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(28183.4,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(28683.7,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(29434.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(29823.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">它</text><text data-variant="normal" transform="translate(2000,0) scale(1,-1)" font-size="884px" font-family="serif">节</text><text data-variant="normal" transform="translate(3000,0) scale(1,-1)" font-size="884px" font-family="serif">点</text><text data-variant="normal" transform="translate(4000,0) scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mo" transform="translate(34823.7,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(35101.7,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(394,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(35899.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(36343.9,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(394,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(37363.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(38363.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(38863.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(39141.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">不</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">传</text></g><g data-mml-node="mo" transform="translate(41141.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mspace" transform="translate(41530.9,0)"/><g data-mml-node="mo" transform="translate(41808.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(42864.4,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(43589.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(44089.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(44478.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(45201.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(46201.3,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(46704.3,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1666,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(48930.1,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(49430.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(49819.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(50541.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(51541.8,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(52044.8,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1666,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(54326.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(55382,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(56107.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(56607.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(56996.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(57718.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(58718.8,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="msup" transform="translate(59221.8,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(889,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1777,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(2555,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3055,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>P</mi><mo stretchy="false">(</mo><mtext>指定节点成功</mtext><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>节点传输</mtext><mo stretchy="false">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>其它节点在</mtext><mo stretchy="false">[</mo><msub><mi>t</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo>,</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">]</mo><mtext>不传</mtext><mo stretchy="false">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy="false">(</mo><mtext>其它节点在</mtext><mo stretchy="false">[</mo><msub><mi>t</mi><mn>0</mn></msub><mo>,</mo><msub><mi>t</mi><mn>0</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mtext>不传</mtext><mo stretchy="false">)</mo><mspace linebreak="newline"/><mo>=</mo><mi>p</mi><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mi>p</mi><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mn>2</mn><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></math></mjx-assistive-mml></mjx-container><p>我们用同样的方式，可以求得当 p = 1/(2N-1) 时，P(指定节点成功) 的值取最大，为 1/2e = 0.175。</p><p>所以纯ALOHA协议的效率是17.5%，相比时隙ALOHA效率更低了。</p><h4 id="（3）CSMA（载波侦听多路访问）">（3）CSMA（载波侦听多路访问）</h4><p><strong>载波侦听多路访问（Carrier Sense Multiple Access，CSMA）</strong> 中的<strong>载波侦听</strong>是指，一个节点在传输前会先侦听信道，如果信道空闲，则传输整个帧，否则推迟传送，等到信道空闲再尝试传输。</p><p>但即使采用这种方式，仍然可能会发生碰撞，因为信号的传播存在延迟。</p><p><img src="https://bu.dusays.com/2024/11/26/67457e55b47ba.png" alt="11"></p><p>上图中，t0时刻，节点B侦听到信道是空闲的，开始沿着广播媒体在两个方向上传播它的比特。在t1时刻，节点D有一个帧需要发送，虽然此时节点B正在传输，但是B传输的比特还没有到达，导致D误认为信道空闲，选择传输比特，最终发生碰撞，导致两个节点传输失败。</p><p>从这个过程中我们也可以看出，广播信道的端到端<strong>信道传播时延（channel propagation delay）</strong> 在决定其性能方面起到关键作用，该传播时延越长，载波侦听节点不能侦听到网络中另一个节点已经开始传输的概率越大。</p><blockquote><p><strong>CSMA 的侦听策略</strong></p><p>CSMA 协议中，节点发送数据的策略一般有如下三种：</p><ul class="lvl-1"><li class="lvl-2"><p><strong>1-坚持CSMA</strong>：节点发送数据前，如果侦听到信道忙，则<strong>继续侦听</strong>直到信道空闲，再发送数据。由于一监听到信道空闲就立即发送，所以信道的利用率较高，但多个节点同时发送导致冲突的可能性也较大。</p></li><li class="lvl-2"><p><strong>非坚持CSMA</strong>：节点发送数据前，如果侦听到信道忙，则<strong>随机等待</strong>一个时间段后，再开始侦听。相较于1-坚持，非坚持CSMA降低了发生冲突的可能性，但同时也降低了信道的利用率。</p></li><li class="lvl-2"><p><strong>p-坚持CSMA</strong>：该策略仅适用于分时隙的信道，主机在发送数据前，如果侦听到信道忙，则推迟到下一个时隙重新监听，如果信道空闲，则有<strong>p的概率立即发送数据</strong>，1-p的概率推迟到下一个时隙重新侦听。p-坚持CSMA既能有效减少冲突，又能比较充分的利用信道。</p></li></ul><p><strong>注</strong>：本部分内容书上并未出现，为笔者根据王道书籍做出的补充。</p></blockquote><h4 id="（4）CSMA-CD（冲突检测）">（4）CSMA/CD（冲突检测）</h4><p>CSMA/CD是具有<strong>碰撞检测（collision detection）</strong> 的载波侦听多路访问，这里的碰撞检测是指，当一个传输节点在传输时一直在侦听此信道，如果它检测到另一个节点正在传输干扰帧，它就停止传输，在重复“帧听 - 当空闲时传输”循环之前等待一段随机时间。</p><p><img src="https://bu.dusays.com/2024/11/26/67457e5d0a00c.png" alt="12"></p><p>我们可以看到，在多路访问协议中加入碰撞检测后，通过不传输一个无用、损坏的帧，大大改善了协议的性能（降低损坏帧在信道中的滞留时间）。</p><p>CSMA/CD协议的整体运行流程如下：</p><p>1.适配器从网络层获得数据报，准备链路层帧。</p><p>2.在发送帧前，先侦听信道：</p><ul class="lvl-0"><li class="lvl-2"><p>信道空闲则开始传送帧。</p></li><li class="lvl-2"><p>信道忙则等到信道空闲再发送。</p></li></ul><p>3.在传输过程中扔不停检测信道，即网络适配器要边发送边监听：</p><ul class="lvl-0"><li class="lvl-2"><p>没有检测到冲突则持续发送，直到成功发送完成。</p></li><li class="lvl-2"><p>检测到冲突则放弃发送，之后尝试重发。</p></li></ul><p>4.发送方适配器在检测到冲突后，除了放弃传输之外，还会发送一个强化的人为干扰信号，确保所有的节点都能够得知发生的冲突。</p><p>5.放弃传输后，适配器执行退避算法，在以太网中，CSMA/CD协议执行二进制指数退避算法。</p><blockquote><p><strong>二进制指数退避算法</strong></p><ul class="lvl-1"><li class="lvl-2">首次发生碰撞，节点在{0，1}之间选择一个数，记为K，选择等待K*512比特时间（对于100Mbps的以太网来说，512比特时间为5.12ms）后重新开始“侦听-当空闲时传输”。</li><li class="lvl-2">第二次碰撞后，节点在{0，1，2，3 }之间选择一个数，记为K，选择等待K*512比特时间后重新开始“侦听-当空闲时传输”。</li><li class="lvl-2">第三次碰撞后，节点在{0，1，2，3，4，5，6，7 }之间选择一个数，记为K，选择等待K*512比特时间后重新开始“侦听-当空闲时传输”。</li><li class="lvl-2">……</li></ul><p>每发生一次碰撞，窗口大小就会翻倍，碰撞概率会变低，但平均等待时间也会边长。</p><p>需要注意的是，二进制指数退避算法是<strong>分布式</strong>的算法，即每个节点之间独立计算自己的碰撞次数和窗口大小；同时该算法也是<strong>自适应</strong>的算法，负载较大时，重传窗口时间大，减少冲突，但等待时间长，负载较小时，各站点等待时间短，但冲突概率大。</p></blockquote><h4 id="（5）CSMA-CD效率">（5）CSMA/CD效率</h4><p>CSMA/CD效率的推导超出了本书的范畴，这里只给出下面的近似式子：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -3.281ex;" xmlns="http://www.w3.org/2000/svg" width="18.05ex" height="6.318ex" role="img" focusable="false" viewBox="0 -1342 7977.9 2792.4" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">效</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(2277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(3333.6,0)"><g data-mml-node="mn" transform="translate(2072.2,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mrow" transform="translate(220,-993.8)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(2222.4,0)"><g data-mml-node="msub" transform="translate(276.8,543.1) scale(0.707)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mtext"><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" style="stroke-width: 3;"/><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(556,0)" style="stroke-width: 3;"/><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(948,0)" style="stroke-width: 3;"/><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1448,0)" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mtext"><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" style="stroke-width: 3;"/><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(389,0)" style="stroke-width: 3;"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(781,0)" style="stroke-width: 3;"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1281,0)" style="stroke-width: 3;"/><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(1837,0)" style="stroke-width: 3;"/></g></g></g><rect width="1741.9" height="60" x="120" y="220"/></g></g><rect width="4404.3" height="60" x="120" y="220"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtext>效率</mtext><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mn>5</mn><mfrac><msub><mi>d</mi><mrow data-mjx-texclass="ORD"><mtext>prop</mtext></mrow></msub><msub><mi>d</mi><mrow data-mjx-texclass="ORD"><mtext>trans</mtext></mrow></msub></mfrac></mrow></mfrac></math></mjx-assistive-mml></mjx-container><p>其中，d_prop表示信号能量在任意两个适配器之间传播所需的最大时间；d_trans表示传输一个最大长度的以太网帧的时间。可以看出，当d_prop变为0，或者d_trans变为无穷大时，效率为1。</p><p>总的来说，CSMA/CD有着比ALOHA更好的性能，且有着简单，廉价，分布式的优点。</p><h4 id="（6）CSMA-CA（碰撞避免）">（6）CSMA/CA（碰撞避免）</h4><p>在无线局域网（WLAN）中，由于电磁波在传播过程衰减较快，且在开放空间里，相同频段的电磁波之间干扰比较严重（噪声），传统的有线网络中的碰撞检测方法（如以太网中的CSMA/CD）难以正常应用，所以WLAN通常采用<strong>CSMA/CA（载波侦听多路访问/碰撞避免）</strong> 机制。</p><p><img src="https://bu.dusays.com/2024/11/26/67457e671d3be.png" alt="13"></p><p>以上图为例，A和C发送的电磁波彼此之间无法正常到达，但都能发送到B。假设A，C同时向B发送帧，帧在B处发生碰撞，B无法正常接收。但A和C由于都无法收到对方的电磁波，所以未能检测到碰撞，所以WLAN中，<strong>未检测到冲突不等于发送成功</strong>。</p><p><strong>CSMA/CA</strong> 采用事前避免的方式减少碰撞的发生（并不能杜绝碰撞），具体实现方式如下：</p><p><img src="https://bu.dusays.com/2024/11/26/67457e7103728.png" alt="14"></p><p>一个有数据发送需求的节点 sender 在侦测到信道空闲时，不会立即发送数据，而是等待DIFS长的时间，如果持续时间内信道一直处于空闲状态，则直接传输整个帧（无碰撞检测，不会终止传输，因此碰撞的代价也较大）；如果检测到信道忙碌，则会执行二进制指数退避算法，选择一个随机回退值，并在信道空闲时递减该值（信道忙碌时不会递减），当该值递减到0时（只会发生在信道空闲时，且立即发送数据帧，无需再等待 DIFS 时间），发送整个帧。</p><p>接收方收到帧后，如果帧正确，则会在SIFS后发送ACK。发送方如果没有收到ACK，则会增加回退值，重复上述步骤。</p><blockquote><p><strong>注意</strong>：由于无线链路的特性，需要每一帧都进行确认，例如我们在前面说的未检测到冲突不等于成功发送。这是链路层的可靠机制。</p></blockquote><p>CSMA/CA虽然采用了事前避免的方法，但依旧会出现冲突（且由于不会停止传输无用帧，导致冲突的代价较大），例如以下两种情况：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>两个站点相互隐藏</strong>：即我们前面提到的未检测到冲突不等于发送成功的例子。</p></li><li class="lvl-2"><p><strong>两个站点选择了非常靠近的随机回退值</strong>：A的回退值到达0后发送帧，但是该信号还未到达B时，B的回退值也递减到0，选择发送帧，从而导致冲突。</p></li></ul><p><strong>预约机制</strong></p><p>CSMA/CA本身并不具有预约机制，但是它通过RTS/CTS（Request to Send / Clear to Send）机制间接实现了预约的效果，该机制作为一个可选项，一般用来降低长数据帧冲突的概率。</p><p><img src="https://bu.dusays.com/2024/11/26/67457e797b5fc.png" alt="15"></p><p>具体实现流程如上头所示，发送方首先使用CSMA向接收方发送一个较小的RTS分组（虽然该分组也可能会产生冲突，但由于比较小，对信道的浪费也较少）。接收方成功收到信号后，会广播CTS，作为对RTS的响应。CST能够被所有的节点听到，完成广播后，发送方开始发送数据帧，而其他节点抑制发送。当接收方成功收到数据帧后，会向接收方发送ACK确认帧，表示传输完成。A收到ACK后，信道自动释放，回归信道竞争状态。</p><h3 id="4-轮流协议">4.轮流协议</h3><h4 id="（1）简介">（1）简介</h4><p><strong>信道划分协议</strong>在高负载下是有效和公平的，但是低负载下由于节点速率被限制在R/N，因此效率较低；</p><p><strong>随机访问协议</strong>在低负载时效率高，单个节点可以完全利用信道带宽，但在高负荷情况下冲突概率大，效率低。</p><p>而<strong>轮流协议（taking-turns protocol）</strong> 集成了两者的优点，在低负载和高负载情况下都能有着较高的效率（但具体实现比较复杂）。</p><p>比较重要的两种轮流协议有：<strong>轮询协议（polling protocol）</strong> 和<strong>令牌传递协议（token-passing protocol）</strong>。</p><h4 id="（2）轮询协议">（2）轮询协议</h4><p><img src="https://bu.dusays.com/2024/11/26/67457e81df5ce.png" alt="16"></p><p>轮询协议如上图所示，一个节点被指定为主节点，主节点依次询问每个节点，告诉它能够传输的帧的最多数量。一个节点传输完成（也可能没有数据帧要传输或者传输达到上限）后，主节点就会开始询问下一个节点，一次轮流执行。</p><p>很显然，整个过程都由主节点控制，因此这种方法存在单点故障问题，一旦主节点故障，整个信道都会变得不可操作。</p><h4 id="（3）令牌传递协议">（3）令牌传递协议</h4><p><img src="https://bu.dusays.com/2024/11/26/67457e8ad0237.png" alt="17"></p><p>令牌传递协议如上图所示，该协议没有主节点。一个称为令牌（token）的小的特殊帧在节点之间以某种固定的次序进行交换。如果某节点持有令牌并有数据要发送，它将占用令牌并发送数据，当发送完成或者超时，节点释放令牌并将其传递给下一个节点。</p><p>令牌传递协议依旧存在单点故障问题，例如令牌可能会在传递的过程中丢失，这时必须调用某些复杂的机制来检查和恢复令牌。</p><h3 id="5-电缆接入网络">5.电缆接入网络</h3><p><strong>DOCSIS（Data Over Cable Service Interface Specification，电缆数据服务接口规范）</strong> 定义了电缆数据网络体系结构及其协议。在电缆接入网中，我们将同时看到前面所讲的多种多路访问协议。</p><p>下图中为一个电缆接入网示例，在电缆网头将几千个住宅电缆调制解调器与一个<strong>电缆调制解调器端接系统（Cable Modem Termination System，CMTS）</strong> 连接。</p><blockquote><p><strong>注</strong>：<strong>调制解调器（Modem）</strong> 是一种将数字信号与模拟信号相互转换的设备，用于实现计算机和其他数字设备的网络接入。“调制”指数据从计算机发送到网络时，将计算机的数字信号转换成模拟信号；“解调”指数据从网络接收到计算机时，把收到的模拟信号转换回数字信号。</p></blockquote><p><img src="https://bu.dusays.com/2024/11/26/67457e948e9dd.png" alt="18"></p><p>电缆接入网络分为下行信道（CMTS到调制解调器）和上行信道（调制解调器到CMTS），两者均为广播信道。DOCSIS使用FDM将上行和下行网络段划分为多个频率信道，每个下行信道带宽6MHz，吞吐量为40Mbps，每个上行信道带宽6.4MHz，吞吐量为30Mbps。</p><p>下行信道上，由于只有CMTS传输数据，因此不存在多路访问题。CMTS在下行信道上向所有用户广播称为MAP报文的控制报文，来为每个电缆调制解调器指定能够在上行信道中使用的微时隙。由于每个微时隙明确分配给电缆调制解调器，故CMTS能够确保在微时隙中没有碰撞传输。</p><p>那么CMTS是根据什么来分配微时隙的呢？</p><p>在下行信道划分的微时隙中，有一组特殊的微时隙专门用于让有数据发送需求的用户发送微时隙请求帧。这些来自各个用户的微时隙请求帧，会以随机接入的方式在这组特殊的微时隙中传输，因此可能会发送碰撞。但用户无法检测碰撞，只能通过观察下一个下行控制报文中是否有对自己请求分配的响应来判断是否发送碰撞。如果没有，则执行二进制指数退避算法将自己的的微时隙请求帧延缓到以后的时隙重新发送。</p><p>在流量较低的情况下，用户可能会在名义上分配给微时隙请求帧的时隙内直接传输数据帧，从而避免等待额外的请求分配，减少延迟，提高带宽的利用率。</p><blockquote><p><strong>注</strong>：电缆接入网络中，同时使用了FDM、TDM、随机接入和集中分配时隙多个多路访问协议。</p></blockquote><h2 id="四、交换局域网">四、交换局域网</h2><h3 id="1-MAC地址和ARP">1.MAC地址和ARP</h3><h4 id="（1）MAC地址和IP地址">（1）MAC地址和IP地址</h4><ul class="lvl-0"><li class="lvl-2"><p><strong>IP地址</strong>是网络层地址，32bit（IPv6为128位），是分层的，能够实现路由聚集。用于完成网络到网络的交付。</p></li><li class="lvl-2"><p><strong>MAC地址</strong>是链路层地址，48比特。是平面的，仅用来区分一个网络内的不同网卡，任何两个网卡的MAC地址都不相同。用于完成一个物理网络内部节点到节点的数据交付。</p></li></ul><blockquote><p><strong>注意</strong>：链路层地址有多种称呼：LAN地址、物理地址或MAC地址，这里选取最流行的MAC地址。此外拥有MAC地址的并不是主机或路由器，而是他们的网络适配器。</p></blockquote><p>MAC地址和IP地址分离的好处：</p><ul class="lvl-0"><li class="lvl-2"><p>保持各层独立。局域网是为任意网络层协议设计的，将MAC地址和IP地址分离开，使其除了IP之外，还可以方便地支持其他网络层协议，如IPX等。</p></li><li class="lvl-2"><p>更换网卡时可以不必改变IP地址，可以直接与新网卡的MAC地址建立映射关系。</p></li></ul><h4 id="（2）ARP">（2）ARP</h4><p><strong>地址解析协议（Address Resolution Protocol，ARP）</strong> 用于将IP地址解析为MAC地址。逆地址解析协议RARP用于将MAC地址解析为IP地址，但是它的功能已被DHCP取代，当前不再使用。</p><blockquote><p><strong>注意</strong>：虽然自定向下这本书中并未明确指出，但我们一般认为<strong>ARP是网络层协议</strong>。</p></blockquote><p>下面介绍ARP在一个子网内部的运行流程：</p><p><img src="https://bu.dusays.com/2024/11/26/67457ea30acd3.png" alt="19"></p><p>如上的一个局域网中每个接口都有一个IP地址和MAC地址，假设主机C想要向主机A发送IP数据报。发送数据报时，主机C除了需要向它的网络适配器提供IP数据报外，还需要提供目的地的MAC地址，然后适配器将构造一个包含目的地的MAC地址的链路层帧，并把该帧发送进局域网。而目标主机MAC地址的获取就是ARP需要完成的任务。</p><p>主机C在其ARP模块上以主机A的IP地址<code>222.222.222.222</code>作为输入，就会返回相应的MAC地址。每个主机上维护者一个ARP表，而主机C上的ARP表可能如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457eaf2f805.png" alt="20"></p><p>图中的TTL为该表项的寿命值，一个表项通常的过期时间为20分钟。</p><p>可以看到ARP表上并不包含该子网内的所有主机和路由器，需要查询的目标地址A的MAC地址并不在表项中，那么主机C会向它的适配器传递一个ARP查询分组，该分组的目标地址为<strong>MAC广播地址（即FF-FF-FF-FF-FF-FF）</strong>，子网内的所有地址都会收到该查询分组。当主机A收到该查询分组后（分组里有主机A的IP地址），会把自己的MAC地址放在ARP响应分组里，通过单播的形式发送给主机C。然后主机C将得到的映射关系存储更新在自己的ARP表中。</p><blockquote><p><strong>注意</strong>：ARP协议是即插即用的，即一个ARP表是自动建立的，并不需要网络管理员来进行配置。</p></blockquote><h4 id="（3）向子网外发送数据报">（3）向子网外发送数据报</h4><p>另一个更复杂的情况是向子网外的节点发送数据报，如下图所示，图中是由一台路由器连接的两个子网（可以看到这里路由器有两个接口，所以它有两个IP地址、两个ARP模块、两个适配器和两个MAC地址）：</p><p><img src="https://bu.dusays.com/2024/11/26/67457ebdcb0f8.png" alt="21"></p><p>假设IP为<code>111.111.111.111</code>的主机A准备向另一个子网里IP为<code>222.222.222.222</code>的主机B发送数据报。主机A将数据报交付给它的适配器时，需要指示一个适当的MAC地址。该地址并不是主机B的MAC地址（因为主机B并不在当前子网内），而是下一跳路由器<code>111.111.111.110</code>的MAC地址。通过ARP得到该MAC地址后，封装链路层帧（该帧包含了寻址到主机B的数据报），并发送出去。路由器发现该帧是向自己寻址的，于是进行接收，然后解封装。读取到数据报的目标IP后，结合自己的转发表找到转发端口应该为<code>222.222.222.220</code>。该端口再把这个数据报进行封装，MAC地址为目标主机B的MAC地址（因为此时已经和目标主机位于同一子网，且依旧使用ARP获得MAC地址）。</p><h3 id="2-以太网">2.以太网</h3><blockquote><p>以太网是目前最主流的局域网技术，由IEEE 802.3标准定义，采用无连接的工作方式，不对发送的数据帧编号，提供无连接不可靠的服务。</p></blockquote><h4 id="（1）以太网帧结构">（1）以太网帧结构</h4><p><img src="https://bu.dusays.com/2024/11/26/67457ecbca5cf.png" alt="22"></p><p>以太网帧的结构分为如下六个字段：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>前同步码（8字节）</strong>：也叫前导码，位于以太网帧的最前面，该字段的前7个字节的值都是<code>10101010</code>，最后一个字节是<code>10101011</code>。前七个字节用于同步发送方和接收方的始终，第八关字节的最后两个比特（第一次出现的两个连续的1）警告接收方“重要的内容”要来了。</p></li><li class="lvl-2"><p><strong>目的地址（6字节）</strong>：适配器收到除以自己和广播地址为目的地址之外的帧都会丢弃。</p></li><li class="lvl-2"><p><strong>源地址（6字节）</strong>：传输该帧到局域网上的适配器的MAC地址。</p></li><li class="lvl-2"><p><strong>类型字段（2字节）</strong>：类型字段允许以太网复用多种网络层协议（主机能够使用除了IP以外的其他网络层协议）。</p></li><li class="lvl-2"><p><strong>数据字段（46~1500字节）</strong>：该字段承载了IP数据报，以太网的最大传输单元MTU是1500字节，超过则需要进行分片。数据字段的最小长度是46字节，不足则需要填充到46字节（网络层可以使用IP数据报首部中的长度字段去除填充部分）。</p></li><li class="lvl-2"><p><strong>CRC（4字节）</strong>：循环冗余校验码。</p></li></ul><p>标准以太网帧的长度最短为64字节，最长为1518字节（均不计入前导码）。</p><blockquote><p><strong>注意</strong>：虽然以太网帧有CRC码，但它向网络层提供的依旧是不可靠的服务，因为即使通过校验，接收方也不会发送确认帧；没通过校验，接收方也不会发送否定确认帧，只是直接丢弃该帧。所以发送方并不知道它传输的帧是否成功达到并通过校验。这有助于降低以太网的复杂度和成本，但可能导致传递到网络层的数据报流存在间隙。UDP会无视这些间隙（导致应用层会看到数据中的间隙），但TCP不会对有间隙的数据报进行确认，从而执行重传。但以太网并不知道自己传输的是一个新的数据报还是被重传的数据报。</p></blockquote><h4 id="（2）以太网的标准">（2）以太网的标准</h4><p>以太网有很多不同的标准，但采用相同的MAC协议和帧结构（这里的MAC协议指介质访问控制协议）：</p><ul class="lvl-0"><li class="lvl-2"><p>不同的速率：10 Mbps、100Mbps、1Gbps、10Gbps</p></li><li class="lvl-2"><p>不同的物理层媒介：光纤、同轴电缆和双绞</p></li></ul><p>以太网的标准有：如10BASE-T、10BASE-2.、100BASE-T、1000BASE-LX和10GBASE-T等等。</p><ul class="lvl-0"><li class="lvl-2"><p>其中前面的数字10、100、1000、10G分表代表该标准的速率；</p></li><li class="lvl-2"><p>BASE表示使用基带传输，意味没有使用频分复用技术，每一个信号在单一频率上完全控制线缆</p></li><li class="lvl-2"><p>最后一部分指不同物理媒体本身：T表示双绞线（Twisted Pair），F表示光纤（optical Fiber），2表示细同轴电缆，5表示粗同轴电缆，LX代表适合长距离传输的光纤（Long Wavelength），SX代表适合短距离传输的光纤（Short Wavelength）（这里的X并不代表具体的单词，而是一个惯例符号，被用来标识光纤模式）。</p></li></ul><p>以太网工作在半双工方式使用二进制指数退避的CSMA/CD算法，在全双工方式下，每个连接都有独立的发送和接收通道，几乎不会产生碰撞。</p><h4 id="（3）总线以太网和星形以太网">（3）总线以太网和星形以太网</h4><p>总线以太网使用二进制指数退避的CSMA/CD协议，以半双工方式工作。</p><p>但是随着以太网站点数目的增多，总线结构以太网的可靠性下降，同时大规模集成电路以及专用芯片的发展使得星形结构的以太网交换可以做得便宜又可靠，于是采用以太网交换机的星形结构成为了以太网的首选拓扑，解决了以太网在高负载时性能差的问题。</p><p>星形以太网不使用共享总线，没有碰撞问题，因此不使用CSMA/CD协议，而是以全双工方式工作。之所以还保留以太网的称呼，是因为它的帧结构未改变，仍采用以太网的帧结构。</p><h4 id="（4）吉比特以太网">（4）吉比特以太网</h4><p>吉比特以太网也叫千兆以太网，它的标准IEEE 802.3z有以下几个特点：</p><ul class="lvl-0"><li class="lvl-2"><p>允许1 Gbit/s下以全双工和半双工两种方式工作。</p></li><li class="lvl-2"><p>使用IEEE 802.3协议规定的帧格式（即传统以太网的帧格式）。</p></li><li class="lvl-2"><p>在半双工方式下使用CSMA/CD协议，而在双全工方式不使用CSMA/CD协议。</p></li><li class="lvl-2"><p>与10BASE-T和100BASE-T技术向后兼容。</p></li></ul><p>吉比特以太网在半双工方式时必须进行碰撞检测，由于数据率提高了，因此只有减小最大电缆长度或增大帧的最小长度，才能使帧的传输时间大于等于信号在最大传输距离上的往返时间。</p><blockquote><p><strong>注意</strong>：CSMA/CD协议中，必须满足帧的传输时间大于等于信号在最大传输距离上的往返时间，才能确保为检测到碰撞等于发送成功。否则可能出现发送方还未收到远处传来的碰撞信号就已经完成了帧的传输，从而误以为帧已经发送成功。这也是以太网最小帧长为64字节的由来。</p></blockquote><p>为了解决这种问题，吉比特以太网采用了<strong>载波延伸（carrier extension）</strong> 方法，使最短帧长仍为64字节（保持兼容性），同时将争用期增大为512字节（传统以太网的为512位）。如果发送的MAC帧长不足512字节，就用一些特殊字段填充在帧的后面，使MAC帧的发送长度增大到512字节，这对有效负荷并无影响。接收端收到MAC帧后，把填充的特殊字段删除后才向高层交付。</p><p>但把原来仅64字节的短帧填充到512字节，额外的填充字段给链路层造成了很大开销，为此，吉比特以太网还增加了<strong>分组突发（packet bursting）</strong> 功能。及当有多个短帧要发送时，第一个短帧要采用载波延伸的方法进行填充，但随后的一些短帧则可一个接一个方式，他们之间只留必要的帧间最小间隔即可。这样就形成了一串分组的突发，直到到达1500字节或稍多一些为止。</p><p>吉比特以太网工作在全双工方式时，不使用载波延伸和分组突发。</p><h3 id="3-交换机">3.交换机</h3><blockquote><p>交换机是链路层设备，用MAC地址转发分组，其自身对于子网中的主机和路由器来说是透明度的。</p></blockquote><h4 id="（1）交换机转发和过滤">（1）交换机转发和过滤</h4><p><strong>过滤（filtering）</strong> 决定一个帧应该转发到某个接口还是应当将其丢弃的交换机功能。</p><p><strong>转发（forwarding）</strong> 是决定一个帧应该被导向哪个接口，并把该帧移动到那些接口的交换机功能。</p><p>交换机的两个功能都依赖于<strong>交换机表（switch table）</strong> 完成。交换机表中的一个表项包括：</p><ul class="lvl-0"><li class="lvl-2"><p>一个MAC地址。</p></li><li class="lvl-2"><p>通向该MAC地址的交换机接口。</p></li><li class="lvl-2"><p>表项放置在表中的时间。</p></li></ul><p><img src="https://bu.dusays.com/2024/11/26/67457ed8bf2c2.png" alt="23"></p><p>当一个目的地址为<code>DD-DD-DD-DD-DD-DD</code>的帧从交换机接口 x 到达，交换机用该MAC地址在它的表里进行索引。有3种可能的情况：</p><ul class="lvl-0"><li class="lvl-2"><p>表中没有该表项。交换机会将该帧泛洪到所有端口（除了接收该帧的端口x），即将帧转发到除入口端口以外的所有接口。</p></li><li class="lvl-2"><p>表中有一个表项将该MAC地址与接口 x（即进来时的接口）联系起来。不会转发，而是直接丢弃该帧。</p></li><li class="lvl-2"><p>表中有一个表项将该MAC地址与非 x 的的接口联系起来。将帧转发到该MAC地址对应的端口，而不会泛洪。这是正常的单播转发操作。</p></li></ul><h4 id="（2）自学习">（2）自学习</h4><p>交换机是<strong>自学习（self-learning）</strong> 的，即它的表是自动，动态和自治地建立的，不需要来自网络管理员和配置协议的任何干预。实现过程如下：</p><ol><li class="lvl-3"><p>交换机表初始为空。</p></li><li class="lvl-3"><p>对于在每个接口收到的帧，交换机会在其表中存储：a.源MAC地址；b.接口信息（将源MAC地址和对应的接口进行关联并记录，以便在之后需要转发到该地址时知道帧应该从哪个接口发送）；c.老化期。</p></li><li class="lvl-3"><p>如果在老化期内，交换机没有收到以该地址作为源地址的帧，就在表中删除这个地址（以这种方式，如果一台主机更换了网卡，那么旧的MAC地址最终会被从该交换机表中清除掉）。</p></li></ol><p>因为交换机不需要网络管理员或用户的干预，因此交换机是<strong>即插即用设备（plug-and-play device）</strong>。此外交换机也是<strong>全双工的</strong>，即任何交换机接口都能够同事发送和接收。</p><blockquote><p><strong>注意</strong>：学到这里可能觉得和前面讲到的ARP表的维护有些类似，ARP虽然也是即插即用的，但并不是自学习的。因为ARP的工作依赖于设备主动发送ARP请求来获得地址映射信息，而交换机是被动地从流经的帧中学习。</p></blockquote><p><strong>笔者的碎碎念</strong>：</p><p>写到这里，对 TopDown 的学习也就告一段落了，写这些东西确实花了不少时间，但能够有始有终地做完这些，是一件值得开心的事情。本以为在这之后已经对计网有了比较清晰的了解，结果去看了408的几道题后，直接道心破碎（悲鸣）。只能说408考察的深度和广度都不是学校的期末考试所能比拟的，未来还有很长的路要走，一切都才刚刚起步。</p><p>最后，来只可爱的利欧路吧！(づ￣ ³￣)づ</p><p><img src="https://bu.dusays.com/2024/11/26/67457ee3ac1de.png" alt="利欧路"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</title>
      <link href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/"/>
      <url>/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥计算机网络 自顶向下方法 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网">《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</a></li><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第二章 应用层">《计算机网络 自顶向下方法》笔记：第二章 应用层</a></li><li><a href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第三章 传输层">《计算机网络 自顶向下方法》笔记：第三章 传输层</a></li><li><a href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面">《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</a></li><li><a href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面">《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</a></li><li><a href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网">《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</a></li></ol></blockquote><h2 id="一、概述">一、概述</h2><h3 id="1-传统方式与SDN方式">1.传统方式与SDN方式</h3><p>在上一章的学习里我们了解到转发表（基于目的的转发）和流表（通用转发）是链接网络层的数据平面和控制平面的首要元素。这些表定义了一台路由器的本地数据平面转发行为，而在通用转发下，所采取的动作还包括丢弃一个分组、复制一个分组和重写第2、3或4层分组首部字段。</p><p>在本章中，我们将关注这些转发表和流表是如何计算、维护和安装的。实际上我们已经了解到在传统方式下和 SDN 方式下完成这些工作的两种方法，前者是由每个路由器完成，后者则是远程集中控制路由，路由器仅执行转发功能（当然还包括流表支持的一些其他动作，这些其他的动作以前都是由单独的中间盒实现的）。</p><p>我们可以根据下面两张图来回忆一下两种方式的区别：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d1da10d4.png" alt="1"></p><p><img src="https://bu.dusays.com/2024/11/26/67457d285f5ef.png" alt="2"></p><h3 id="2-传统方式的路由机制">2.传统方式的路由机制</h3><p>而传统方式（区别于SDN）的路由机制又分为两个级别：<strong>内部网关协议（IGP，Interior Gateway Protocol）</strong> 和<strong>外部网关协议（EGP, Exterior Gateway Protocol）</strong>。它们承担不同范围内的路由任务，以确保数据包能够从源节点到达目标节点。</p><p><strong>内部网关协议IGP</strong>用于自治系统（AS，Autonomous System）内部的路由，自治系统是由单一结构控制的一组路由器和网络。常见的IGP协议有：OSPF、RIP等。</p><p><strong>外部网关协议EGP</strong>用于自制系统之间的路由（如互联网服务提供商ISP之间的路由），EGP确保来自一个AS的数据能够正确传递到其他AS。常见的EGP协议有：<strong>BGP（Border Gateway Protocol）</strong>。BGP是目前互联网的核心路由协议，负责管理AS之间的路由。</p><h2 id="二、路由选择算法">二、路由选择算法</h2><h3 id="1-前置信息">1.前置信息</h3><p><strong>路由</strong>：按照某种指标（传输延时，所经过的站点数据等）找到一条从源节点到目标节点的较好的路径。</p><p>路由是以网络为单位进行的，这样路由信息传输、计算和匹配的代价更低。</p><p>路由选择算法是网络层的重要组成部分，用于完成路由功能，遵循以下原则：</p><ul class="lvl-0"><li class="lvl-2"><p>正确性（correctness）：算法必须是正确和完整的。</p></li><li class="lvl-2"><p>简单性（simplicity）：最优但复杂的算法，时间上延迟很大，不能为了获取路由信息而增加很多通信量。</p></li><li class="lvl-2"><p>健壮性（robustness）：算法能够适应通信量和网络拓扑的变化（究竟是谁把这个词翻译成鲁棒性的）。</p></li><li class="lvl-2"><p>稳定性（stability）：产生的路由不应该摇摆。</p></li><li class="lvl-2"><p>公平性（fairness）：对每一个站点都公平</p></li><li class="lvl-2"><p>最优性（optimality）：某一个指标的最优，可以是时间、费用或综合指标等（实际上，获取最优的结果代价较高，一般是次优的）。</p></li></ul><p>路由选择算法可以分为<strong>集中式路由选择算法（centralized routing algorithm）</strong> 和 <strong>分散式路由选择算法（decentralized routing algorithm）</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>集中式路由选择算法</strong>：所有的路由都拥有完整的拓扑和边的代价的信息，这样的算法被称作<strong>链路状态（Link State，LS）算法</strong>。</p></li><li class="lvl-2"><p><strong>分散式路由选择算法</strong>：路由器只知道与它有物理连接关系的邻居路由器，和到相应邻居路由器的代价，通过迭代计算过程以及与相邻节点的信息交换，一个节点逐渐计算出到达某目的节点或一组目的节点的最低开销路径，这样的算法被称为<strong>距离向量（Distance-Vector，DV）算法</strong>。</p></li></ul><p>路由选择算法的第二种分类方式是根据算法是静态的还是动态度进行分类。在<strong>静态路由选择算法（static routing algorithm）</strong> 中，路由随时间的变化非常缓慢，通常是人工进行调整；在<strong>动态路由选择算法（dynamic routing algorithm）</strong> 中，会随着网络流量负载或拓扑发生变化而改变路由选择路径。</p><p>路由选择算法的第三种分类方式是根据它是负载敏感的还是负载迟钝的进行划分。在<strong>负载敏感算法（load-sensitive algorithm）</strong> 中，链路开销会动态地变化以反映出底层链路的当前拥塞水平。如果当前拥塞的一条链路与高开销相联系，则路由选择算法趋向于绕开该拥塞链路来选择路由。而但如今的因特网路由算法（RIP、OSPF和BGP）都是<strong>负载迟钝（load-insensitive）</strong> 的，因为某条链路的开销并不能明确地反映拥塞水平。</p><h3 id="2-链路状态路由选择算法">2.链路状态路由选择算法</h3><h4 id="（1）实现方式">（1）实现方式</h4><p>在LS算法中，网络拓扑和链路开销都是已知的，基于这些信息，使用<strong>Dijkstra算法</strong>计算出最短路径，从而得到路由表。</p><p>具体工作流程为：</p><ol><li class="lvl-3"><p>发现相邻节点，获取对方网络地址</p></li><li class="lvl-3"><p>检测到相邻节点的代价（延迟、开销）</p></li><li class="lvl-3"><p>组装一个LS分组，描述它到相邻节点的代价情况</p></li><li class="lvl-3"><p>将分组通过洪泛的方式发到所有其他路由器</p></li><li class="lvl-3"><p>通过Dijkstra算法找出最短路径</p></li></ol><p>前四步都是为了让每个路由器获得拓扑和边代价，最后一步才是路由算法。其中第四步会有一些限制方式防止分组无穷地扩散：</p><ul class="lvl-0"><li class="lvl-2"><p>顺序号（Sequence Number）：每个LS分组都带有一个顺序号，表示该分组的版本，而路由器会记录（源路由器，顺序号）的组合，当收到重复或者老版本的分组后，直接丢弃不在转发。</p></li><li class="lvl-2"><p>年龄字段（Age）：生成一个分组是，为其设置一个不为0的年龄字段，每过一个时间段（不是跳数）年龄字段就减1，年龄字段为0的分组将被抛弃。</p></li></ul><h4 id="（2）Dijkstra算法">（2）Dijkstra算法</h4><p><strong>Dijkstra算法</strong>是一种用于计算单源最短路径的经典算法，能够找到从某个节点到其他所有节点的最短路径。</p><p>算法的核心思想是：从源节点开始，每次选择当前路径开销最小的节点，并更新与其相邻节点的距离，直到所有节点都被访问完毕。</p><p>我们以下图为例使用Dijkstra算法计算从 <strong>u</strong> 到达其他其他所有可能目的地的最低开销路径：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d35bd227.png" alt="3"></p><table><thead><tr><th style="text-align:center">步骤</th><th style="text-align:center">N'</th><th style="text-align:center">D(v), p(v)</th><th style="text-align:center">D(w), p(w)</th><th style="text-align:center">D(x), p(x)</th><th style="text-align:center">D(y), p(y)</th><th style="text-align:center">D(z), p(z)</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">u</td><td style="text-align:center">2, u</td><td style="text-align:center">5, u</td><td style="text-align:center">1, u</td><td style="text-align:center">∞</td><td style="text-align:center">∞</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">ux</td><td style="text-align:center">2, u</td><td style="text-align:center">4, x</td><td style="text-align:center"></td><td style="text-align:center">2, x</td><td style="text-align:center">∞</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">uxy</td><td style="text-align:center">2, u</td><td style="text-align:center">3, y</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">4, y</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">uxyv</td><td style="text-align:center"></td><td style="text-align:center">3, y</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">4, y</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">uxyvw</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">4, y</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">uxyvwz</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>上表中，N'表示确定的最短路径的点；D()表示目前已知的从u点到该点的最短路径长度；P()表示在已知最短路径下，该点的上一跳的位置。</p><ul class="lvl-0"><li class="lvl-2"><p>初始状态下，已知u距离本身的最短路径为零，将u放入N'中。与u直连的v，w，x到达u的距离分别为2、5、1，他们的上一跳均为u。不与u直连的点，D()暂且置为∞。</p></li><li class="lvl-2"><p>第1步，观察还未加入N'中的点，选取D()值最小的点，将其加入N'。这里D(x)=1最小，我们将x加入N'里。然后观察与x直连的点有v、w、y（排除已经加入N'的点）。如果以x作为终点的上一跳，源点达到这三个点的最短路径为D'(v)=D(x)+2=3、D'(w)=D(x)+3=4、D'(y)=D(x)+1=2，将得到的新值与原有的D(v)、D(w)、D(y)进行比较，发现D'(w)小于D(w)，因此我们把D(w)的值更新为4，p(w)更新为x；D'(y)小于D(y)，因此我们把D(y)的值更新为2，p(y)更新为x。</p></li><li class="lvl-2"><p>第2步，观察还未加入N'中的点，选取D()值最小的点，将其加入N'。我们发现D(v)=D(y)=2，两者均为最小值，我们任选其一即可。这里选择先将y加入N'里。然后观察与y直连的点有w和z。如果以y作为终点的上一跳，源点达到这两个点的最短路径为D'(w)=D(y)+1=3、D'(z)=D(y)+2=4，我们将得到的新值与原有的D(w)、D(z)进行比较，发现D'(w)小于D(w)，因此我们把D(w)的值更新为3，p(w)更新为y；D'(z)小于D(z)，因此我们把D(z)的值更新为4，p(z)更新为y。</p></li><li class="lvl-2"><p>第3步，观察还未加入N'中的点，选取D()值最小的点，将其加入N'。这里D(v)=2最小，我们将v加入N'里。然后观察与v直连的点有w。如果以v作为终点的上一跳，源点到达w的最短路径为D'(w)=D(v)+3=5。D'(w)大于D(w)，不做处理（如果相等，也不做处理）。</p></li><li class="lvl-2"><p>第4步，观察还未加入N'中的点，选取D()值最小的点，将其加入N'。这里D(w)=3最小，我们将w加入N'里。然后观察与w直连的点有z。如果以w作为终点的上一跳，源点达到z的最短路径为D'(z)=D(w)+5=8。D'(z)大于D(z)，不做处理。</p></li><li class="lvl-2"><p>第5步，此时仅剩余z点，直接将z点加入N'里，得到最终的结果</p></li></ul><p>Dijkstra算法在最坏情况下，每一次迭代都要检查所有不在N'中的点，所以要进行：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="38.494ex" height="4.855ex" role="img" focusable="false" viewBox="0 -1460 17014.2 2146" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3322.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4322.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4711.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5534.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(6534.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7034.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7645.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8645.8,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(10040,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(11040.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(11818,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(12873.8,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3100.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mn" transform="translate(1820.2,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><rect width="3900.4" height="60" x="120" y="220"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><mn>1</mn><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi>n</mi></mrow><mn>2</mn></mfrac></math></mjx-assistive-mml></mjx-container><p>次比较，算法的时间复杂度为：<strong>O(n^2 )</strong>。</p><p>借助优先队列（通常使用最小堆）可帮助快速找到当前距离最小的节点并更新邻接节点的最短路径，从而将复杂度降低为<strong>O(nlogn)</strong>。对于每个节点从优先队列入队和出队的复杂度为O（logn），一共涉及n个节点，因此为O(nlogn)。</p><h4 id="（3）路由选择的震荡">（3）路由选择的震荡</h4><p>我们以下图为例解释路由选择的震荡：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d4109207.png" alt="4"></p><p>已知链路的开销是非对称的，也就是说从v到u的代价与从u到v的代价不一定相同。初始状态如图a所示，z顺时针向w发送一个单位的流量；x逆时针向w发送一个单位的流量；y逆时针向w发送大小为e的流量。</p><p>当LS算法再次运行时，y发现顺时针到w的开销为1，逆时针到w的开销为1+e，于是选择改为顺时针发送。而x样发现了顺时针的开销更小，选择顺时针发送。于是变成了图b的状态。</p><p>当LS算法下次运行时，x、y、z又都被引导到了逆时针的方向，变成了图c的状态。</p><p>当LS算法再下次运行时，x、y、z又都被引导到了顺时针的方向，变成了图d的状态。</p><p>为了防止路由震荡，我们可以确保不是所有的路由器都同时运行链路状态（LS）算法。</p><h3 id="3-距离向量路由选择算法">3.距离向量路由选择算法</h3><h4 id="（1）实现方式-2">（1）实现方式</h4><p>DV算法的基本思想是：</p><ul class="lvl-0"><li class="lvl-2"><p>各路由器维护一张路由表，表项包括目标点，下一跳以及到达目标点所需的代价；</p></li><li class="lvl-2"><p>各路由器与相邻的路由器交换路由表；</p></li><li class="lvl-2"><p>根据获得的路由信息，更新路由表；</p></li></ul><blockquote><p><strong>注意</strong>：路由表这三个表项的含义是，已知一条从自身到达目标点D的路径，该路径的代价为C，按照该路径行动时，源点的下一跳为N，则路由器会在路由表中记录下目标点D，下一跳N和代价C。如果在和相邻路由器交换信息的过程中发现了同目标代价更小的路径，则会按照同样的格式更新路由表。</p></blockquote><p>而最低开销路径的计算则要借助于著名的<strong>Bellman-Ford方程</strong>：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="29.428ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 13007 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1007.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1396.5,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1886.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2553.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3609,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4487,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(4832,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(633,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(5858,0)"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(6358,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(6791,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(7180,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7752,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(8196.6,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(8681.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9292.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(10293.1,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(11239,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(11628,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(12118,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(12507,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>i</mi><msub><mi>n</mi><mrow data-mjx-texclass="ORD"><mi>v</mi></mrow></msub><mo fence="false" stretchy="false">{</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo>,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>d</mi><mi>v</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="false" stretchy="false">}</mo></math></mjx-assistive-mml></mjx-container><p>方程中的min_v是对于x的所有邻居，c(x，y)表示从x到v的代价。d_v(y)表示从v到目标y的代价，d_x(y)表示从x到目标y的代价，让我们带着这个方程来观察下面这张图：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d4b53eef.png" alt="5"></p><ul class="lvl-0"><li class="lvl-2"><p>以图中的节点J为例，J的相邻节点为A、I、H、K，然后J测得到这四个点的延迟分别为8ms、10ms、12ms、6ms；</p></li><li class="lvl-2"><p>通过交换路由Bellman-Ford方程表，从A、I、H、K那里分别获得它们到达G的延迟为18ms、31ms、6ms、31ms；</p></li><li class="lvl-2"><p>利用Bellman-Ford方程计算出J经过这四个点到达G的延迟分别为26ms、41ms、18ms、37ms，选择延迟最小的H点，18ms更新到自己的路由表中。</p></li><li class="lvl-2"><p>计算其他目标点同理，但要注意排除自己本身J点（不然会计算出奇怪的东西doge）</p></li></ul><p>相较于集中式的LS算法，<strong>DV算法是一种迭代的、异步的和分布式的算法。</strong></p><ul class="lvl-0"><li class="lvl-2"><p>“分布式”是因为每个节点都要从一个或多个直接相连临节点接收某些信息，执行计算然后将计算结果分发给邻居；</p></li><li class="lvl-2"><p>“迭代”是因为这个过程一直要持续到邻居之间无更多的信息要交换位置（此算法是自我终结的，即不需要外部的明确终止信号，当邻居之间没有更多的更新消息需要交换时，算法就会停止）；</p></li><li class="lvl-2"><p>“异步”是因为它不要求所有的节点相互之间步伐一致地操作。</p></li></ul><p>每个节点会在<strong>等待</strong>、<strong>重新计算</strong>和<strong>通告</strong>这三种状态之间循环切换：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d55dd1ad.png" alt="6"></p><h4 id="（2）DV的无穷计算问题">（2）DV的无穷计算问题</h4><p><strong>DV具有好消息传的快，坏消息传的慢的特点。</strong></p><p>好消息的传播以每一个交换周期前进一个路由器的速度进行：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d66e3ac6.png" alt="7"></p><p>以上图为例，这里以跳数来代表代价，初始状态下A到其他点均不可达。然后我们连接A点和B点，这时B点的路由表上会更新出到达A点代价为1的一条路径。通过信息交换，C点从B点得到了这个信息，在自己的路由表上更新了到达A点代价为2的路径。然后按照这种方式再依次传递给D点，E点。</p><p>而坏消息的传播速度就非常慢，存在<strong>路由选择环路（routing loop）</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d6f50a95.png" alt="8"></p><p>以上图为例，初始状态下链路完整，节点下的数字代表其到A点的跳数。假设A到B的链路意外中断，此时B检测到A不可达，更新自己的路由表。然后在第一次信息交换后，C点向B点表示自己有一条代价为2的路径可达A点，于是B更新自己的路由表，将到达A的代价从无穷修改为2+1=3（然而C点所谓的可达A点的路径，下一跳正是B点自己，憋笑.jpg）。于是B点认为A点可达，向A点发送信息时，选择C点作为下一跳，而C点记录的下一跳是B点，于是又将数据发回B点，就像这样形成了回路。只有当下一次信息交换时，各自再更新到达A点的代价为Min(left，right)+1，如此往复循环，无限次后，到达A的距离变为无穷大，不可达。</p><h4 id="（3）水平分裂算法和毒性逆转">（3）水平分裂算法和毒性逆转</h4><p><strong>水平分裂（split horizon）算法</strong>是一种对无穷计算问题的解决方法。</p><p>重新使用我们在坏消息传的慢的例子中所构建的场景，当A到B的链路意外中断后，开始第一次信息交换。此时C点向B点发送自己的信息时，因为它知道自己到达A的下一跳就是B，于是选择不在B面前班门弄斧，把自己到达A的路径藏起来，告诉B自己不可达A。但是C点向D点发送自己的信息时，则是正常地把自己记录的到达A点的距离传达出去，通过这种方式来避免回路的产生，A点不可达的坏消息以一次交换一个节点的速度向外传播。我们将这种不将从某个邻居学到的路由信息通过同一个接口再返回给该邻居的算法称之为水平分裂算法，《自顶向下》这本书上也将其称之为<strong>毒性逆转（Poison Reverse）</strong>。</p><p>但实际上，水平分裂算法并没有解决一般的无穷计数问题，例如涉及3个或更多节点（而不只是两个直接相连的邻居节点）的环路：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d765c4f1.png" alt="9"></p><p>在这张图中，如果CD之间的路径失效了，C获知D不可达。在信息交换后从AB处获得的信息也为D不可达，因此认为D不可达。但是A从C处获得D不可达的同时，又从B处得知B到D的距离为2，于是认为自己到D的距离为3。点B也同理，经过无限次信息交换后，AB才知道D不可达。</p><h3 id="4-LS与DV路由选择算法的比较">4.LS与DV路由选择算法的比较</h3><p><strong>报文复杂性（DV复杂度更低）</strong>：LS算法要求每个节点知道网络中每条链路的开销，这就要求发送O（|N| |E|）个报文（N个节点，E条链路），而DV只需要相邻连接的点直接交换报文。</p><p><strong>收敛速度（LS收敛速度更快）</strong>：LS算法的实现是一个要求O（|N| |E|）个报文的时间复杂度为O（N_2）的算法，可能遇见路由震荡的问题；而DV算法收敛较慢，且在收敛时会遇到路由选择环路，遭遇无穷计数问题。</p><p><strong>健壮性（LS的健壮性更强）</strong>：在LS中，每个节点都通过接收和处理网络中所有节点的链路状态通告（LSA）来计算其自身的路由表。因此，即使某个节点广播了不正确的链路开销信息，但每个节点独立计算自己的转发表，这为网络的健壮性提供了一定的保障。而在DV算法中，一个节点可向任意或所有目标节点通告其不正确的最低开销路径。例如一个故障路由器错误地向其邻居提供了自己链路代价极低的信息，这将导致其他路由器将大量流量引向该故障路由器。</p><h2 id="三、因特网中自治系统内部的路由选择">三、因特网中自治系统内部的路由选择</h2><h3 id="1-RIP">1.RIP</h3><p><strong>RIP（Routing Information Protocol）</strong> 的中文名是路由信息协议，它是内部网关协议IGP中最先得到广泛使用的协议。</p><p>RIP是一种分布式的<strong>基于距离向量的路由选择协议</strong>，RIP以<strong>跳数（hop count）</strong> 作为代价，每经过一个路由器就加一。RIP允许一条路径最多只能包含15个路由器，距离16相当于不可达，每个DV（距离矢量，Distance Vector）通告最多可以包含 25 个目标网络。，因此RIP只适用于小型互联网。</p><p>RIP的特点是：</p><ul class="lvl-0"><li class="lvl-2"><p>仅和相邻路由器交换信息。</p></li><li class="lvl-2"><p>路由器交换的信息是当前本路由器所知道的全部信息，即自己现在的路由表，内容是“我到本自治系统AS中所有网络的（最短）距离，以及到每隔网络应经过的下一跳路由器”。</p></li><li class="lvl-2"><p>按照固定的时间间隔交换路由信息，如每隔30秒一次；当网络拓扑发生改变时，路由器也会及时向相邻路由器通告拓扑变化后的路由信息。</p></li></ul><blockquote><p><strong>注意</strong>：到直接连接的网络的距离定义为1，也有些地方定义为0（理由是路由器在和直接连接在该网络上的主机通信时，不需要经过另外的路由器），具体视情况而定，但两种不同的定义都不影响RIP的实现。</p></blockquote><p>RIP以应用进程的方式实现，通告报文通过<strong>UDP</strong>报文传送（很有意思，以应用层的进程的形式借助传输层的UDP实现了网络层的RIP协议）。</p><h3 id="2-OSPF">2.OSPF</h3><p><strong>OSPF（Open Shortest Path First）</strong> 的中文名是开放最短路径优先。它同样是内部网关协议IGP中的协议，是为了克服RIP的缺点而开发出来的。</p><p>OSPF最主要的特征是使用分布式的<strong>链路状态协议</strong>，而不是向RIP那样的距离向量协议。相较于RIP，OSPF新增了以下“高级特性”（RIP所没有的）：</p><ul class="lvl-0"><li class="lvl-2"><p>安全，所有的OSPF报文都是经过认证的，可防止恶意攻击。</p></li><li class="lvl-2"><p>允许有多个代价相同的路径存在，即当OSPF发现到达目的地有多条代价相同的路径时，它可以将这些路径均添加到路由表中（RIP只能保存一个），在它们之间实现某种程度上的负载均衡。</p></li><li class="lvl-2"><p>对单播和多播路由选择的综合支持。</p></li><li class="lvl-2"><p>支持在单个自治系统AS中的层次结构，我们在下面详细介绍其在AS中的层次结构。</p></li></ul><p><strong>层次化的OSPF路由</strong>如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457d7f57f9e.png" alt="10"></p><p>一个OSPF自治系统能够层次化地配置多个区域，包括图中的骨干区域和本地区域，每个区域都运行自己的OSPF链路状态路由算法，区域内的每台路由器的链路状态通告仅在本地区域内广播，且仅拥有本地区域的拓扑信息。</p><ul class="lvl-0"><li class="lvl-2"><p>区域边界路由器（area border router）负责连接多个区域，并在不同区域之间传播路由信息。</p></li><li class="lvl-2"><p>骨干路由器（backbone router）仅在骨干区域内，运行OSPF路由。</p></li><li class="lvl-2"><p>边界路由器（boundary router）用于连接其他的AS。</p></li></ul><h2 id="四、ISP之间的路由选择：BGP">四、ISP之间的路由选择：BGP</h2><h3 id="1-层次路由">1.层次路由</h3><p>所有路由器在一个平面所面临的问题：</p><ul class="lvl-0"><li class="lvl-2"><p>规模问题：规模巨大的网络中，路由信息的存储、传输和计算代价巨大。</p></li><li class="lvl-2"><p>管理问题：不同的网络所有者希望按照自己的方式管理网络，但一个平面的路由只能用相同的路由选择算法，且不能隐藏自己的网络细节。</p></li></ul><p><strong>层次路由</strong>将互联网分成一个个AS（autonomous systems，自治系统），一个AS用AS Number（ASN）唯一标识，一个ISP可能包括一个或多个AS。</p><p>通过这种方式，路由变成了两个层次的路由：</p><p>AS内部路由：在同一个AS内的路由器运行相同的路由协议，但不同的AS可能运行着不同的内部网关协议，解决了规模和管理问题。</p><p>AS外部路由：所有的AS运行相同的AS间路由选择协议，称为<strong>边界网关协议（Border Gateway Protocol，BGP）</strong>，解决AS之间的路由问题，完成AS之间的路由互通。</p><h3 id="2-BGP">2.BGP</h3><h4 id="（1）简介">（1）简介</h4><p>边界网关协议BGP采用<strong>路径向量（path vector）路由选择协议</strong>，不同于传统的距离向量，其向其他AS通告的信息不仅包括到达目标的下一跳和代价，还包括到达各个目标的详细路径（AS序号的列表），这一点使得BGP能够避免简单DV算法中的路由环路问题。</p><p>BGP协议只是力求寻找一条能够到达目的网络且比较好的路径，而并非要寻找一条最佳路由，因为还要考虑不同的路由选择策略，如国内的站点在传送数据时尽量避开某些对我国安全有威胁的国家等等。</p><p>BGP使用<strong>TCP</strong>交换报文，BGP报文有以下四种：</p><ul class="lvl-0"><li class="lvl-2"><p>OPEN（打开）报文：打开TCP连接，认证发送方。</p></li><li class="lvl-2"><p>UPDATE（更新）报文：通告新路径，或者撤销原路径。</p></li><li class="lvl-2"><p>KEEPALIVE（保活）报文：在没有更新时保持连接，也用于对OPEN 请求确认</p></li><li class="lvl-2"><p>NOTIFICATION（通知）报文：报告以前消息的错误，也用来关闭连接</p></li></ul><h4 id="（2）通告BGP路由信息">（2）通告BGP路由信息</h4><p><img src="https://bu.dusays.com/2024/11/26/67457d8ab2a52.png" alt="11"></p><p>上图是一个具有三个自治系统的简单网络，对于每个AS中的路由器，我们可以分为两类：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>网关路由器（gateway router）</strong>：位于AS边缘的路由器，直接连接到其他AS中的一台或多台路由器，如图中的1c、2a等。</p></li><li class="lvl-2"><p><strong>内部路由器（internal router）</strong>：仅连接在它自己AS中的主机和路由器，如图中的1a、1b。</p></li></ul><p>在BGP中，每对路由器通过使用179端口的半永久<strong>TCP连接</strong>交换路由选择信息，每一条这样的直接连接以及通过它发送的所有BGP报文，称为<strong>BGP连接（BGP Connection）</strong>。BGP连接也可分为两种：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>外部BGP（eBGP）</strong>：跨越两个AS的BCP连接。</p></li><li class="lvl-2"><p><strong>内部BGP（iBGP）</strong>：在相同AS中的两台路由器之间的BGP连接（iBGP连接用不总是与物理链路对应）。</p></li></ul><p><img src="https://bu.dusays.com/2024/11/26/67457d94e46fc.png" alt="12"></p><p>我们以上图为例考虑实现向所有路由器通告右下角子网x的可达性：</p><p>网关路由器3a先向网关路由器2c发送一个eBGPb报文“AS3 x”，表示x存在且位于AS3中。网关路由器2c然后向AS2中的所有其他路由器（包括网关路由器2a）发送iBGP报文“AS3 x”。网关路由器2a接下来向网关路由器1c发送一个eBGP报文“AS2 AS3 x”，报文中包括了AS序号形式的到达x的详细路径。最后网关路由器1c使用iBGP向ASI中的所有路由器发送报文“AS2 AS3 x”。在这个过程完成后，AS1和AS2的每个路由器都知道了x的存在并且也都知道了通往x的AS路径。</p><h4 id="（3）BGP路径选择">（3）BGP路径选择</h4><p>当GP 路由器通过 BGP 连接通告前缀（这里前缀代表目的子网，例如我们上面提到的x）时，它不仅仅通告 IP 前缀，还会包含一些重要的<strong>BGP属性（BGP Attributes）</strong>，其中两个最重要的属性是 <strong>AS-PATH</strong> 和 <strong>NEXT-PATH</strong> 。</p><p><strong>AS-PATH</strong> 属性包含了该通告已经通过的AS列表，例如下图中，AS1到子网x有两条路，一条使用AS-PATH“AS2 AS3”，而另一条使用AS-PATH“AS3”。该属性还可以用来检测和防止通告环路，如果一台路由器在路径列表中看到了包含自己的AS，它将拒绝通告。</p><p><strong>NEXT-PATH</strong> 是<strong>AS-PATH</strong> 起始的路由器接口的IP地址，例如下图中的2a和3d分别是从AS1到x的两条路径的NEXT-PATH。</p><p><img src="https://bu.dusays.com/2024/11/26/67457d9da9bb4.png" alt="13"></p><p><strong>热土豆路由选择（hot potato routing）</strong>，选择具备最小内部区域代价的网关作为往X的出口。以上图中的1b为例，如果想到达子网x，它可选的两条路径的NEXT-PATH分别为2a和3d。因为1b到达2a的最短距离为2，到达3d的最短距离为3，因此选择到达NEXT-PATH开销更小的路径“AS2 AS3”。核心思想是尽可能快地将分组送出其AS，就像丢烫手的土豆一样。</p><p>在实践中，BGP不仅会使用热土豆路由选择，还会结合其他多种策略和因素来优化路由选择。</p><h2 id="五、ICMP">五、ICMP</h2><h3 id="1-简介">1.简介</h3><p><strong>ICMP</strong>的中文名是<strong>网际控制报文协议（Internet Control Message Protocol）</strong>。</p><p>ICMP允许主机或路由器报告差错情况和提供有关异常情况的报告。ICMP报文封装在IP数据报中，作为其中的数据部分，通常被认为是IP的一部分（但是从体系结构上讲它位于IP之上，因为ICMP报文是作为IP有效载荷承载的，就像TCP与UDP报文段作为IP有效载荷被承载那样，但不论如何，ICMP都是<strong>网络层协议</strong>）。</p><p>ICMP报文段种类有两种，即<strong>ICMP差错报告报文</strong> 和<strong>ICMP询问报文</strong>。</p><p>ICMP报文的前四个字节是统一的格式，包括三个字段：类型、代码和检验和。接着的4个字节与ICMP的类型有关，最后面是数据字段，其长度取决于ICMP的类型，下面是几种常用的报文类型：</p><table border="1">  <thead>    <tr>      <th>ICMP 报文种类</th>      <th>类型的值</th>      <th>ICMP 报文的类型</th>    </tr>  </thead>  <tbody>    <tr>      <td style="vertical-align: middle;" rowspan="4">差错报告报文</td>      <td>3</td>      <td>终点不可达</td>    </tr>    <tr>      <td>11</td>      <td>时间超时</td>    </tr>    <tr>      <td>12</td>      <td>参数问题</td>    </tr>    <tr>      <td>5</td>      <td>改变路由 (Redirect)</td>    </tr>    <tr>      <td style="vertical-align: middle;" rowspan="2">询问报文</td>      <td>8 或 0</td>      <td>回送 (Echo) 请求或回答</td>    </tr>    <tr>      <td>13 或 14</td>      <td>时间戳 (Timestamp) 请求或回答</td>    </tr>  </tbody></table><h3 id="2-ICMP差错报告报文">2.ICMP差错报告报文</h3><p>ICMP差错报文共有四种：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>终点不可达</strong>：当路由器或主机不能交付数据报时就向原点发送终点不可达报文。</p></li><li class="lvl-2"><p><strong>时间超过</strong>：当路由器收到生存时间为零的数据报时，除丢弃该数据报外，还要向原点发送时间超过报文；当终点在预先规定的时间内不能收到一个数据报的全部数据报片时，就把已收到的数据报片都丢弃，并向源点发送时间超过报文。</p></li><li class="lvl-2"><p><strong>参数问题</strong>：当路由器或目的主机收到的数据报的首部中有的字段的值不正确时，就丢弃该数据报，并向源点发送参数问题报文。</p></li><li class="lvl-2"><p><strong>改变路由（重定向）</strong>：路由器把改变路由报文发送给主机，让主机知道下次应将数据报发送给另外的路由器（可通过更好的路由）。</p></li></ul><p>所有的ICMP差错报文中的数字字段都有相同的格式，如下图所示：把需要进行差错报告的IP数据报的首部和数据字段的前8个字节（这8个字节是为了得到传输层TCP/UDP的端口号以及传输层TCP报文的发送序号）提取出来，作为ICMP报文的数据字段，前面在加上相应的ICMP差错报告报文的前8个字节，就构成了ICMP差错报告报文。</p><p><img src="https://bu.dusays.com/2024/11/26/67457da6f0f7c.png" alt="14"></p><p>在以下情况不应发送ICMP差错报告报文：</p><ul class="lvl-0"><li class="lvl-2"><p>对ICMP差错报告报文，不再发送ICMP差错报告报文（禁止套娃doge）。</p></li><li class="lvl-2"><p>对第一个分片的数据报片的所有后续数据报片，都不发送ICMP差错报告报文。</p></li><li class="lvl-2"><p>对具有多播地址的数据报，都不发送ICMP差错报告报文。</p></li><li class="lvl-2"><p>对具有特殊地址（如127.0.0.0或0.0.0.0）的数据报，不发送ICMP差错报告报文。</p></li></ul><h3 id="3-ICMP询问报文">3.ICMP询问报文</h3><p>常用的ICMP询问报文有两种：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>回送请求和回答</strong>：ICMP回送请求报文是由主机或路由器向一个特定的目的主机发出的询问，收到的主机必须给源主机或路由器发送ICMP回送回答报文。这种报文用于测试目的站是否可达以及了解其有关状态。</p></li><li class="lvl-2"><p><strong>时间戳请求和回答</strong>：ICMP时间戳请求报文是请某台主机或路由器回答当前的日期和时间。时间戳请求与回答可用于时钟同步和时间测量。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</title>
      <link href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/"/>
      <url>/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥计算机网络 自顶向下方法 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网">《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</a></li><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第二章 应用层">《计算机网络 自顶向下方法》笔记：第二章 应用层</a></li><li><a href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第三章 传输层">《计算机网络 自顶向下方法》笔记：第三章 传输层</a></li><li><a href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面">《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</a></li><li><a href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面">《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</a></li><li><a href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网">《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</a></li></ol></blockquote><h2 id="一、导论">一、导论</h2><h3 id="1-网络层概述">1.网络层概述</h3><p><strong>提供的服务</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>在发送主机和接收主机对之间传送<strong>报文段（segment）</strong></p></li><li class="lvl-2"><p>在发送端将报文段封装到<strong>数据报（datagram）</strong> 中</p></li><li class="lvl-2"><p>在接收端将数据报解封装，提取出报文段上交给传输层实体</p></li><li class="lvl-2"><p>网络层协议存在于每一个主机和路由器中</p></li><li class="lvl-2"><p>路由器会检查每一个经过它的 IP 数据报的头部</p></li></ul><p><strong>网络层的关键功能</strong>：</p><p><strong>转发（forwarding）</strong>：指将分组从一个输入链路接口转移到适当的输出链路接口的路由器本地动作（即，对于每一个具体的数据交换结点，决定分组从某个端口入，再从某个合适的端口发送出去，是一个局部的概念）</p><p><strong>路由（routing）</strong>：指确定分组从源到目的地所采取的端到端路径的网络范围处理过程（即，规划从源到目标的详细路径，是一个全局的概念）</p><p>计算路由选择路径的算法被称为<strong>路由选择算法（routing algorithm）</strong>，在网络中交换路由信息的通信协议被称为<strong>路由选择协议（Routing Protocol）</strong>。</p><h3 id="2-数据平面">2.数据平面</h3><p><strong>功能</strong>：数据平面负责实际的数据报转发（即转发功能的实现）</p><p>每台网络路由器中都有一个关键元素——<strong>转发表（forwarding table）</strong></p><p><strong>转发功能的实现方式</strong>：传统方式、SDN（软件定义网络 Software Defined Network）方式</p><p><strong>传统方式</strong>：基于目标地址 + 转发表</p><p>路由器会检查到达分组首部的一个或多个字段值，进而使用这些首部值在其转发表中索引，通过这种方法来转发分组。</p><p><strong>SDN 方式</strong>：基于多个字段 + 流表（Flow Table）</p><p>SDN 中流是指共享首部某些字段的值的一种分组序列，如具有相同源IP地址和目的IP地址的一系列分组。SDN 中流表指分组交换机中用于转发的表（即记录流转发方式的表）。SDN使用流表取代传统路由器中的转发表。</p><p>在 SDN 方式下，数据平面设备包含一个或多个流表（Flow Table），用于存储流量匹配规则。数据平面采用基于多个字段匹配和流表的机制，可以实现更加灵活和精细的流量转发控制。通过 SDN 控制器对流表的集中化管理，网络管理员可以对整个网络进行可编程和自动化的配置和管理。</p><p>如果找到匹配项，交换机会根据流表中的指令执行相应的操作（如转发、丢弃、泛洪、修改数据包等）；如果没有找到匹配项，数据包会被转发到 SDN 控制器，由控制器决定如何处理并下发新的流表规则。</p><h3 id="3-控制平面">3.控制平面</h3><p><strong>功能</strong>：控制平面决定数据报如何在路由器之间路由，决定数据报从源到目标主机之间的端到端路径（即路由功能的实现）</p><p><strong>控制平面方法</strong>：传统方式、SDN方式</p><p><strong>传统的路由算法</strong>：</p><p>路由选择算法运行在每台路由器中，并且在<strong>每台路由器中都包含转发和路由选择两种功能</strong>。一台路由器中的路由选择算法与其他路由器中的路由选择算法通信，以计算出它的转发表的值。而这种通信的执行则依靠路由选择协议交换包含路由选择信息的路由选择报文。</p><p><strong>SDN 方法</strong>：</p><p>SDN 方式下控制平面路由选择功能与物理的路由器是分离的，即<strong>路由器选择设备仅执行转发</strong>，而远程控制器计算并分发流表。</p><p>SDN 允许网络管理员在不手动处理网络硬件设备的前提下，使用集中化程序重新规划网络，控制复杂网络拓扑以及网络流量。它打破了传统基础架构的限制，<strong>将传统的分布式规则计算演变为集中计算</strong>，具有低成本、管理简化、灵活性高和可扩展性强等优点。</p><blockquote><p><strong>注意</strong>：这里为了区分数据平面和控制平面，把传统方式和SDN方式各分割为两块来讲，因此可能有些混乱，难以理解。本章最后一节，我们将重新完整地讨论SDN方式。</p></blockquote><h3 id="4-网络服务模型">4.网络服务模型</h3><p><strong>网络服务模型（network service model）</strong> 定义了分组在发送与接收端系统之间的端到端运输特性。</p><p>这些服务包括：</p><ul class="lvl-0"><li class="lvl-2"><p>确保交付：该服务确保分组将最终到达目的地</p></li><li class="lvl-2"><p>具有时延上界的确保交付：该服务不仅确保分组的交付，而且在特定的主机到主机时延上界内（例如在 100 ms 内）交付</p></li><li class="lvl-2"><p>有序分组交付：该服务确保分组以他们发送的顺序到达目的地</p></li><li class="lvl-2"><p>确保最小带宽：这种网络层服务模仿在发送和接收主机之间一条特定比特率（例如 1 Mbps）的传输链路的行为。只要发送主机以低于特定比特率的速率传输比特（作为分组的组成部分），则所有分组最终会交付到目标主机</p></li><li class="lvl-2"><p>安全性：网络层能够在源加密所有数据报并在目的地解密这些分组，从而对所有运输层报文段提供机密性</p></li></ul><p>因特网的网络层提供了单一的服务，称为<strong>尽力而为服务（best-effort service）</strong>。使用尽力而为服务，传送的分组既不能保证以它们发送的顺序被接收，也不能保证它们最终交付；既不能保证端到端时延，也不能保证有最小的带宽（尽力而为服务是根本无服务的一种委婉的说法，因为即使一个没有向目的地交付分组的网络也依旧符合这种模型的定义）。</p><blockquote><p><strong>分组交换机</strong></p><p>在《自顶向下方法》中，我们约定分组交换机是指一台通用分组交换设备，他根据分组首部字段中的值，从输入链路接口到输出链路接口转移分组。某些分组交换机称为<strong>链路层交换机（link-layer switch）</strong>，基于链路层帧中的字段值做出转发决定，这些交换机因此被称为链路层设备；其他分组交换机称为<strong>路由器（router）</strong>，基于网络层数据报中的首部字段值做出转发决定，路由器因此是网络层设备。</p></blockquote><h2 id="二、路由器组成">二、路由器组成</h2><h3 id="1-路由器工作原理">1.路由器工作原理</h3><p>通用路由器的体系结构如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457b83e50eb.png" alt="1"></p><p>上方为控制平面，负责路由：运行路由选择算法/协议（RIP、OSPF、BGP） - 生成路由表</p><p>下方为数据平面，负责转发：从输入到输出链路交换数据报 - 根据路由表进行分组的转发</p><h3 id="2-输入端口处理和基于目的地转发">2.输入端口处理和基于目的地转发</h3><h4 id="（1）输入端口结构与功能">（1）输入端口结构与功能</h4><p><img src="https://bu.dusays.com/2024/11/26/67457b8cd4ba6.png" alt="2"></p><ul class="lvl-0"><li class="lvl-2"><p>线路端接：处理Bit级的接收，通过物理层连接将外部信号接入路由器</p></li><li class="lvl-2"><p>数据链路处理：在链路层根据协议标准进行数据拆包，将链路层帧转换为网络层数据包</p></li><li class="lvl-2"><p>查找、转发、排队：数据包在进入路由器后，<strong>输入端口要进行查找操作</strong>（路由器使用转发表来查找输出端口，使得到达的分组能经过交换结构转发到该输出端口），然后决定是否将数据包转发到其他端口或队列进行排队，等待传输到输出端口。</p></li></ul><p>转发分为两种：<strong>基于目的地转发</strong>（仅仅依赖于 IP 数据报的目标 IP 地址，传统方法）和<strong>通用转发</strong>（基于头部字段的任意集合进行转发，更加灵活，能支持更复杂的策略和功能）</p><h4 id="（2）最长前缀匹配">（2）最长前缀匹配</h4><p>在基于目的地转发模式下，我们使用<strong>最长前缀匹配规则（longest prefix matching rule）</strong> 来查找路由。</p><p>假设我们的路由器有四条链路，路由器的转发表里只需要包括如下四个表项：</p><p><img src="https://bu.dusays.com/2024/11/26/67457b97f4054.png" alt="3"></p><p>采用这种方式，路由表就不需要针对每个可能的目的地址都存储一个表项，大大减少了内存消耗。对于上面这种风格的转发表，路由器用分组目的地址的<strong>前缀（prefix）</strong> 与该表中的表项进行匹配。例如存在一个分组的目标地址是11001000 00010111 00010110 10100001，因为该地址的前 21 比特前缀匹配该表的第一项，所以路由器向链路接口 0 转发该分组。</p><p>如果有一个分组既能与第二项匹配，又能与第三项匹配，那么路由器会使用最长前缀匹配规则，选取第二项进行匹配，向与其对应的接口 1 发送分组。</p><h4 id="（3）输入端口缓存">（3）输入端口缓存</h4><p>当交换结构的速率小于输入端口的汇聚速率时，在输入端口可能需要排队，输入缓存溢出后可能造成丢失。</p><p>通常来说交换结构的速率被设计为足够快，以确保能够处理输入端口接收到的分组，那么为什么还是会产生排队呢？主要有以下几种原因：</p><ul class="lvl-0"><li class="lvl-2"><p>汇聚效应（流量突发）：多个输入端口可能同时接收到大量的流量，并且这些流量都需要通过同一个输出端口进行转发。</p></li><li class="lvl-2"><p>队首阻塞问题（Head-of-Line Blocking）：比如，输入端口中的多个数据包等待被发送到不同的输出端口，但由于第一个数据包的目标输出端口暂时不可用，后续的数据包也无法被处理，导致整个输入队列阻塞，形成排队。</p></li><li class="lvl-2"><p>非均匀流量分布：网络中的流量往往是非均匀分布的，有的端口可能处于空闲状态，而另一些端口可能会收到大量数据。如果多个输入端口的流量都要发送到某个输出端口时，交换结构虽然速率高，但在短时间内可能会出现流量竞争。</p></li></ul><h3 id="3-交换结构">3.交换结构</h3><h4 id="（1）交换结构的功能">（1）交换结构的功能</h4><p><strong>交换结构（Switching Fabric）</strong> 在路由器中起着核心作用，负责将数据包从输入缓冲区正确地转发到相应的输出端口。</p><p><strong>交换速率</strong>：分组可以按照该速率从输入端口传输到输出端口</p><ul class="lvl-0"><li class="lvl-2"><p>运行速度通常是输入/输出链路速度的若干倍</p></li><li class="lvl-2"><p>对于N个输入端口，交换结构的交换速率是输入线路速度的N倍才比较理想，不会成为瓶颈</p></li></ul><p>三种典型的交换结构见下图：分别是通过内存、总线、互联网络的交换</p><p><img src="https://bu.dusays.com/2024/11/26/67457ba3aae1a.png" alt="4"></p><h4 id="（2）通过内存的交换">（2）通过内存的交换</h4><p>该交换结构下，输入端口与输出端口之间的交换是在CPU（路由选择处理器）的直接控制下完成的。</p><p>在这种情况下，如果内存带宽为每秒可写进内存或从内存读出最多B个分组，则总的转发吞吐量（分组从输入端口被传送带输出端口的总速率）必然小于B/2，因为每个数据包需要写入和读出这两次操作。</p><p>此外，也无法同时转发两个分组，即使它们有不同的目的端口，因为经过共享系统总线，一次仅能执行一个内存读/写。</p><blockquote><p><strong>注意</strong>：基于内存的交换结构通常也使用共享总线，这是因为在基于内存的交换结构中，输入端口和输出端口都需要通过同一条总线与内存进行交互。</p></blockquote><h4 id="（3）通过总线的交换">（3）通过总线的交换</h4><p>该交换结构下，数据报通过共享总线，从输入端口转发到输出端口。</p><p>总线竞争：交换速率受限于总线的带宽</p><p>如果多个分组同时到达路由器，每个位于不同的输出端口，除了一个分组外所有其他分组必须等待，因为一次只有一个分组能够跨越总线。因为每个分组必须跨过单一总线，故路由器的交换带宽受总线速率的限制；</p><h4 id="（4）通过互联网络的交换">（4）通过互联网络的交换</h4><p>该交换结构下，同时并发转发多个分组，克服单一、共享式总线带宽限制。</p><p>例如纵横式（crossbar）交换机就是一种用 2N 条总线组成的互联网络，它连接N个输入端口与N个输出端口。每条垂直的总线在交叉点与每条水平的总线交叉，交叉点通过交换结构控制器能够在任何时间开启和闭合。</p><p><img src="https://bu.dusays.com/2024/11/26/67457bb42fd8c.png" alt="5"></p><p>纵横式网络能够并行转发多个分组。例如当分组达到端口A，需要转发到端口Y时，交换机控制器闭合总线A和Y交叉部位的的交叉点，然后端口A在其总线上发送该分组，该分组仅由总线Y接收。而来自端口B的一个分组在同一时间能够转发到端口X，因为A到Y和B到X的分组使用不同的输入和输出总线。</p><p>纵横式交换机是<strong>非阻塞的（nonblocking）</strong>，即只要没有其他分组当前被转发到该输出端口，转发到输出端口的分组将不会被到达输出端口的分组阻塞。然而，如果来自两个不同输入端口的两个分组其目的地为相同的输出端口，则一个分组必须在输入端等待，因为在某个时刻，经给定总线仅能够发送一个分组。</p><blockquote><p><strong>注</strong>：这里非阻塞的定义是中文版书上的原话，我只能说非常抽象。我们可以把它理解为只要目标输出端口是空闲的，输入端口的分组就可以立即传输到该输出端口，不会因为交换结构本身的原因被阻塞。</p></blockquote><p>更为复杂的互联网络使用多级交换元素，以使来自不同输入端口的分组通过交换结构同时朝着相同的输出端口前行。</p><h3 id="4-输出端口处理">4.输出端口处理</h3><h4 id="（1）输出端口结构与功能">（1）输出端口结构与功能</h4><p><img src="https://bu.dusays.com/2024/11/26/67457bbd78ef5.png" alt="6"></p><p>与输入端口对应，输出端口处理取出已经存放在输出端口内存中的分组并将其发送到输出链路上。这包括选择和取出排队的分组进行传输，执行所需的链路层和物理层传输功能。</p><h4 id="（2）输出端口缓存">（2）输出端口缓存</h4><p>当来自不同输入端口的多个分组的目的地是相同的输出端口，因为交换结构的交换速率一般是输出线路速度的N倍（假定输入线路速度与输出线路速度相同），所以分组会很快地堆积在该输出端口，形成分组队列。</p><p>当没有足够的内存来缓存一个入分组是，就必须做出决定：丢弃到达的分组（采用一种称为<strong>弃尾（drop-tail）</strong> 的策略），要么删除一个或多个已排队的分组为新来的分组腾出空间。</p><p><strong>主动队列管理（Active Queue Management, AQM）</strong> 是一类用于缓解网络拥塞的算法，旨在在网络设备（如路由器）的缓冲区尚未填满之前采取措施，通过主动丢弃或标记分组，向发送方提供拥塞信号，以促使发送方调整其传输速率，从而防止拥塞进一步加剧。</p><p><strong>随机早期检测（Random Early Detection, RED）</strong> 算法是得到最广泛研究和实现的 AQM 算法之一</p><h3 id="5-调度机制">5.调度机制</h3><p>调度机制用于处理排队的分组如何经输出链路传输的问题。</p><blockquote><p><strong>注意</strong>：分组的丢弃不属于调度机制的范畴，分组调度的主要任务是决定哪个数据包应该首先被传输。</p></blockquote><h4 id="（1）先进先出">（1）先进先出</h4><p><strong>先进先出（First-In-First-Out, FIFO）</strong>，也称先来先服务（FCFS）调度规则，按照分组到达输出链路队列的先后顺序来选择分组在链路上传输。</p><p>FIFO规则的运行过程如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457bcb5c47d.png" alt="8"></p><h4 id="（2）优先权排队">（2）优先权排队</h4><p>在<strong>优先权排队（priority queuing）</strong> 规则下，到达输出链路的分组被分类放入输出队列中的优先权类，如下图所示。</p><p><img src="https://bu.dusays.com/2024/11/26/67457bd2e50da.png" alt="9"></p><p>每个优先权类通常有自己的队列（不仅仅局限于图中的两种优先级），当选择一个分组传输时，优先权排队规则将从队列中为非空的的最高优先权类中传输一个分组。对于同一优先权类的分组之间的选择通常以FIFO方式完成。</p><p>在<strong>非抢占式优先权排队（non-preemptive priority queuing）</strong> 规则下，一旦分组开始传输，就不能打断。例如在下面的这个过程中，分组1、3和4属于高优先权类，分组2和5属于低优先权类。分组4到达时，分组2正在传输中，分组4不会将其打断，而是排队等待传输，等其传输完成后开始传输。</p><p><img src="https://bu.dusays.com/2024/11/26/67457bdbebc9d.png" alt="10"></p><h4 id="（3）循环和加权公平排队">（3）循环和加权公平排队</h4><p>在<strong>循环排队规则（round robin queuing discipline）</strong> 下，分组被分成不同的类，但类之间不在优先级。循环调度器在这些类之间轮流提供服务，传输完类1的一个分组后，开始传输类2的一个分组，然后是类3，以此类推，最后循环到类1。一个所谓的<strong>保持工作排队（work-conserving queuing）</strong> 规则在有（任何类的）分组排队等待传输时，不允许链路保持空闲，也就是说当前类没有分组时，会立即检查循环序列中的下一个类。</p><p>在<strong>加权公平排队（Weighted Fair Queuing, WFQ ）</strong> 规则下，分组会被分到不同的类，WFQ调度器也以循环的方式为各个类提供服务（同时它也是一种保持工作排队规则，即当前类为空则立刻检查下一个类）。但是由于每个类在任何时间间隔内可能收到不同数量的分组，因此每个类都会被分配一个权w，每一个类在一个循环中获得不同权重的服务量，如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457be8c99b7.png" alt="11"></p><p>实际上，每个队列得到的服务时间并不是严格按照权重比例的，因为它不会打断一个分组的传输来开始传输另一个分组。</p><h2 id="三、IP：Internet-Protocol">三、IP：Internet Protocol</h2><h3 id="1-IPv4数据报格式">1.IPv4数据报格式</h3><p><img src="https://bu.dusays.com/2024/11/26/67457bf132be6.png" alt="12"></p><p>IPv4分组的首部各字段解释如下：</p><p><strong>版本</strong>：占4比特，指IP协议版本号，IPv4分组中此处应为4。</p><p><strong>首部长度</strong>：占4比特，指分组首部总长度，以4字节为单位进行计算，首部固定部分总长度20字节，故此字段最小值为5。</p><p><strong>服务类型</strong>：占8比特，在之后的更新中更名为区分服务，定义了分组在网络中的传输优先级和处理方式。</p><p><strong>数据报长度</strong>：占16比特，指IP分组总长度（首部长度与数据部分长度之和），单位为字节。因字段位数有限，故理论上分组最大长度为2的16次方减一，即65535字节。</p><p><strong>标识、标志、片偏移</strong>：分别占16、3、13比特，与IP分片有关，我们在下一小节详细介绍。</p><p><strong>寿命</strong>：占8比特，寿命（Time-To-Live，TTL）字段用来确保数据报不会永远在网络中循环，当一台路由器处理数据报时，该字段的值减一，若TTL字段减为0，则该数据报必须丢弃。</p><p><strong>协议</strong>：占8比特，指IP分组所运载高层协议的类型。此高层并非指传输层及以上，而是指存在网络层协议且依赖于IP协议进行传输的高层协议，下表为常见的协议及对应的类型值。</p><table border="1" cellspacing="0" cellpadding="5">  <tr>    <th>协议</th>    <th>ICMP</th>    <th>IGMP</th>    <th>TCP</th>    <th>UDP</th>    <th>OSPF</th>  </tr>  <tr>    <td>IP分组协议字段值</td>    <td>1</td>    <td>2</td>    <td>6</td>    <td>17</td>    <td>89</td>  </tr></table><p><strong>首部检验和</strong>：占16比特，只检验分组首部，不包括数据部分，保障路由选择关系的正确性。检验方式与UDP相同。</p><p><strong>源地址</strong>：占32比特，源主机的IP地址。</p><p><strong>目的地址</strong>：占32比特，目的主机的IP地址。</p><p><strong>选项字段</strong>：此字段可选，长度为4的整倍数字节，最长40字节。为保证首部以4字节对齐，若选项长度不足，则需进行填充（通常为0）。</p><h3 id="2-数据报分片与重组">2.数据报分片与重组</h3><p>数据链路层的数据帧数据部分最大长度称为最大传送单元（MTU），不同协议和链路类型的MTU不同。过大的IP数据报需要被分片，即分割成若干个小的数据报。</p><p><strong>标识</strong>：16比特，源主机发送该分组时计数器的数值，并非序号，分组之间无序号关联。</p><p><strong>标志</strong>：3比特，从左到右依次是保留位、禁止分片（DF，Don't Fragment）、更多分片（MF，More Fragment）。</p><p><strong>片偏移</strong>：13比特，以8字节为单位进行计算，记录分片数据在原始数据中的起始位置。因为总长度字段比片偏移字段多3比特，在数值表示范围上前者是后者的8倍，故片偏移计数单位为8字节。</p><p><strong>分片过程</strong>：</p><ol><li class="lvl-3"><p>检查原分组总长度是否超过下一跳网络的MTU值，超过则继续执行接下来的分片步骤。</p></li><li class="lvl-3"><p>检查原分组首部标志位DF，若DF为1则表示禁止分片，路由器将丢弃该分组，若DF为0则继续执行以下步骤。</p></li><li class="lvl-3"><p>计算分片数据长度，片偏移。由于片偏移量的计数单位是8字节，因此分片数据最大长度必定为8的整倍数，同时不能超过MTU的值。</p></li><li class="lvl-3"><p>生成分片数据报，每一个分片都需要加上首部。首部各字段与原始数据报的基本相同，主要只修改了总长度，标志，片偏移，而标识保持不变。最后一分片数据报MF标志位为0，其余数据报MF标志位为1。</p></li></ol><p><strong>分片重组</strong>：</p><p>分片重组仅发生在目的主机（而不是下一跳路由器），目的主机依据首部标识重组原始数据报，并通过片偏移计算分片数据在原始数据中的正确位置。</p><blockquote><p><strong>注意</strong>：由于每个分片都需要加上首部，所以MTU过小将导致分组有效载荷占比减少，从而降低通信效率。因此分片时，每片都会取最大长度，最后余下的部分单独作为一个分片。</p></blockquote><h3 id="3-IPv4地址">3.IPv4地址</h3><h4 id="（1）IP地址">（1）IP地址</h4><p><strong>IP地址</strong>是对主机或者路由器与网络的接口的编址，共32位。</p><p>这些地址通常按照<strong>点分十进制记法（dotled decimal notation）</strong> 书写，即地址中的每个字节用它的十进制形式书写，各字节间以句点隔开。</p><p>路由器通常有两个及以上的接口；主机可能有一个或多个接口，比如多网卡配置或虚拟接口。</p><h4 id="（2）子网">（2）子网</h4><p>一个子网内的节点（主机或者路由器）的IP地址的高位部分相同，这些节点构成的网络的一部分叫做<strong>子网（subnet）</strong>，IP地址的高位表示子网部分，地位表示主机部分。</p><p>子网内的各主机之间通信无需路由器介入，一跳可达（可借助交换机，因为交换机是链路层设备，不计入IP跳数）。</p><p>下图为包括三个子网的网络：</p><p><img src="https://bu.dusays.com/2024/11/26/67457c01dd432.png" alt="13"></p><p>划分子网时，将每一个接口从主机或路由器上分开，构成一个个网络的孤岛，每一个孤岛都可称之为子网。以下图为例，我们将其划分为6个子网，因为每个路由器之间的网络也是一个子网。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c14349c7.png" alt="14"></p><blockquote><p><strong>注意</strong>：子网说到底其实是对网络的划分，而不是对主机和路由器这些设备的划分，个人认为上图的蓝色部分如果不把主机包括进去反而更好理解。</p></blockquote><h4 id="（3）IP地址分类">（3）IP地址分类</h4><p>IPv4地址的分类指的是将整个IPv4地址空间划分为大小不等的5块，对应于A类、B类、C类、D类、E类IPv4地址，其中，A、B、C三类地址是单播地址，占据了绝大部分；D类地址是多播地址（Multicast address）；E类地址是保留地址，用于实验或在将来使用。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c22cd38b.png" alt="15"></p><p>地址分类的区分依靠前几个比特，若第一位为0，则该地址为A类，否则判断第二位；若第二位为0，则该地址为B类地址，否则判断第三位，依此类推。</p><p>IPv4分类编址则是在分类的基础上，将A、B、C三类地址都分成固定长度的网络号和主机号，三类地址的网络号长度分别为一、二、三字节（包含前面用于区分类别的比特）。由此我们可以得出，A类地址空间被划分为2的7次方个地址块，每个地址块包含2的24次方个IP地址（但是主机号全为0和全为1的为特殊地址，一般不作分配），其他类型地址同理。</p><p>部分IPv4地址具有特殊用途，我们称之为<strong>特殊地址</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>网络地址</strong>：主机号全0，是一个地址块的首地址，表示网络本身，不分配给主机。</p></li><li class="lvl-2"><p><strong>本网某个特定的主机地址</strong>：网络号全0，表示本网络某台主机，如<code>0.0.103.123</code>。</p></li><li class="lvl-2"><p><strong>直接广播地址</strong>：主机号全1，是一个地址块的末尾地址。广播是指将分组发送给网络中的所有主机。</p></li><li class="lvl-2"><p><strong>全0地址</strong>：可以表示整个网络所有主机。</p></li><li class="lvl-2"><p><strong>全1地址</strong>：称为受限广播地址，受限指路由器拦截广播分组扩散到其他网络，只能在局域网内广播。</p></li><li class="lvl-2"><p><strong>回环地址</strong>：用于本地软件的测试的地址块，范围是<code>127.0.0.0</code>~<code>127.255.255.255</code>，以任一回环地址为目的的分组都不会离开本机，传输到网络层时会直接返回。</p></li><li class="lvl-2"><p><strong>专用网址</strong>：局域网内部私有地址。私有地址可重复使用，不违背IP地址的全局唯一性。经过路由器NAT地址转换，私有地址将被隐藏在内部网络中，后面将详细讲NAT。</p></li></ul><h4 id="（4）CIDR与子网掩码">（4）CIDR与子网掩码</h4><p>CIDR，即<strong>无类域间路由（Classless InterDomain Routing）</strong> 中，不再将IP地址分为A类B类等，允许子网掩码在任意位置划分，格式为a.b.c.d/x，其中x是地址中子网号的长度。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c2d0f3a9.png" alt="16"></p><p>图中网络号为23位，主机号为9位，<strong>子网掩码（subnet mask）</strong> 的前23位为1，其余为0。因此我们将子网掩码与IP地址按位做与操作，就会得到该IP地址的网络号。</p><p>子网掩码的另一种表达方式就是 <strong>/#</strong>，例如图中的/23就表示前23个比特为子网部分。</p><p>而原始的A、B、C类网络的子网掩码分别是</p><ul class="lvl-0"><li class="lvl-2"><p>A：<code>255.0.0.0</code> ： <code>11111111 00000000 00000000 00000000</code></p></li><li class="lvl-2"><p>B：<code>255.255.0.0</code> ： <code>11111111 11111111 00000000 00000000</code></p></li><li class="lvl-2"><p>C：<code>255.255.255.0</code> ： <code>11111111 11111111 11111111 00000000</code></p></li></ul><h4 id="（5）转发表和转发算法">（5）转发表和转发算法</h4><p>转发表中主要包括四项：目的子网号、子网掩码、下一跳、接口。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c391023e.png" alt="17"></p><p>表的最后一项是默认路由（Default），当没有找到明确的匹配项时，将会匹配这一项。</p><blockquote><p><strong>网络中数据报的转发</strong></p><p>当路由器转发数据报时，主机号部分在路由表查询时没有意义。路由器根据子网进行匹配和查找路由表，而不是基于具体的IP地址，因为以IP地址为单位进行路由信息通告和计算代价过大。只有只有当数据报到达最后一跳路由器时，该路由器已经在目标子网内，才需要使用主机号来定位并转发给目标主机。在之前的路由过程中，所有路由器只关心网络部分。正因为这种通过多个网络逐跳传递数据的方式，我们称互联网为“网络的网络”。</p></blockquote><h3 id="4-地址的获取">4.地址的获取</h3><h4 id="（1）获取一块地址">（1）获取一块地址</h4><p>在了解主机如何从组织的地址块中分配到自己的地址之前，我们先探讨一下组织的地址块是如何获取的。</p><p>第一种方法是网络管理员与自己的ISP（因特网服务提供商）提出申请，然后该ISP从自己的地址块中划分出一块提供给申请的组织。</p><p>看到这我们不免会想：ISP的地址块又是从哪来的呢？</p><p>第二种方法便是由<strong>因特网名字和编号分配机构（Internet Corporation for Assigned Names and Numbers，ICANN）[ICANN 2016]</strong> 进行管理分配。</p><p>ICANN是一个非营利的组织，具有管理IP地址空间并向各ISP和其他组织分配地址块的最终责任。除了分配地址外，它还负责管理DNS根服务器，分配域名和解决域名冲突。</p><h4 id="（2）层次编址和路由聚集">（2）层次编址和路由聚集</h4><p><img src="https://bu.dusays.com/2024/11/26/67457c525d666.png" alt="20"></p><p>以上图为例，ISP将8个组织连接到因特网，其只需要对外界通告：向它发送以<code>200.23.16.0/20</code>开始的任何东西即可。外界的其他部分不需要知道地址块<code>200.23.16.0/20</code>在内部还被划分成了其他八个子网。这种使用单个网络前缀通告多个网络的能力通常称为<strong>路由聚合（route aggregation）</strong>。</p><p>这个例子也说明了仔细分配CIDR化的地址有利于路由选择的道理。但如果地址不是按这样的层次方式分配时，会出现什么情况呢？</p><p><img src="https://bu.dusays.com/2024/11/26/67457c66863cc.png" alt="21"></p><p>在这张图中，组织1的地址块被分配到了另一个ISP。原ISP对外界的通告保持不变，另一个ISP只需要向外通告对其发送以<code>200.23.16.0/20</code>开始的东西即可，这是一个到组织1更加具体的路由。外界向组织1发送内容时，会根据最长前缀匹配原则，选择第二个ISP。</p><h4 id="（3）获取主机地址：动态主机配置协议">（3）获取主机地址：动态主机配置协议</h4><p>主机想要从组织里获取一个IP地址也有两种方式。第一种方式是静态 IP 地址分配，即由网络管理员手动修改配置文件，为每个主机配置一个唯一的 IP 地址。这种方式虽然稳定且便于精细化管理，但却有着很高的维护成本。</p><p>目前采用的更多是第二种方法，即<strong>动态主机配置协议（Dynamic Host Configuration，DHCP）</strong>。<strong>DHCP是基于UDP的应用层协议，负责IP地址的集中管理和自由分配</strong>。</p><p>DHCP允许主机自动获取一个 IP 地址。网络管理员能够配置 DHCP，使某给定主机每次与网络连接时能得到一个相同的IP地址，或者某主机将被分配一个临时的IP地址（temporary IP address），每次与网络连接时该地址也许是不同的。由于DHCP这种即插即用的自动分配 IP 地址的能力，故又被成为<strong>即插即用协议（plug-and-play protocol）</strong> 或零配置（zeroconf）协议。</p><p>除了主机IP地址分配外，DHCP还会发送一些其他的信息，如子网掩码，默认网关（第一跳路由器的IP地址），本地DNS服务器的地址等。</p><p>我们以下图为例详细介绍DHCP的工作流程：</p><p><img src="https://bu.dusays.com/2024/11/26/67457c7701b32.png" alt="18"></p><p>DHCP是一个客户-服务器协议，客户是新到达的主机，请求包括自身使用的IP地址在内的网络配置信息。图中有一台连接到子网<code>223.1.2/24</code>的DHCP服务器，虽然剩下的两个子网虽然没有自己的DHCP服务器，但可以由图中的路由器作为DHCP中继代理，为另外两个子网上的客户提供DHCP服务。</p><p>对于一个新到达的主机，DHCP协议的工作流程可以分为以下四步：</p><p><strong>DHCP服务器发现</strong>：新接入网络的主机会尝试获取 IP 地址，它会向网络发送一个<strong>DHCP发现报文（DHCP discover message）</strong>。该报文是广播报文，目的是寻找网络中可用的 DHCP 服务器。由于主机在初始阶段还没有 IP 地址，所以报文是从源 IP <code>0.0.0.0</code> 广播到目的 IP <code>255.255.255.255</code>。这个过程使 DHCP 服务器得知有新设备需要分配 IP 地址。</p><p><strong>DHCP服务器提供</strong>：DHCP服务器收到一个DHCP发现报文时，会从其可用的 IP 地址池中选取一个地址，并用**DHCP提供报文（DHCP offer message）**向客户做出回应，告知主机它可以使用这个 IP 地址，该报文依旧使用IP广播地址<code>255.255.255.255</code>。除了提供的IP地址外，该报文中还包括收到的发现报文的事务ID、网络掩码以及IP地址租用期（address lease time），即IP地址的有效时间量。</p><p><strong>DHCP请求</strong>：新到达的客户从一个或多个服务器提供中选择一个，并向其发送<strong>DHCP请求报文（DHCP request message）</strong>，来告知 DHCP 服务器它选择了哪个提供的 IP 地址。这个请求报文也可以用来更新、续订或释放之前分配的 IP 地址。</p><p><strong>DHCP ACK</strong>：当 DHCP 服务器收到主机的请求报文后，会发送一个**DHCP确认报文（DHCP Acknowledgment Message）**给主机，告知其正式使用提供的 IP 地址及配置信息。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c8474549.png" alt="19"></p><p>一旦客户收到DHCP ACK后，交互便完成了，该客户可以在租用期内使用DHCP分配的IP地址。</p><p>对于不是新到达的主机，即已经获得过IP地址并且租约尚未到期的主机，可以跳过DHCP流程中的前两步，直接发送DHCP请求报文给之前的DHCP服务器。只有在原来的DHCP服务器不可用或租约失效时，才会重新执行完整的DHCP四步流程。</p><blockquote><p><strong>DHCP提供报文也使用广播地址的原因</strong></p><ol><li class="lvl-3">新主机没有获得正式的IP地址，无法对其进行定向的单播通信。</li><li class="lvl-3">网络中可能有多个DHCP服务器在监听，它们可能会同时响应，并提供可用的IP地址。广播发送可以确保所有处于同一子网的客户端都能接收到DHCP服务器的提供信息，并且由客户端从中选择一个合适的服务器。</li></ol></blockquote><h3 id="5-NAT：网络地址转换">5.NAT：网络地址转换</h3><h4 id="（1）NAT介绍">（1）NAT介绍</h4><p><strong>网络地址转换（NAT，Network Address Translation）</strong> 是一种将一个网络的私有IP地址映射到另一个网络的公共IP地址，以实现内网主机与外部网络（如互联网）之间的通信的网络技术。</p><p>借助NAT技术，我们可以实现一块局域网内部的设备公共一个IP地址，而不需要从ISP分配一块地址。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c9170bdc.png" alt="22"></p><p>上图是一个NAT模型，右方设备的内网IP地址在外网中是没有意义的，所有离开本地网络的数据报经过默认网关（即图中的路由器），源地址都会由私有IP地址转换为公共IP地址<code>138.76.29.7</code>（但是端口号不同，用于区分内网的不同设备），这个地址是一个在外网中有效的地址。</p><p>NAT技术的作用包括：</p><ul class="lvl-0"><li class="lvl-2"><p>降低成本，内网的所有设备在外部共用一个IP地址。</p></li><li class="lvl-2"><p>增强网络的安全性，内网的设备没有明确的地址，对外不可见。</p></li><li class="lvl-2"><p>提高IP地址的利用率，解决IPv4地址不足的问题。</p></li></ul><h4 id="（2）NAT转换表">（2）NAT转换表</h4><p>从广域网到达NAT路由器的所有数据报也都具有相同的目的IP地址，为了区分该数据报应该被转发到哪个内部主机，我们在NAT路由器上引入了一张<strong>NAT转换表（NAT translation table）</strong>，表项中包含了端口号以及IP地址。</p><p><img src="https://bu.dusays.com/2024/11/26/67457c9d8f32d.png" alt="23"></p><p>我们以上图为例讲解NAT转换表的工作原理：</p><p>主机<code>10.0.0.1</code>向<code>128.119.40.186</code>，80号端口发送数据报，该数据报的源地址为<code>10.0.0.1</code>，3345号端口，目标地址为<code>128.119.40.186</code>，80号端口。该数据报到达NAT路由器后，路由器将其源地址修改为此内网公用的IP地址，并选一个没有被占用的端口号来代表该内网主机，此时数据报的源地址为<code>138.76.29.7</code>，5001号端口。然后将这种映射关系记录在NAT转换表中。当NAT路由器收到广域网返回的响应数据报时，该数据报的目标地址为<code>138.76.29.7</code>，5001号端口。NAT路由器查找表项后发现，5001号端口对应的是内网的<code>10.0.0.1</code>，3345号端口。于是将数据报中的目标地址修改为<code>10.0.0.1</code>，3345号端口后，发送给对应内网主机。</p><h4 id="（3）NAT穿透">（3）NAT穿透</h4><p>在我上面的讨论中，都是由内网中的主机主动向外界联系。但由于内网的设备对外是不可见的，广域网的设备该如何主动联系到内网的设备呢？我们将这种情况称为NAT穿透（NAT traversal）问题。</p><p><strong>解决方案1：静态配置NAT</strong></p><p>预先在NAT路由器上配置好固定的映射规则，例如目标地址为<code>138.76.29.7</code>，5001号端口的数据报总是被转发到<code>10.0.0.1</code>，3345号端口。</p><p><strong>解决方案2：UPnP协议</strong></p><p><strong>通用即插即用（Universal Plug and Play，UPnP）协议</strong>允许内网主机通过自动发现和交互来主动与网关设备进行通信，然后通过<strong>IGD协议（Internet Gateway Device Protocol）</strong> 增加、删除或修改相应的表项从而实现动态调整（IGD是UPnP架构的一部分）。</p><p><strong>解决方案3：中继技术</strong></p><p>中继技术中，内网的主机如果想要被外网联系，可以先与中继服务器建立连接。当外网的设备也与中继服务器建立连接后，中继服务器就可以作为桥梁实现外网设备向内网设备的主动连接。</p><h3 id="6-IPv6">6.IPv6</h3><h4 id="（1）IPv6的动机">（1）IPv6的动机</h4><p>一个新事物的诞生自然伴随着对旧事物的批判，IPv6的初始动机便是IPv4的32字节地址空间会很快被用完。此外，IPv4的数据报头部在转发过程中是会变化的（例如TTL字段等），每次都需要重新计算校验和；IPv4的分片功能也会加剧路由器的负担，尤其是互联网骨干的核心路由器。</p><p>在这些弊端的基础上，IPv6采用了<strong>128位</strong>的超长地址，同时设置了固定的40字节头部。此外IPv6的数据报在传输过程中不允许分片，路由器会直接将过大的分组抛弃，然后通过<strong>ICMPv6协议</strong>向源主机发送一个消息，告知其需要发送更小的分组。这大大降低了路由器的负担。</p><h4 id="（2）IPv6数据报格式">（2）IPv6数据报格式</h4><p><img src="https://bu.dusays.com/2024/11/26/67457caae8e73.png" alt="24"></p><p>IPv6的数据报格式如上图所示，具有固定的<strong>40字节</strong>头部，其中各字段的功能如下：</p><p><strong>版本</strong>：占4比特，用于表示IP版本号，这里毫不意外地将值设置为6。</p><p><strong>流量类型</strong>：占8比特，相当于IPv4的服务类型字段，用于区分优先级。</p><p><strong>流标签</strong>：占20比特。流（flow）的概念一直没有被严格地定义。我们可以理解为同一个IP发出来的属于同一个会话的数据，可以为其打上同样的一个流标签，试图让网络对同一个流的数据做出同样的处理。</p><p><strong>有效载荷长度</strong>：占16比特，该值作为一个无符号整数，给出了IPv6数据报中在定长的40字节数据报首部后面的字节数量。</p><p><strong>下一个首部</strong>：占8比特，标识数据报中的内容需要交付给哪个协议（如TCP或UDP），使用与IPv4首部中协议字段相同的值。</p><p><strong>跳限制</strong>：占8比特，转发数据报的每台路由器将对该字段的内容减1，如果跳限制计数达到了0，则该数据报将被丢弃。</p><h4 id="（3）和IPv4相比的变化">（3）和IPv4相比的变化</h4><p>IPv6相较于IPv4主要有以下几点变化和改进：</p><ul class="lvl-0"><li class="lvl-2"><p>校验和（checksum）被移除。因为链路层和传输层（如TCP和UDP）已经包含了校验和功能，IPv6不再重复验证，提高了数据报的处理速度。</p></li><li class="lvl-2"><p>选择（Options）部分被移动到了头部之外。IPv6将所有可选字段放在了扩展头部中，并用下一个首部字段来指示是否存在扩展头部以及扩展头部的类型。</p></li><li class="lvl-2"><p>ICMPv4升级为ICMPv6，ICMPv6是IPv6中的控制报文协议，与IPv4中的ICMP类似，用于网络诊断和错误报告。但支持更多功能，如新增报文类型“Packet Too Big”，如果数据包超过了链路的MTU，路由器不会进行分片，而是丢弃数据包，并向源主机发送一个“Packet Too Big”报文，以通知其需要分片成更小的数据包。</p></li><li class="lvl-2"><p>除了单播和多播外，IPv6还引入了一种称为<strong>任播地址（anycast address）</strong> 的新型地址，这种地址可以使数据报交付给一组主机中的任意一个（例如，如果有多个镜像服务器都包含相同的数据，用户发出请求时，可以通过任播地址将请求数据报交付给距离最近的镜像服务器，从而实现更高效的数据获取和减少网络延迟）。</p></li></ul><h4 id="（4）IPv4到IPv6的迁移">（4）IPv4到IPv6的迁移</h4><p>由于如今互联网的规模十分庞大，IPv4到IPv6的迁移只能循序渐进。这将不可避免的产生IPv4和IPv6路由器的混合，此时互联网的运转主要依靠于<strong>隧道（tunnel）</strong>。</p><p>这里隧道的概念与我们传统意义上的隧道有一些区别，我们假定两个IPv6节点要使用IPv6数据报进行交互，但它们是经由中间IPv4路由器互联的，我们将两台IPv6路由器之间的IPv4路由器的集合称为一个隧道。借助于隧道，在隧道发送端的IPv6节点可将整个IPv6数据报放到一个IPv4数据报的数据字段中，运输过程中，中间的IPv4路由器将其当做正常的IPv4数据报进行运输。隧道接收端的IPv6节点最后收到该IPv4数据报，并确定其包含一个完整的IPv6数据报（通过观察IPv4数据报中的协议号字段是41）后，从中取出IPv6数据报，继续为其进行路由。</p><p><img src="https://bu.dusays.com/2024/11/26/67457cb8c08b4.png" alt="25"></p><p>上图为IPv4数据报包裹IPv6数据报的结构图，类似于我们用船去运送汽车。</p><p><img src="https://bu.dusays.com/2024/11/26/67457cc4aefea.png" alt="26"></p><p>上图为隧道的逻辑视图与物理视图，隧道为IPv6的逐步普及提供了平滑的过渡方案。以后随着IPv6网络逐渐增多，依赖于隧道技术的场景会逐渐减少，IPv4反而称为一个个孤岛，看过《三体》同学可能会感觉这里很像四维空间向三维的跌落过程。</p><h2 id="四、通用转发和SDN">四、通用转发和SDN</h2><h3 id="1-传统方式与SDN方式的比较">1.传统方式与SDN方式的比较</h3><p>在前面的内容中，我们所讲的都是传统方式，第二层交换机和第三层路由器等中间盒的剧增，而且每种都有自己特殊的硬件、软件和管理界面给许多网络操作管理带来了很大麻烦。而最新的<strong>软件定义网络（Software Defined Network，SDN）</strong> 通过将网络控制与数据转发分离，重新定义了网络的架构，为网络管理带来了灵活性和易用性。</p><p>前面提到，在传统方式中，路由器兼具路由和转发的功能。而在SDN方式中，控制平面被从每个网络设备中抽离出来，集中到一个或多个远程的SDN控制器上，路由器仅负责转发功能。</p><h3 id="2-通用转发">2.通用转发</h3><p>传统的基于目的地转发可以总结为以下两步，即查找IP地址（“匹配”），然后将分组发送到有特定输出端口的交换结构（“动作”）。我们将这两个概念抽离出来，考虑一种更加标准通用的“匹配加动作”范式。</p><p>SDN网络中的“匹配”不仅限于传统网络中的目的地IP地址，它可以对协议栈中多层首部字段进行匹配，这些首部字段是与不同层次的不同协议相关联的。通过支持对多个首部字段进行匹配，SDN可以提供更精细化的流量控制，可以根据不同的条件来匹配特定的数据包流。</p><p>SDN网络中的“动作”包括将分组转发到一个或多个输出端口（就像在基于目的地转发中一样），跨越多个通向服务的离开接口进行负载均衡分组（就像在负载均衡中一样），重写首部值（就像在NAT中一样），有意识地阻挡/丢弃某个分组（就像在防火墙中一样）等等。</p><p><img src="https://bu.dusays.com/2024/11/26/67457cd0dd4cd.png" alt="27"></p><p>我们对通用转发的讨论都将OpenFlow（一个得到高度认可的成功标准）。“匹配加动作”转发表在OpenFlow中称为<strong>流表（flow table）</strong>，它的每个表项包括：</p><ul class="lvl-0"><li class="lvl-2"><p>首部字段值的集合，匹配不上流表项的分组将被丢弃或发送到远程控制器做更多处理。</p></li><li class="lvl-2"><p>计数器集合，当分组与流表项匹配时更新计数器。这些计数器可以包括已经与该表项匹配的分组数量，以及自从该表项上次更新以来的时间。</p></li><li class="lvl-2"><p>当分组匹配流表表项时所采取的动作集合，这些动作可能将分组转发到给定的输出端口，丢弃该分组、复制该分组和将它们发送到多个输岀端口，或重写所选的首部字段等（功能要远多于传统方式）。</p></li></ul><p>至于转发表（基于目标的转发）和流表（通用转发）是如何计算出来的，我们将在下一章控制平面继续讨论。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《计算机网络 自顶向下方法》笔记：第三章 传输层</title>
      <link href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/"/>
      <url>/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥计算机网络 自顶向下方法 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网">《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</a></li><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第二章 应用层">《计算机网络 自顶向下方法》笔记：第二章 应用层</a></li><li><a href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第三章 传输层">《计算机网络 自顶向下方法》笔记：第三章 传输层</a></li><li><a href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面">《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</a></li><li><a href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面">《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</a></li><li><a href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网">《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</a></li></ol></blockquote><h2 id="一、概述和传输层服务">一、概述和传输层服务</h2><h3 id="1-传输层提供的服务">1.传输层提供的服务</h3><p>传输层为运行在不同主机上的应用进程提供逻辑通信。</p><p>传输层的协议运行在<strong>端系统</strong>（而不是路由器）：</p><ul class="lvl-0"><li class="lvl-2"><p>发送方将应用层的报文分成报文段，然后穿递给下一层的网络层。</p></li><li class="lvl-2"><p>接收方从网络层接收后将报文段重组成报文，然后传递给上一层的应用层。</p></li></ul><blockquote><p><strong>注意</strong>：本地进程间通信无需通过网络层和传输层，它们可以使用操作系统内核提供的进程间通信（IPC）机制进行直接通信。</p></blockquote><h3 id="2-传输层和网络层的比较">2.传输层和网络层的比较</h3><p><strong>网络层服务</strong>：主机之间的逻辑通信</p><p><strong>传输层服务</strong>：进程之间的逻辑通信</p><p>传输层运行在网络层的上层，将服务细分为主机间的进程通信</p><p>传输层在网络层的服务基础上对其进行加强。例如，解决网络层的数据丢失、顺序混乱等问题，但并不是所有的服务都能得到加强，比如带宽、延迟。</p><h3 id="3-传输层协议">3.传输层协议</h3><p><strong>可靠的、保序的传输：TCP</strong></p><ul class="lvl-0"><li class="lvl-2"><p>多路复用、解复用</p></li><li class="lvl-2"><p>拥塞控制</p></li><li class="lvl-2"><p>流量控制</p></li><li class="lvl-2"><p>建立连接</p></li></ul><p><strong>不可靠的、不保序的传输：UDP</strong></p><ul class="lvl-0"><li class="lvl-2"><p>多路复用、解复用</p></li><li class="lvl-2"><p>没有为<strong>尽力而为的（best-effort）</strong> IP服务添加更多的其他额外服务</p></li></ul><p><strong>TCP和UDP均不提供的服务</strong>：延时保证、带宽保证</p><h2 id="二、多路复用和解复用">二、多路复用和解复用</h2><h3 id="1-定义">1.定义</h3><p><strong>多路复用（Multiplexing）</strong> 指主机上的多个进程可以同时发送数据，通过传输层将它们的数据合并在一起并发送出去。传输层会为每个进程的数据流分配一个唯一的标识符，即<strong>端口号</strong>，传输层通过这些端口号区分各个数据流。</p><p><strong>解复用（Demultiplexing）</strong> 指传输层在接收到数据包时，根据数据包中的端口号，将数据包交给对应的进程。每个接收到的数据包包含了源端口号和目的端口号，传输层通过目的端口号确定哪个进程应该接收该数据包。</p><h3 id="2-多路复用和解复用过程">2.多路复用和解复用过程</h3><p><strong>发送端</strong>：</p><ol><li class="lvl-3"><p>应用进程生成数据，并通过系统调用传递给传输层。</p></li><li class="lvl-3"><p>传输层根据应用进程的端口号，为数据包加上传输层头部，头部里包含端口号信息以及其他内容，执行多路复用，将数据发送到网络中。</p></li></ol><p><strong>接收端</strong>：</p><ol><li class="lvl-3"><p>传输层从网络中接收数据包，读取每个数据包上的目标端口号。</p></li><li class="lvl-3"><p>传输层在接收端通过读取目的端口号来识别目标应用进程，执行解复用，将去除传输层头部后的数据部分传递给相应的应用进程。</p></li></ol><h2 id="三、无连接传输UDP">三、无连接传输UDP</h2><p><strong>UDP的全称为用户数据报协议（User Datagram Protocol）</strong></p><h3 id="1-UDP提供的服务">1.UDP提供的服务</h3><p>尽力而为的服务，数据报可能丢失、乱序；</p><p>无连接，UDP发送端和接收端之间没有握手，每个UDP数据报都被独立地处理；</p><h3 id="2-UDP的应用">2.UDP的应用</h3><p><strong>UDP被广泛应用于</strong>:</p><ul class="lvl-0"><li class="lvl-2"><p><strong>流媒体</strong>：丢失不敏感，速率敏感、应用可控制传输速率。</p></li><li class="lvl-2"><p><strong>DNS</strong>：DNS用于将域名转换为IP地址。DNS查询通常使用UDP，因为DNS请求和响应通常较小且对延迟非常敏感。UDP的低开销和快速响应适合这种短小且频繁的请求。</p></li><li class="lvl-2"><p><strong>SNMP</strong>：SNMP全称<strong>简单网络管理协议（Simple Network Management Protocol）</strong>。用于网络设备的管理和监控。SNMP使用UDP，因为管理数据的传输要求简单且不需要连接管理的开销。</p></li></ul><h3 id="3-UDP数据报格式">3.UDP数据报格式</h3><p><img src="https://bu.dusays.com/2024/11/26/6745795144ca5.png" alt="1"></p><p>UDP数据报分为UDP头部和应用数据部分，UDP头部共占八个字节，分为四个字段：源端口号、目的端口号、长度和检验和，每个字段占两个字节。</p><blockquote><p><strong>TCP、UDP、IP术语对比</strong></p><p><strong>TCP</strong>：数据单元称为 <strong>“报文段”（Segment）</strong>。TCP的报文段包括了TCP头部和数据部分。</p><p><strong>UDP</strong>：数据单元称为 <strong>“数据报”（Datagram）</strong>。UDP的数据报包括了UDP头部和数据部分。</p><p><strong>IP</strong>：IP层的基本数据单元称为 <strong>“数据报”（Datagram）</strong>。IP数据报包含了IP头部和应用层数据（也就是传输层的数据报或报文段）。</p><p>但在一些书籍或资料中，为了强调UDP在传输层的角色，可能仍会用“报文段”这个词。这主要是术语使用上的差异，基本上两者在UDP的语境下指的是相同的概念。</p></blockquote><h3 id="4-UDP检验和">4.UDP检验和</h3><p><strong>目标</strong>：检测在被传输的数据报中的差错（如比特反转）</p><p><strong>检验流程</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/674579608ded0.png" alt="2"></p><p>接收端将数据报（包括头部，但校验和字段除外）分成16比特的字段，最后一块如果不足16位（通常是8位）则用零补齐。然后把所有的字段进行相加，溢出的最高位进位进行回卷，即末尾加一。将得到的结果再与校验和相加（在这之前还未将头部中的校验和加进去），若得到的是全为1的16个比特，则通过校验（发送端生成校验和时，也是将所有数据通过这种方式相加，然后取反码得到校验和）。</p><p>实际上一句话概括就是把所有的16位字段加起来，判断结果是不是FFFF，上面讲这么麻烦只是因为把校验和作为一个特殊的字段单独拎出来讲了。</p><p>如果未通过检验则说明数据报存在差错，但通过检验也只能说明未检测到差错，不能证明接收到的数据报一定正确无误。</p><blockquote><p><strong>注意</strong>：虽然 UDP 提供差错检测 ， 但它对差错恢复无能为力 。 UDP 的某种实现只是丢弃受损的报文段， 其他实现是将受损的报文段交给应用程序并给出警告 。</p></blockquote><h2 id="四、可靠数据传输的原理">四、可靠数据传输的原理</h2><h3 id="1-构造可靠数据传输协议">1.构造可靠数据传输协议</h3><h4 id="（1）问题描述">（1）问题描述</h4><p><strong>rdt（Reliable Data Transfer，可靠数据传输）</strong> 问题在应用层、传输层和数据链路层都很重要，是网络top10的问题之一。</p><p><strong>rdt协议</strong>的复杂性取决于<strong>信道（channel）</strong> 可靠程度。信道越可靠，rdt协议就越简单；信道越不可靠，rdt协议就会越复杂。</p><p>下图展示了rdt的服务模型与具体实现：</p><p><img src="https://bu.dusays.com/2024/11/26/6745798e4ba5a.png" alt="3"></p><p>虽然数据传输是双向的（即双全工数据传输），但我们暂时只讨论单向数据传输，前者只是后者的综合。即便如此，控制信息的流动依然是双向的，因为发送信息后需要得到反馈信息。</p><p>后面我们将使用<strong>有限状态机（FSM）</strong> 来描述发送方和接收方。</p><blockquote><p><strong>有限状态机（FSM）</strong> 的全称是 <strong>&quot;Finite State Machine&quot;</strong>， 是一种数学模型，用于描述有限数量的状态及其转移关系。</p></blockquote><h4 id="（2）rdt-1-0-：在可靠信道上的可靠数据传输">（2）rdt 1.0 ：在可靠信道上的可靠数据传输</h4><p>在rdt 1.0中，我们假设下层的信道是完全可靠的，没有比特出错和分组丢失等问题。</p><p>发送方和接收方的FSM：</p><p><img src="https://bu.dusays.com/2024/11/26/67457999c4d48.png" alt="4"></p><p>可以看到，此时，发送方只是简单地将数据发送到下层通道，接收方则是直接从下层通道接收数据。</p><h4 id="（3）rdt-2-0：经具有比特差错信道的可靠数据传输">（3）rdt 2.0：经具有比特差错信道的可靠数据传输</h4><p>在rdt 2.0中，我们假设下层的信道可能会出现分组中比特翻转的错误。</p><p><strong>解决方案</strong>：采用差错控制编码进行差错检测</p><p><strong>引入两个控制报文</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>确认（ACK）</strong>：接收方显式地告诉发送方分组已被正确接收</p></li><li class="lvl-2"><p><strong>否定确认（NAK）</strong>：接收方显式地告诉发送方分组发生了差错，当发送方收到NAK后，重传分组</p></li></ul><p>发送方和接收方的FSM：</p><p><img src="https://bu.dusays.com/2024/11/26/674579a4ab5ac.png" alt="5"></p><p>我们可以看到，此时的发送方有两个状态：一个是等待来自上层的调用，当收到来自上层的数据后，将数据发送出去，并进入下一个状态；另一个状态则是等待来自接收端的ACK和NAK，如果收到ACK，则说明数据被成功接收，发送方进入下一个状态，如果收到NAK则说明数据被成功接收，发送方重新发送数据。</p><p>这种一次只能发送一个数据包，并进行停止等待的行为我们称之为停止等待协议。</p><blockquote><p><strong>停止等待协议（Stop-and-Wait Protocol）</strong> 是一种简单的可靠数据传输协议，常用于确保发送方和接收方之间的数据传输能够按序进行且没有数据丢失。它是面向连接的协议，通常应用于点对点通信。在停止等待协议中，发送方一次只能发送一个数据包，并且在发送完这个数据包后，它必须等待接收方的确认（ACK，Acknowledgment）消息。在接收到确认后，发送方才会继续发送下一个数据包。</p></blockquote><h4 id="（4）rdt-2-1：发送方处理出错的ACK-NAK">（4）rdt 2.1：发送方处理出错的ACK/NAK</h4><p>在rdt 2.1中有一个致命的缺陷，那就是如果ACK/NAK在传输过程中发生比特翻转，将导致发送方不知道如何行动。因为发送方无从判断接收方的实际情况，如果重传则可能导致数据重复，如果不重传则可能导致死锁（或出错）。</p><p><strong>解决方案</strong>：引入序号机制处理重复</p><p>发送方在每个分组中加入序号，如果ACK/NAK，则重新发送当前分组。接收方如果收到重复序号的分组，则将其丢弃。</p><p><strong>机制探讨</strong></p><p><strong>发送方</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>在分组中加入序号（只需0，1两个序号即可），一次只发送一个未经确认的分组</p></li><li class="lvl-2"><p>必须检测ACK/NAK是否出错，需要EDC</p></li></ul><blockquote><p><strong>EDC</strong> 是 <strong>Error Detection Code（错误检测码）</strong> 的缩写。它是一种用于检测数据在传输过程中是否发生错误的技术。常见的 EDC 技术包括 校验和（Checksum）、循环冗余校验（CRC, Cyclic Redundancy Check）、奇偶校验等。在停止等待协议中，EDC 用于检测发送方发送的分组（packet）和接收方发送的确认（ACK）或否定确认（NAK）是否在传输过程中出现了错误。由于传输信道不可靠，数据可能在传输过程中发生损坏，因此需要 EDC 来确保分组和确认的正确性。</p></blockquote><p><strong>接收方</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>必须检测接收到的分组是否是重复的</p></li><li class="lvl-2"><p>接收方的状态会指示希望接收到的分组的序号是0还是1</p></li></ul><p>发送方和接收方的FSM的状态数量变成了两倍，因为发送方和接收方必须保持一个状态，即跟踪当前发送/接收的分组序列号是 0 还是 1。这就使得状态数量比之前没有使用序列号时翻倍。</p><p>rdt 2.1的对ACK/NAK出错的处理过程如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/674579b0348d1.png" alt="6"></p><blockquote><p><strong>注意</strong>：此时接收方并不知道发送方是否正确地接收到了ACK/NAK，因为只安排了确认，并没有安排确认的确认。后面我们将讲到如何解决这种无限嵌套的困境。</p></blockquote><h4 id="（5）rdt-2-2：无NAK的协议">（5）rdt 2.2：无NAK的协议</h4><p>rdt 2.2是在有比特差错信道上实现的一个无NAK的可靠数据传输协议。它与rdt 2.1的区别在于，接收方需要为ACK也加上编号（依旧只需0,1两个编号即可）。这样我们就可以用对前一个信息的正向确认来代替对当前信息的反向确认。</p><p>具体处理过程如下图所示，当接收方正确收到信息后，则发送针对当前信息的确认报文；若没能正确接收信息，则发送针对前一个信息的确认报文，发送方收到后便会重新发送当前信息：</p><p><img src="https://bu.dusays.com/2024/11/26/674579bcab047.png" alt="7"></p><p>rdt 2.2将确认信息减少一半，协议处理更加简单，为后面的一次发送多个数据单元奠定了基础。</p><h4 id="（6）rdt-3-0：经具有比特差错的丢包信道的可靠数据传输">（6）rdt 3.0：经具有比特差错的丢包信道的可靠数据传输</h4><p>在rdt 3.0中，我们假定除了比特受损外，底层的信道还会丢包。</p><p>发送方发送信息后，如果信息在传递过程中丢失，会导致接收方一直等待这条信息，而发送方则一直等待接收方对这条信息的回应，从而产生死锁。</p><p><strong>解决方案</strong>：引入超时重传机制</p><p>发送方将数据包发送给接收方，并同时启动一个定时器。如果在超时时间内没有收到 ACK，发送方假定数据包丢失或确认丢失，自动重传该数据包。然后再次启动定时器并继续等待确认。</p><p>超时重传机制下，发送方的FSM：</p><p><img src="https://bu.dusays.com/2024/11/26/674579cd631e4.png" alt="8"></p><p><strong>timeout时间的选定</strong></p><p>超时时间必须合理设置。过短的超时时间可能导致频繁的重传，增加网络负载。过长的超时时间则会导致数据传输效率下降。超时时间通常根据网络的往返时间（RTT, Round Trip Time）来动态调整。发送方测量每个数据包发送到接收方并收到确认所花费的时间，根据该时间调整下一次超时定时器的值。</p><blockquote><p><strong>注意</strong>：虽然超时重传机制可能会产生重复发送的问题（如超时时间过短），但这个问题我们在rdt 2.1中已经解决，因此不用担心。</p></blockquote><p>下面展示rdt 3.0在无丢包操作、分组丢失、ACK丢失、过早超时四种情况下的运行流程：</p><p><img src="https://bu.dusays.com/2024/11/26/674579d87140f.png" alt="9"></p><p><img src="https://bu.dusays.com/2024/11/26/674579e78e0da.png" alt="10"></p><h3 id="2-流水线可靠数据传输协议">2.流水线可靠数据传输协议</h3><h4 id="（1）停止等待协议的性能分析">（1）停止等待协议的性能分析</h4><p>停止等待协议的定义在上面的rdt 2.0中已经给出，此处不在赘述。</p><p>下面我们假设在rdt 3.0协议中，已知链路带宽R为1Gbps，端到端传播延时T为15ms，分组大小L为1kB。</p><p><img src="https://bu.dusays.com/2024/11/26/674579f26f396.png" alt="11"></p><p>可以计算：</p><p>传输延时：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.991ex;" xmlns="http://www.w3.org/2000/svg" width="23.142ex" height="5.09ex" role="img" focusable="false" viewBox="0 -1370 10228.7 2250" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(638.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(1694.6,0)"><g data-mml-node="mi" transform="translate(259,676)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g><rect width="959" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(3171.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(4227.1,0)"><g data-mml-node="mrow" transform="translate(838.5,676)"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1021,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1286,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1715,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2218,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g><rect width="2887" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(7631.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(8687.7,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9187.7,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(9759.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>t</mi><mo>=</mo><mfrac><mi>L</mi><mi>R</mi></mfrac><mo>=</mo><mfrac><mrow><mn>8</mn><mi>k</mi><mi>b</mi></mrow><mrow><mn>1</mn><mi>G</mi><mi>b</mi><mi>p</mi><mi>s</mi></mrow></mfrac><mo>=</mo><mn>8</mn><mi>u</mi><mi>s</mi></math></mjx-assistive-mml></mjx-container><p>带宽利用率：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="50.738ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 22426.1 2420" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1044.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(2100.6,0)"><g data-mml-node="mi" transform="translate(1303.5,676)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1463,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2167,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><rect width="2728" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(5346.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(6402.1,0)"><g data-mml-node="mrow" transform="translate(1294.2,710)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(681,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mi" transform="translate(1181,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1444.4,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2148.4,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2829.4,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mi" transform="translate(3329.4,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g></g><rect width="4288.4" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(11208.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(12264.1,0)"><g data-mml-node="mrow" transform="translate(2004.7,676)"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1072,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1878,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2569.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(3569.4,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4069.4,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(4641.4,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g><rect width="5310.4" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(18092.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(19148.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1278,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1778,0)" style="stroke-width: 3;"/><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(2278,0)" style="stroke-width: 3;"/><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(2778,0)" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>U</mi><mo>=</mo><mfrac><mi>t</mi><mrow><mi>R</mi><mi>T</mi><mi>T</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>L</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>R</mi></mrow><mrow><mn>2</mn><mo>∗</mo><mi>T</mi><mi>L</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>R</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>8</mn><mi>u</mi><mi>s</mi></mrow><mrow><mn>30</mn><mi>m</mi><mi>s</mi><mo>+</mo><mn>8</mn><mi>u</mi><mi>s</mi></mrow></mfrac><mo>=</mo><mn>0.00027</mn></math></mjx-assistive-mml></mjx-container><p>实际吞吐量：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="39.732ex" height="2.034ex" role="img" focusable="false" viewBox="0 -705 17561.6 899" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1036.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2092.6,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3081.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(3804,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4840.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(5896.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width: 3;"/><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1278,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1778,0)" style="stroke-width: 3;"/><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(2278,0)" style="stroke-width: 3;"/><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(2778,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(9396.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(10119,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(10619,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(11405,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(11834,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(12337,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(13083.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(14139.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(500,0)" style="stroke-width: 3;"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(15639.6,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(16160.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(16589.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(17092.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>B</mi><mo>=</mo><mi>U</mi><mo>∗</mo><mi>R</mi><mo>=</mo><mn>0.00027</mn><mo>∗</mo><mn>1</mn><mi>G</mi><mi>b</mi><mi>p</mi><mi>s</mi><mo>=</mo><mn>270</mn><mi>k</mi><mi>b</mi><mi>p</mi><mi>s</mi></math></mjx-assistive-mml></mjx-container><p>可以看到，在停止等待协议中，对链路带宽的利用率极低，1Gbps的带宽，实际上仅能达到270kbps的吞吐量。为此，我们引入了流水线协议。</p><h4 id="（2）流水线协议">（2）流水线协议</h4><p><strong>流水线协议（Pipelining Protocol）</strong> 是一种提高网络数据传输效率的协议设计，通过允许发送方在等待前一个数据包的确认时继续发送更多的数据包，而不是像“停止等待协议”那样必须等到每个数据包确认后才能继续发送。</p><p><img src="https://bu.dusays.com/2024/11/26/674579fee5758.png" alt="12"></p><p>流水线协议提升数据传输效率的原理很好理解，这里不做深究。需要注意的是，采用流水线协议后，我们也面临着新的问题：</p><ul class="lvl-0"><li class="lvl-2"><p>我们必须增加序号的范围，用多个bit来表示分组的序号，仅靠以前的 0，1两个序号已经无法满足需求。</p></li><li class="lvl-2"><p>协议的发送方和接收方两端需要缓存多个分组，发送方最低限度应当能缓冲那些已经发送但没有确认的分组，接收方或许也需要缓存那些已经正确接收了的分组。</p></li></ul><p>所需序号范围和对缓冲的要求取决于数据传输协议如何处理丢失、损坏以及延时过大的分组。解决流水线的差错恢复有两种基本方法：<strong>回退N步（Go-Back-N，GBN）和选择重传（Selective  Repeat，SR）</strong></p><h3 id="3-滑动窗口协议">3.滑动窗口协议</h3><h4 id="（1）概念引入">（1）概念引入</h4><p>在介绍回退N步协议和选择重传协议之前，我们先引入一个一般性的协议，即<strong>滑动窗口（slide window）协议</strong>。</p><p><strong>新的概念</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>发送缓冲区</strong>：内存中的一个区域，落入缓冲区的分组可以发送，用于存放已发送，但是没有得到确认的分组</p></li><li class="lvl-2"><p><strong>发送窗口</strong>：发送缓冲区内容的一个范围，那些已发送但是未经确认分组的序号构成的空间，是发送缓冲区的子集</p></li><li class="lvl-2"><p><strong>接收窗口</strong>：用于控制哪些分组可以接收，只有收到的分组序号落入接收窗口内才允许接收，若序号在接收窗口之外，则丢弃</p></li></ul><h4 id="（2）滑动窗口，回退N步和选择重传三种协议的区别">（2）滑动窗口，回退N步和选择重传三种协议的区别</h4><style>  th, td {    text-align: center; /* 文字水平居中 */    vertical-align: middle; /* 文字垂直居中 */    padding: 5px;  }</style><table border="1" cellspacing="0" cellpadding="5">  <thead>    <tr>      <th style="text-align: center;" colspan="2">协议类型</th>      <th style="text-align: center;">发送窗口大小</th>      <th style="text-align: center;">接受窗口大小</th>    </tr>  </thead>  <tbody>    <tr>      <td style="text-align: center;">停止等待协议</td>      <td style="text-align: center;">滑动窗口协议</td>      <td style="text-align: center;">SW=1</td>      <td style="text-align: center;">RW=1</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;" rowspan="2">流水线协议</td>      <td style="text-align: center;">回退N步协议</td>      <td style="text-align: center;">SW>1</td>      <td style="text-align: center;">RW=1</td>    </tr>    <tr>      <td style="text-align: center;">选择重传协议</td>      <td style="text-align: center;">SW>1</td>      <td style="text-align: center;">RW>1</td>    </tr>  </tbody></table><h4 id="（3）发送窗口的移动">（3）发送窗口的移动</h4><p><img src="https://bu.dusays.com/2024/11/26/67457a24d123a.png" alt="13"></p><p>发送窗口的移动类似于数据结构中的队列：</p><ul class="lvl-0"><li class="lvl-2"><p>发送端每发送一个分组，发送窗口的前沿就向前移动一个单位，移动的极限是与后沿的距离不能超过发送缓冲区的大小。</p></li><li class="lvl-2"><p>发送端收到老分组的确认报文后，发送窗口的后延进行移动，移动的极限是不能超过前沿。</p></li></ul><h4 id="（4）接收窗口的移动和发送确认">（4）接收窗口的移动和发送确认</h4><p><strong>当RW=1时</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/67457a35a1a9b.png" alt="14"></p><p>接收窗口的尺寸为1时，接收端只能顺序接收，此时发送连续收到的最大分组的确认，我们将这种确认称为<strong>累计确认</strong>。此时，发送端接收到一个分组的确认后，可以认为，在这个分组之前的分组也都被正确接收了。</p><p><strong>当RW&gt;1时</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/67457a4097ccd.png" alt="15"></p><p>接收窗口的尺寸大于1时，接收端可以乱序接收（但交给上层的分组依旧要按照顺序）。当高序号的分组乱序到来时，接收端只缓存但不交付（因为要实现rdt，不允许失序），不滑动；当低序号的分组到来时，接收窗口才会移动。</p><p>因为接收端每收到一个分组就会发送那个分组的确认，所以此时的分组确认为<strong>单独确认（非累计确认）</strong>。发送端在接收到一个分组的确认后无法判断这个分组之前的分组是否被成功接收。</p><blockquote><p>正常情况下的两个窗口互动流程是：发送端上面来了分组-&gt;发送窗口滑动-&gt;接收窗口滑动-&gt;发确认-&gt;发送窗口滑动...... 原动力是接收端源源不断地收到来自上层的分组。异常情况下（乱序或丢失），GBN协议和SR协议则有着两种不同的处理方式。</p></blockquote><h3 id="4-回退N步">4.回退N步</h3><p>在GBN协议中，由于接收窗口大小为1，只能顺序接收，因此会将收到的乱序分组（没能落入接收窗口的范围内）抛弃，并重新发送老分组的确认。</p><p>发送窗口收到来自老分组的重复确认后，后沿不会向前滑动。此时超时重传机制会让发送端将发送窗口里的所有分组重新发送出去。</p><h3 id="5-选择重传">5.选择重传</h3><p>在SR协议中，由于接收窗口大小大于1，可以连续接收，因此每收到一个分组都会发送这个分组的确认。但只有收到最低序号的分组时，接收窗口才会移动。</p><p>发送方每发送一个分组都会启动一个与这个分组对应的定时器，如果超时，则将重新发送对应的分组，而不需要把后续的分组也重复发送。</p><h3 id="6-GBN与SR的比较">6.GBN与SR的比较</h3><h4 id="（1）GBN与SR的异同点">（1）GBN与SR的异同点</h4><table border="1" cellspacing="0" cellpadding="5">  <thead>      <tr>        <th style="text-align: center; vertical-align: middle;">协议类型</th>        <th style="text-align: center; vertical-align: middle;">相同点</th>        <th style="text-align: center; vertical-align: middle;">不同点</th>      </tr>  </thead>  <tr>     <td style="text-align: center; vertical-align: middle;">GBN</td>     <td style="text-align: center; vertical-align: middle;" rowspan="2">        <ul>           <li>发送窗口>1；</li>           <li>一次能够发送多个未经确认的分组；</li>        </ul>     </td>    <td>       <ul>           <li>接收窗口等于1；</li>           <li>接收端只能顺序接收；</li>           <li>发送端只需设置一个定时器；</li>           <li>一但某个分组没有成功发送，需要回退到该分组，将其连带后面的                分组全部重新发送；</li>       </ul>    </td>  </tr>  <tr>    <td style="text-align: center; vertical-align: middle;">SR</td>    <td colspan="2">       <ul>           <li>接收窗口大于1；</li>           <li>接收端可以乱序接收；</li>           <li>发送端为每一个未确认的分组都保持一个定时器；</li>           <li>一但某个分组没有成功发送，只需将该分组重新发送，无需重发其                他分组；</li>       </ul>    </td>  </tr></table><h4 id="（2）GBN与SR的优缺点">（2）GBN与SR的优缺点</h4><table border="1" cellspacing="0" cellpadding="5">  <thead>    <tr>      <th style="text-align: center;">协议类型</th>      <th style="text-align: center;">优点</th>      <th style="text-align: center;">缺点</th>    </tr>  </thead>  <tbody>    <tr>      <td style="text-align: center;">GBN</td>      <td style="text-align: center;">简单，所需资源少</td>      <td style="text-align: center;">一旦出错，回退N步代价大</td>    </tr>    <tr>      <td style="text-align: center;">SR</td>      <td style="text-align: center;">出错时，重传代价小</td>      <td style="text-align: center;">复杂，所需要资源多</td>    </tr>  </tbody></table><h4 id="（3）GBN与SR的适用范围">（3）GBN与SR的适用范围</h4><ul class="lvl-0"><li class="lvl-2"><p>出错率低：适合GBN，出错非常罕见，没有必要使用复杂的SR，为罕见的事情做日常准备和复杂处理</p></li><li class="lvl-2"><p>链路容量大（延迟大、带宽大）：适合SR而不是GBN，一点出错所付出的代价太大</p></li></ul><h2 id="五、面向连接的传输TCP">五、面向连接的传输TCP</h2><h3 id="1-概述">1.概述</h3><p><strong>TCP的全称为传输控制协议（Transmission Control Protocol）</strong></p><p><strong>TCP是面向连接的（Connection-oriented）</strong>：</p><p>因为在一个应用进程可以开始向另一个应用进程发送数据之前，这两个进程必须先相互“握手”。</p><p><strong>TCP是点对点的（point-to-point）</strong>：</p><p>即在单个发送方与单个接收方之间的连接。对于一次发送操作中，从一个发送方将数据传给多个接收方的“多播”情况，对TCP来说是不可能的。</p><p><strong>TCP提供的是双全工服务（full-duplex service）</strong>：</p><p>如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以在从进程B流向进程A的同时，也从进程A流向进程B。</p><p><strong>TCP是面向字节流的（byte-oriented）</strong>：</p><p>TCP将上一层交付的数据仅看作一串无结构的字节序列。</p><p><strong>TCP是流水线协议（Pipelining Protocol）</strong>：</p><p>TCP的拥塞控制和流量控制设置窗口大小（发送方在等待接收方确认之前，能够连续发送的数据量大小）。</p><p><strong>TCP的数据传输流程</strong>：</p><p>客户进程用过套接字传递数据流，TCP将这些数据引导到该连接的发送缓存（send buffer）中。TCP会不时地从发送缓存中取出一块数据，数据块的大小取决于MSS。每一块用户数据被取出后都会被TCP配上一个TCP首部，从而形成完整的TCP报文段。这些报文段被下传给网络层，当TCP在另一端接收到一个报文段后，该报文段的数据就被放入该TCP连接的接收缓存中，应用程序从此缓存中读取数据流。</p><p><img src="https://bu.dusays.com/2024/11/26/67457a5580469.png" alt="16"></p><blockquote><p><strong>MSS 与 MUT 的区分</strong></p><p><strong>最大报文段长度（Maximum Segment Size，MSS）</strong> 是TCP数据包中可以承载的最大数据部分的大小，不包括 TCP 和 IP 头部的开销。</p><p><strong>最大传输单元（Maximum Transmission Unit，MTU）</strong> 是数据链路层的数据帧数据部分最大长度，表示一次能够通过网络接口传输的最大数据包的总大小，包括了网络层的数据包（如IP数据包）的头部和数据部分，但不包括链路层的头部和尾部。</p><p>以太网和PPP链路层协议都具有1500字节的MTU，TCP和IP的首部长度通常各为20字节，因此MSS的典型值为1460字节。</p></blockquote><h3 id="2-TCP报文段结构">2.TCP报文段结构</h3><p>TCP报文段由首部字段和一个数据字段组成：</p><p><img src="https://bu.dusays.com/2024/11/26/67457a651f518.png" alt="17"></p><p>TCP报文段的首部主要由以下部分构成：</p><table border="1" cellspacing="0" cellpadding="5">  <thead>    <tr>      <th style="text-align: center; vertical-align: middle;">名称</th>      <th style="text-align: center; vertical-align: middle;">大小</th>      <th style="text-align: center; vertical-align: middle;">含义</th>    </tr>  </thead>  <tbody>    <tr>      <td style="text-align: center; vertical-align: middle;">源端口字段</td>      <td>2字节</td>      <td>表示发送方进程使用的端口号</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">目的端口字段</td>      <td>2字节</td>      <td>表示接收方进程使用的端口号</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">序号字段</td>      <td>4字节</td>      <td>TCP对要传输的字节流中每一个字节都按顺序进行编号。序号字段中存储的是当前报文段数据部分第一个字节的序号（也就是相对于字节流的偏移量）</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">确认号字段</td>      <td>4字节</td>      <td>表示期望收到的下一部分数据的首字节序号（通常为已确认最后一个字节的下一个字节的编号）</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">首部长度（也称数据偏移字段）</td>      <td>4比特</td>      <td>当前报文段首部的长度，以4字节为单位。由于4比特能表达的最大十进制数为15，因此首部长度最大为15*4=60字节</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">保留字段</td>      <td>6比特</td>      <td>留作之后使用的字段，目前应置0</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">紧急位URG（URGent）</td>      <td>1比特</td>      <td>当URG位为1时，代表此报文段中有紧急数据，需要尽快发送，此时紧急指针字段（见下文）有效</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">确认位ACK（ACKnowledgement）</td>      <td>1比特</td>      <td>当ACK位为1时，确认号字段有效，否则无效。TCP规定，在建立连接后之，所有发送报文段中的ACK需置1（只有在建立连接的第一步和释放连接的第一步ACK不需要置1）</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">推送位PSH（PuSH）</td>      <td>1比特</td>      <td>由于TCP是面向字节流的，每一个报文段的数据部分可以看作是字节流的一部分，所以当一端收到了一个报文段后，并不一定需要直接交付给应用层，而是可以等待缓存填满了再向上交付。如果一个报文段的PSH位为1，接收方收到这个报文段后就会尽快将当前的数据交付给应用进程（即“推送”）</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">重置位RST（ReSet，又称复位位）</td>      <td>1比特</td>      <td>当RST位为1时，当前TCP连接必须立即释放，然后重新建立连接。这通常被用在TCP连接中出现严重错误（某一端的主机崩溃等）时，同时也可以用于拒绝一个非法的报文段或拒绝打开一个连接</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">同步位SYN（SYNchronization）</td>      <td>1比特</td>      <td>当SYN位为1时，代表这是一个请求连接或接收连接报文</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">终止位FIN（FINish）</td>      <td>1比特</td>      <td>当FIN位为1时，代表该报文的发送方请求释放单向的连接</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">窗口字段</td>      <td>2字节</td>      <td>指的是该报文段的发送方的接收窗口，单位为字节</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">校验和字段</td>      <td>2字节</td>      <td>计算方法基本与UDP一致，需要计算首部和数据两个部分</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">紧急指针字段</td>      <td>2字节</td>      <td>当URG位为1时此字段才有意义。表示本报文段中的紧急数据长度，以字节为单位。规定紧急数据都在报文段数据部分的最前面，因此可以通过该字段直接确定哪些是紧急数据</td>    </tr>        <tr>      <td style="text-align: center; vertical-align: middle;">选项字段</td>      <td>长度可变</td>      <td>当不使用选项时，TCP首部长度是20字节</td>    </tr>    <tr>      <td style="text-align: center; vertical-align: middle;">填充字段</td>      <td>长度可变</td>      <td>因为数据偏移字段以四字节为单位，所以首部长度必须是四字节的整数，不足的部分就通过填充字段补齐</td>    </tr>  </tbody></table><p><strong>TCP序号和确认号的使用</strong></p><p>TCP序号表示的是当前报文段数据部分第一个字节的序号，序列号用于跟踪数据流的顺序和确保数据包的完整性，接收方通过序列号来重新排序数据包，以便正确重组原始数据流。；确认号表示期望收到的下一部分数据的首字节序号，代表确认号之前的数据（不包括确认号本身）已被成功接受。</p><p>以下图为例，主机A发送Seq = 42，ACK = 79表示当前发送的数据第一个字节的序号是42，并对79之前的数据进行确认，示意主机B发送79及以后的数据。主机B收到数据后，发送Seq = 79，ACK = 43表示当前发送的数据第一个字节序号是79，并对主机A发来的数据进行确认。由于主机A发来的数据大小只有一个字节，因此确认码为42 + 1 = 43。后面的步骤同理。</p><p><img src="https://bu.dusays.com/2024/11/26/67457a757406b.png" alt="19"></p><p><strong>3.TCP重传超时间隔的设置</strong><br><strong>设置思路</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>要比RTT时间长：但RTT时间是动态变化的</p></li><li class="lvl-2"><p>不能太短：太早超时会造成不必要的重传</p></li><li class="lvl-2"><p>不能太长：对报文段丢失反应太慢</p></li></ul><p><strong>设置流程</strong>：</p><p><strong>测量值 SampleRTT</strong>：测量从报文段发出到收到确认的时间，如有重传则忽略此次测量。</p><p><strong>移动平均值 EstimatedRTT = (1-α )<em>EstimatedRTT + α</em>SampleRTT （推荐值：α = 0.125）</strong></p><p>因为RTT的值是动态变化的，因此我们使用指数加权平均移动的方式计算，过去的样本值的影响呈指数衰减，越新的测量值所占据的比重越大。</p><p>如果RTT变化的幅度越大，那么我们设置的超时时间也应该越大，为此我们还要引入安全边界时间。</p><p><strong>DevRTT = (1-β)<em>DevRTT + β</em>|SampleRTT-EstimatedRTT|（推荐值：β = 0.25）</strong></p><p>安全边界时间设置为四倍的DevRTT，RTT变化（方差）越大，安全边界时间越大。</p><p>因此，最终的重传超时间隔设置为：</p><p><strong>TimeoutInterval = EstimatedRTT + 4*DevRTT</strong></p><h3 id="4-可靠数据传输">4.可靠数据传输</h3><h4 id="（1）TCP可靠数据传输的特点">（1）TCP可靠数据传输的特点</h4><p>TCP在IP不可靠的尽力而为服务之上创建了一种<strong>可靠数据传输服务（reliable data transfer service）</strong>。TCP的可靠数据传输是一种流水线协议，是GBN和SR两种协议的混合体。</p><ul class="lvl-0"><li class="lvl-2"><p>TCP采用累计确认（类GBN）</p></li><li class="lvl-2"><p>TCP使用单个重传计时器（类GBN）</p></li><li class="lvl-2"><p>TCP触发超时重传时只重发那个最早的未确认的段（类SR）</p></li></ul><h4 id="（2）快速重传">（2）快速重传</h4><p>TCP除了超时重传外，还有快速重传机制。当发送方累计接收了相同数据的3个冗余的ACK后，即使此时还未到达超时重传时间，发送发也会选择重传改数据，这就是<strong>快速重传（fast retransmit）</strong>。</p><p><strong>产生TCP ACK的建议【RFC 5681】</strong>：</p><table border="1" cellspacing="0" cellpadding="5">  <thead>    <tr>      <th style="text-align: center;">事件</th>      <th style="text-align: center;">TCP接收方的动作</th>    </tr>  </thead>  <tbody>    <tr>      <td>具有所期望序号的按序报文段到达。所有在期望序号及以前的数据都已经被确认</td>      <td>延迟的ACK。对另一个按序报文段的到达最多等待500ms。如果下一个按序报文段在这个时间间隔内没有到达，则发送一个ACK</td>    </tr>    <tr>      <td>具有所期望序号的按序报文段到达。另一个按序报文段等待ACK传输</td>      <td>立即发送单个累计ACK，以确认两个按序报文段</td>    </tr>    <tr>      <td>比期望序号大的失序报文段到达。检测出间隔</td>      <td>立即发送冗余ACK，指示下一个期待字节的序号（其为间隔的低端的序号）</td>    </tr>    <tr>      <td>能部分或完全填充接收数据间隔的报文段到达</td>      <td>倘若该报文段起始于间隔的低端，则立即发送ACK</td>    </tr>  </tbody></table><p>表格上的内容理解起来可能有些困难，简单点来说就是一下四种情况：</p><ul class="lvl-0"><li class="lvl-2"><p>当发送方收到报文段后暂时不发送ACK，而是等待最多500ms（相对于超时间隔很小），如果等待期间没有另一个按序报文到达，再发送ACK。这样的等待是为了尽可能减少ACK的数量，减轻负担。</p></li><li class="lvl-2"><p>如果等待期间有另一个按序报文到达，则发送单个累计ACK，一次性确认两个按序报文。</p></li><li class="lvl-2"><p>如果接收窗口收到比期望序号大的失序报文，不会滑动，而是会产生间隔。此时立即发送ACK，希望尽快收到序号为间隔最低端的报文，从而填充间隔（要注意发送ACK的契机不是产生间隔，而是收到比期望序号大的失序报文，即每有一个这样的报文到达，无论会不会产生新的间隔都会发送一个ACK）。</p></li><li class="lvl-2"><p>当接收窗口收到能填充数据间隔的报文段时，如果该报文段起始于间隔的低端，则接收窗口可以滑动，然后立即发送新的ACK。</p></li></ul><p>快速重传的一个实例如下图所示：</p><p><img src="https://bu.dusays.com/2024/11/26/67457a835cd95.png" alt="20"></p><h4 id="（3）流量控制">（3）流量控制</h4><p>TCP为应用程序提供了<strong>流量控制服务（flow-control service）</strong> 以消除发送方使接收方缓存溢出的可能性。</p><p><strong>具体机制</strong>：</p><p><strong>接收窗口 (rwnd)</strong>：接收方根据其接收缓冲区的剩余空间，计算出能够接收的数据量，并将该数值放在TCP报文段头部的rwnd字段中，发送给发送方。</p><p><strong>发送方行为</strong>：发送方根据接收到的rwnd值，调整接下来要发送的数据量。如果rwnd值较大，发送方可以加快数据发送速率；如果rwnd较小，发送方会减缓发送速率，甚至停止发送数据，直到接收窗口再次打开。</p><h4 id="（4）连接管理">（4）连接管理</h4><p>在正式交换数据之前，发送方和接收方需要先握手建立通信关系。</p><p><strong>两次握手的的弊端</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>产生半连接：客服端发起建立连接请求后，如果一段时间内没有收到服务器的回复会再次发送请求。可能会出现重复建立连接的情况，浪费服务器资源。</p></li><li class="lvl-2"><p>新老数据的混乱：客户端发出了一个连接请求，但由于网络问题，该请求在途中延迟到达。客户端可能已经超时放弃了连接，并重新发起了一个新的连接请求。此时，服务器接收到了旧的请求，认为客户端要建立连接，随后在通信中会产生数据的混乱和误处理。</p></li></ul><p><img src="https://bu.dusays.com/2024/11/26/67457a9d0a03d.png" alt="21"></p><p><strong>TCP连接建立（三次握手）</strong></p><p><img src="https://bu.dusays.com/2024/11/26/67457aa9a4017.png" alt="22"></p><p>首先服务器进入LISTEN状态，等待客户端的连接。</p><p>a. 客户端向服务器发送一个连接请求报文段，内容如下：</p><ul class="lvl-0"><li class="lvl-2"><p>同步位SYN为1。</p></li><li class="lvl-2"><p>初始序号seq通常随机设置，记为x。</p></li><li class="lvl-2"><p>不携带任何数据，即报文段的数据部分为空。</p></li></ul><p>虽然该报文段不携带数据，但是仍需要消耗掉一个序号。发送后，客户端进入SYN-SENT状态。</p><p>b. 服务器收到客户端发来的连接请求后，如果同意建立连接，则向客户端发送一个确认报文段，具体内容如下：</p><ul class="lvl-0"><li class="lvl-2"><p>同步位SYN为1，确认位ACK为1。</p></li><li class="lvl-2"><p>因为TCP提供全双工通讯，服务器也可以向客户端发送数据，所以服务器也需要为自己随机设置一个初始序号seq，记为y。</p></li><li class="lvl-2"><p>确认号ack = x + 1（因为连接请求报文段需要占用一个序号）。</p></li><li class="lvl-2"><p>不携带任何数据，即报文段数据部分为空。</p></li></ul><p>确认报文段也需要消耗一个序号。发送后，服务器进入SYN-RCVD状态。</p><p>c. 客户端收到服务器发来的确认报文段后，需要再向服务器发送确认报文段，内容如下：</p><ul class="lvl-0"><li class="lvl-2"><p>确认位ACK为1。</p></li><li class="lvl-2"><p>序号seq = x + 1。</p></li><li class="lvl-2"><p>确认号ack = y + 1（因为服务器的确认报文段需要占用一个序号）。</p></li><li class="lvl-2"><p>可以携带数据，也可以不携带数据。</p></li></ul><p>该报文段如果不携带数据，则不消耗序号。客户端发送完该报文段后，进入ESTABLISHED状态。当服务器接收到该报文段后，也进入ESTABLISHED状态。此时，连接建立成功，双方可以进行数据传输。</p><blockquote><p><strong>注意</strong>：初始序号x，y之所以都随机选择而不是固定值是为了尽可能避免接收到上次连接过程中滞留的数据，从而导致新老数据的混乱。</p></blockquote><p><strong>TCP连接释放（四次挥手）</strong></p><p><img src="https://bu.dusays.com/2024/11/26/67457ab51a6b8.png" alt="23"></p><p>当客户端或服务器没有数据要传输时，都可以选择释放连接（单向释放，另一方仍可以发送信息）。当双方都释放了连接后，TCP连接才会完全释放。</p><p>假设客户端首先想释放连接。</p><p>a. 客户端向服务器发送连接释放报文段，内容如下：</p><ul class="lvl-0"><li class="lvl-2"><p>终止位FIN为1。</p></li><li class="lvl-2"><p>序号seq为客户端发送的最后一个字节的序号加1，设为x。</p></li><li class="lvl-2"><p>不携带任何数据，即报文段的数据部分为空。</p></li></ul><p>虽然该报文段并不携带数据，但是仍然需要消耗掉一个序号。发送后，客户端就进入FIN-WAIT-1阶段。</p><p>b. 服务器收到客户端发来的连接释放报文段后，向客户端发送一个确认报文段，内容如下：</p><ul class="lvl-0"><li class="lvl-2"><p>确认位ACK为1。</p></li><li class="lvl-2"><p>序号seq为服务器已经传送过的数据的最后一个字节的序号加1（图中未展示）。</p></li><li class="lvl-2"><p>确认号ack = x + 1（因为连接释放报文段需要占用一个序号）。</p></li></ul><p>服务器发送完确认报文段后，进入CLOSE-WAIT状态。此时客户端到服务器这个方向连接被关闭了，但服务器任然能向客户端发送信息，即TCP处于半关闭状态。如果服务器仍有数据要向客户端发送，那么就继续发送数据。当客户端收到服务器发送的确认报文段后，进入FIN-WAIT-2状态。</p><p>c. 如果服务器已经没有要向客户端发送的数据，就与前两步类似，解除服务器到客户端方向的连接。</p><p>客户端收到服务器发送的连接释放报文后，会发送一个确认报文段，进入TIME-WAIT阶段。然后等待两倍的**最长报文段寿命（MSL，Maximum Segment Lifetime，指一个TCP报文段在网络中能存在的最长时间）**后，进入CLOSED状态，客户端可以建立下一个连接。当服务器收到客户端发送的确认报文段后，进入CLOSE阶段，此时服务器可以建立下一次连接，TCP连接释放完毕。</p><blockquote><p><strong>为什么要等待两倍的MSL？</strong></p><p>为了确保最后的ACK报文可靠到达，否则可能会产生在第三次挥手后，客户端已经进入CLOSE状态，但其发送的确认报文丢失或错误的情况。这时即使服务器触发超时重传机制，但由于客户端已经CLOSE，无法回复，从而导致连接无法关闭，持续占用资源的情况。</p></blockquote><h2 id="六、拥塞控制原理">六、拥塞控制原理</h2><h3 id="1-拥塞的场景">1.拥塞的场景</h3><p><strong>情景一：两条连接共享具有无限大缓存的单跳路由</strong></p><p><img src="https://bu.dusays.com/2024/11/26/67457ac42c7e5.png" alt="24"></p><p>上图中，主机A和B共享一条容量为R的链路，该路由器带有缓存，这里我们假设缓存无限大，即数据包不会被丢弃或丢失，而是会被缓存在路由器中。</p><p>当主机A和主机B的发送速率小于等于R/2时，链路的总容量未被完全利用，每个主机可以以其发送速率顺利发送数据到接收方。因此，在这种情况下，接收方的吞吐量等于发送速率，即发送方发送的所有数据都成功到达接收方。当超过R/2时，链路的容量达到上限，即便发送方以更高的速率发送数据，接收方的吞吐量也不会继续增长。</p><p>虽然从吞吐量的角度来看，越接近R/2越好，可实际上，当发送速率接近R/2时，路由器的缓存会不断累积数据包，因为发送方的速率几乎等于链路的服务能力，导致路由器的队列无法清空，数据包在路由器的输出队列中等待的时间变得越来越长，最终导致平均延迟接近无穷大。</p><p><strong>情景二：两个发送方和一台具有有限缓存的路由器</strong></p><p><img src="https://bu.dusays.com/2024/11/26/67457ad1a792f.png" alt="25"></p><p>第二种情况下，路由器缓存的容量是有限的，当分组到达已满的缓存时会被丢弃。此时发送方会触发超时重传，重传数据包会增加网络负担，并可能导致更高的延迟和进一步的缓存溢出问题。更严重的情况是，发送方过早重传未丢失的数据包，导致路由器转发重复数据包，会浪费带宽并降低有效吞吐量。</p><p><strong>情景三：四个发送方和具有有限缓存的多台路由器及多跳路径</strong></p><p><img src="https://bu.dusays.com/2024/11/26/67457adfdf678.png" alt="26"></p><p>第三种情况下，A向C，B向D，C向A，D向B传递数据，每个均要经过两跳。在流量很大的情况下，路由器缓存会逐渐满，导致缓存溢出。以路由器R2为例，由于缓存有限，A-C连接与B-D连接必须竞争缓存资源。假如B-D连接的流量较大，A-C连接在R2上的吞吐量会受到严重影响。最终，路由器R2的缓存可能被B-D连接的数据包填满，A-C连接在R2上的吞吐量可能接近于零。</p><p>而每当一个数据包在第二跳路由器上被丢弃，第一跳路由器所做的转发工作变成了无用功。这导致上游的传输能力被严重浪费。</p><h3 id="2-拥塞控制方法">2.拥塞控制方法</h3><p>我们根据网络层是否为运输层拥塞控制提供了显式帮助来将拥塞控制方法划分为以下两种：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>端到端拥塞控制</strong>：网络层没有为运输层拥塞控制提供显式支持，即使网络中存在拥塞，端系统也必须通过对网络行为的观察（如分组丢失与时延）来推断之。TCP采用的便是这种方式，路由器的负担较轻。</p></li><li class="lvl-2"><p><strong>网络辅助的拥塞控制</strong>：路由器向发送方提供关于网络中拥塞状态的显式反馈信息，这种反馈可以是简单地用一个比特来指明链路中的拥塞情况；也可以是在更复杂的情况下，如ATM可用比特率（Available Bite Rate，ABR）拥塞控制中，路由器显式地通知发送方它（路由器）能在输出链路上支持的最大主机发送速率。</p></li></ul><blockquote><p><strong>拥塞控制与流量控制的区别</strong></p><ul class="lvl-1"><li class="lvl-2"><strong>拥塞控制</strong>关注的是网络层面的整体负载，确保网络资源不会因过多的数据流量而耗尽。它基于网络中节点和链路的状态来调整数据传输速率，以防止网络过载。</li><li class="lvl-2"><strong>流量控制</strong>关注的是发送端和接收端之间的数据流速率，确保发送方不会超出接收方的处理能力，从而避免接收方的缓冲区溢出。它通过接收方的反馈来调整发送速率，保证数据的稳定传输。</li></ul></blockquote><h2 id="七、TCP拥塞">七、TCP拥塞</h2><h3 id="1-机制介绍">1.机制介绍</h3><p>TCP的拥塞控制采用的是端到端拥塞控制的方式，主要聚焦于如何检测拥塞控制以及对速度的控制策略。</p><h4 id="（1）拥塞感知">（1）拥塞感知</h4><p>发送端主要通过两种方式判断是否拥塞：</p><ul class="lvl-0"><li class="lvl-2"><p>如果某个段超时了（丢失事件），则判断为路由器缓冲区没有空间了，导致该段丢失，即发生拥塞。当然也有可能是因为该段在传输过程中出错，没有通过校验而被丢弃，从而对拥塞情况产生误判，但这种情况发生的概率较小。</p></li><li class="lvl-2"><p>重复收到某个段的三次冗余ACK，则判断为轻微拥塞。网络这时还能够进行一定程度的传输，拥塞但情况要比第一种好。</p></li></ul><h4 id="（2）速率控制方法">（2）速率控制方法</h4><p>运行在发送方的TCP拥塞控制机制跟踪一个可动态调整的变量，拥塞窗口（congestion Window），表示为cwnd。它对一个TCP发送方能向网络中发送流量的速率进行了限制，在一个发送方中未被确认的数据量不会超过cwnd与rwnd（接收窗口）中的最小值，即</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="51.567ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 22792.7 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="4C" d="M128 622Q121 629 117 631T101 634T58 637H25V683H36Q48 680 182 680Q324 680 348 683H360V637H333Q273 637 258 635T233 622L232 342V129Q232 57 237 52Q243 47 313 47Q384 47 410 53Q470 70 498 110T536 221Q536 226 537 238T540 261T542 272T562 273H582V268Q580 265 568 137T554 5V0H25V46H58Q100 47 109 49T128 61V622Z" style="stroke-width: 3;"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(625,0)" style="stroke-width: 3;"/><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(1125,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1519,0)" style="stroke-width: 3;"/><path data-c="42" d="M131 622Q124 629 120 631T104 634T61 637H28V683H229H267H346Q423 683 459 678T531 651Q574 627 599 590T624 512Q624 461 583 419T476 360L466 357Q539 348 595 302T651 187Q651 119 600 67T469 3Q456 1 242 0H28V46H61Q103 47 112 49T131 61V622ZM511 513Q511 560 485 594T416 636Q415 636 403 636T371 636T333 637Q266 637 251 636T232 628Q229 624 229 499V374H312L396 375L406 377Q410 378 417 380T442 393T474 417T499 456T511 513ZM537 188Q537 239 509 282T430 336L329 337H229V200V116Q229 57 234 52Q240 47 334 47H383Q425 47 443 53Q486 67 511 104T537 188Z" transform="translate(1908,0)" style="stroke-width: 3;"/><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(2616,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(3144,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3533,0)" style="stroke-width: 3;"/><path data-c="53" d="M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z" transform="translate(3977,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(4533,0)" style="stroke-width: 3;"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(4977,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(5533,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(6144.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(7144.4,0)"><path data-c="4C" d="M128 622Q121 629 117 631T101 634T58 637H25V683H36Q48 680 182 680Q324 680 348 683H360V637H333Q273 637 258 635T233 622L232 342V129Q232 57 237 52Q243 47 313 47Q384 47 410 53Q470 70 498 110T536 221Q536 226 537 238T540 261T542 272T562 273H582V268Q580 265 568 137T554 5V0H25V46H58Q100 47 109 49T128 61V622Z" style="stroke-width: 3;"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(625,0)" style="stroke-width: 3;"/><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(1125,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1519,0)" style="stroke-width: 3;"/><path data-c="42" d="M131 622Q124 629 120 631T104 634T61 637H28V683H229H267H346Q423 683 459 678T531 651Q574 627 599 590T624 512Q624 461 583 419T476 360L466 357Q539 348 595 302T651 187Q651 119 600 67T469 3Q456 1 242 0H28V46H61Q103 47 112 49T131 61V622ZM511 513Q511 560 485 594T416 636Q415 636 403 636T371 636T333 637Q266 637 251 636T232 628Q229 624 229 499V374H312L396 375L406 377Q410 378 417 380T442 393T474 417T499 456T511 513ZM537 188Q537 239 509 282T430 336L329 337H229V200V116Q229 57 234 52Q240 47 334 47H383Q425 47 443 53Q486 67 511 104T537 188Z" transform="translate(1908,0)" style="stroke-width: 3;"/><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(2616,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(3144,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3533,0)" style="stroke-width: 3;"/><path data-c="41" d="M255 0Q240 3 140 3Q48 3 39 0H32V46H47Q119 49 139 88Q140 91 192 245T295 553T348 708Q351 716 366 716H376Q396 715 400 709Q402 707 508 390L617 67Q624 54 636 51T687 46H717V0H708Q699 3 581 3Q458 3 437 0H427V46H440Q510 46 510 64Q510 66 486 138L462 209H229L209 150Q189 91 189 85Q189 72 209 59T259 46H264V0H255ZM447 255L345 557L244 256Q244 255 345 255H447Z" transform="translate(3977,0)" style="stroke-width: 3;"/><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(4727,0)" style="stroke-width: 3;"/><path data-c="6B" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T97 124T98 167T98 217T98 272T98 329Q98 366 98 407T98 482T98 542T97 586T97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V463L180 233L240 287Q300 341 304 347Q310 356 310 364Q310 383 289 385H284V431H293Q308 428 412 428Q475 428 484 431H489V385H476Q407 380 360 341Q286 278 286 274Q286 273 349 181T420 79Q434 60 451 53T500 46H511V0H505Q496 3 418 3Q322 3 307 0H299V46H306Q330 48 330 65Q330 72 326 79Q323 84 276 153T228 222L176 176V120V84Q176 65 178 59T189 49Q210 46 238 46H254V0H246Q231 3 137 3T28 0H20V46H36Z" transform="translate(5171,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(5699,0)" style="stroke-width: 3;"/><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(6143,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(14121.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(15177,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width: 3;"/><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)" style="stroke-width: 3;"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(16844,0)"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(17344,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" style="stroke-width: 3;"/><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z" transform="translate(444,0)" style="stroke-width: 3;"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1166,0)" style="stroke-width: 3;"/><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1722,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(19622,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mtext" transform="translate(20066.7,0)"><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" style="stroke-width: 3;"/><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z" transform="translate(392,0)" style="stroke-width: 3;"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1114,0)" style="stroke-width: 3;"/><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1670,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(22292.7,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtext>LastByteSent</mtext><mo>−</mo><mtext>LastByteAcked</mtext><mo>≤</mo><mo data-mjx-texclass="OP" movablelimits="true">min</mo><mo fence="false" stretchy="false">{</mo><mtext>cwnd</mtext><mo>,</mo><mtext>rwnd</mtext><mo fence="false" stretchy="false">}</mo></math></mjx-assistive-mml></mjx-container><blockquote><p>从这里我们可以看出，发送速率的调整是基于流量控制和拥塞控制的联合控制。</p></blockquote><p>在前面流量控制中我们讨论了接受窗口rwnd，那么这里的拥塞窗口cwnd要怎么估计呢？</p><p>粗略地来讲，在每个往返时间RTT的起始点，上面的限制条件允许发送方向该连接发送cwnd个字节的数据，在该RTT结束时发送方接收对数据的确认报文。因此发送方发送的数据大概为<strong>cwnd/RTT</strong> 字节/秒。通过调节cwnd的值，发送方能够调整其发送数据的速率。虽然这种方式很不精确，但是由于有反馈，因此仍然能够让我们达到相关的目的。</p><p>cwnd的动态调整：</p><ul class="lvl-0"><li class="lvl-2"><p>超时或收到3个重复ack，则cwnd减小</p></li><li class="lvl-2"><p>否则（正常收到ack，未发生以上情况），则cwnd增大</p></li></ul><p>后面我们将具体地讲cwnd的调整规则。</p><h3 id="2-TCP拥塞控制流程">2.TCP拥塞控制流程</h3><h4 id="（1）慢启动">（1）慢启动</h4><p>当一条TCP连接开始时，cwnd的值通常被设为1（个MSS的大小）。这就使得初始发送速率cwnd/RTT的值很小。为了迅速最大化利用带宽，在<strong>慢启动（slow-start）</strong> 阶段，cwnd的值以一个MSS开始，并且每当传输的报文段首次被确认就增加一个MSS。在这个过程中，每经过一个RTT，发送速率就会翻倍。也就是说，TCP的发送速率起始很慢，但在慢启动阶段会以指数级增长（从宏观上来看，慢启动阶段的时间其实很短，慢启动并不“慢”）。</p><p><img src="https://bu.dusays.com/2024/11/26/67457af166f42.png" alt="27"></p><p>指数级增长的速率很快就会触碰到带宽的上限，那么什么时候停止这种增长呢？</p><p><strong>出现超时</strong>：</p><p>当出现超时情况后，TCP发送方会把cwnd的大小设置为1并重新开始慢启动过程，同时将触发超时时，cwnd大小的一半记为警戒值，即ssthresh=cwnd/2。后面当cwnd到达或超过警戒值后，说明此时快要触碰到上限了，继续指数增长过于鲁莽，因此会结束慢启动阶段，进入拥塞避免阶段。在拥塞避免阶段，cwnd线性增长。当再次触发超时时，发送方会更新警戒值，将其设置为当前cwnd大小的一半，然后把cwnd的大小设置为1重新开始慢启动，以此类推。</p><p><strong>出现三次冗余ack时</strong>：</p><p>由于出现三次冗余ack的情况并没有超时这么严重，因此我们不需要将cwnd设置为1重新慢启动，这时TCP执行一种快速重传并进入快速回复状态，后面将详细讨论这块内容。需要注意的是这种情况下，警戒值也会被更新为此时cwnd大小的一半。</p><h4 id="（2）拥塞控制">（2）拥塞控制</h4><p>一旦进入了拥塞控制阶段，cwnd的值大约是上次遇到拥塞时值的一半，说明距离拥塞已经不远。TCP选择采用了一种更保守的方式，即每个RTT只将cwnd增加一个MSS。后续触发超时，会更新警戒值并进入慢启动阶段；出现三次冗余ack则反应不会这么剧烈，只会在更新警戒值后，跳过慢启动，直接进入拥塞控制状态，这种行为我们称之为快速恢复。</p><h4 id="（3）快速恢复">（3）快速恢复</h4><p>由三个冗余ack触发的丢包被视为轻度拥塞， 在快速恢复算法中，发送端会把cwnd设置为原来的一半再加上三个MSS。</p><p>这里的加三可能有些难以理解。我们先来思考产生冗余ack意味着什么。既然发送方收到了三个重复的确认，就表明有三个分组已经离开了网络。这三个分组不再消耗网络的资源，而是停留在接收方的缓存中（接收方发送出3个重复的确认就证明了这个事实）。可见现在网络中不是堆积了分组，而是减少了三个分组。因此可以适当把拥塞窗口扩大些，我们可以把它理解为一种补偿机制。</p><p>TCP拥塞控制的FSM描述见下图：</p><p><img src="https://bu.dusays.com/2024/11/26/67457afe7b9f5.png" alt="28"></p><blockquote><p><strong>不同教材对快速恢复的解释</strong>：</p><p>在《计算机网络 自顶向下方法 第七版》这本书中，将快速恢复机制解释为把cwnd设置为原来的一半再加三；而在《计算机网络 第七版 谢希仁》中，则是将快速恢复机制解释为简单地把cwnd设置为原来的一半，但也提及了一下额外加三的情况。谢希仁书中的原话是：“请注意，也有的快速恢复实现是把快恢复开始时的拥塞窗口cwnd值再增大一下（增大3个报文段的长度），即等于新的ssthresh + 3 * MSS”。而在部分高校（如大连理工大学）的教学和一些教辅资料（如王道考研复习指导）中，也都是把cwnd简单地设置为原来的一半。</p><p>由于本笔记以《自定向下方法》这本书的内容为准，因此这里为大家介绍的是额外加三个MSS的版本。</p></blockquote><h3 id="3-TCP吞吐量">3.TCP吞吐量</h3><p>我们一般用窗口window的尺寸W和RTT来描述TCP的平均吞吐量，在这个过程中，我们忽略慢启动阶段（因为从宏观上看，慢启动用时很短），并假设发送端总有数据传输。</p><p><img src="https://bu.dusays.com/2024/11/26/67457b0e9ae73.png" alt="29"></p><p>从上图我们可以得到：</p><p>平均窗口尺寸：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="4.498ex" height="4.586ex" role="img" focusable="false" viewBox="0 -1341 1988 2027" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width: 3;"/></g><rect width="700" height="60" x="120" y="220"/></g><g data-mml-node="mi" transform="translate(940,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mfrac><mn>3</mn><mn>4</mn></mfrac><mi>W</mi></math></mjx-assistive-mml></mjx-container><p>平均吞吐量：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.6ex;" xmlns="http://www.w3.org/2000/svg" width="34.685ex" height="5.376ex" role="img" focusable="false" viewBox="0 -1669.2 15330.6 2376.2" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" style="stroke-width: 3;"/><path data-c="76" d="M338 431Q344 429 422 429Q479 429 503 431H508V385H497Q439 381 423 345Q421 341 356 172T288 -2Q283 -11 263 -11Q244 -11 239 -2Q99 359 98 364Q93 378 82 381T43 385H19V431H25L33 430Q41 430 53 430T79 430T104 429T122 428Q217 428 232 431H240V385H226Q187 384 184 370Q184 366 235 234L286 102L377 341V349Q377 363 367 372T349 383T335 385H331V431H338Z" transform="translate(500,0)" style="stroke-width: 3;"/><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(1028,0)" style="stroke-width: 3;"/><path data-c="54" d="M36 443Q37 448 46 558T55 671V677H666V671Q667 666 676 556T685 443V437H645V443Q645 445 642 478T631 544T610 593Q593 614 555 625Q534 630 478 630H451H443Q417 630 414 618Q413 616 413 339V63Q420 53 439 50T528 46H558V0H545L361 3Q186 1 177 0H164V46H194Q264 46 283 49T309 63V339V550Q309 620 304 625T271 630H244H224Q154 630 119 601Q101 585 93 554T81 486T76 443V437H36V443Z" transform="translate(1528,0)" style="stroke-width: 3;"/><path data-c="43" d="M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z" transform="translate(2250,0)" style="stroke-width: 3;"/><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z" transform="translate(2972,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(3653,0)" style="stroke-width: 3;"/><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(4042,0)" style="stroke-width: 3;"/><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(4598,0)" style="stroke-width: 3;"/><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(4990,0)" style="stroke-width: 3;"/><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(5546,0)" style="stroke-width: 3;"/><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(6102,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(6658,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7324.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(8380.6,0)"><g data-mml-node="mrow" transform="translate(382.7,805)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width: 3;"/></g><rect width="553.6" height="60" x="120" y="220"/></g><g data-mml-node="mi" transform="translate(793.6,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1463,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width: 3;"/></g></g><rect width="2367" height="60" x="120" y="220"/></g><g data-mml-node="mtext" transform="translate(10987.6,0)"><path data-c="A0" d="" style="stroke-width: 3;"/><path data-c="62" d="M307 -11Q234 -11 168 55L158 37Q156 34 153 28T147 17T143 10L138 1L118 0H98V298Q98 599 97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V543Q179 391 180 391L183 394Q186 397 192 401T207 411T228 421T254 431T286 439T323 442Q401 442 461 379T522 216Q522 115 458 52T307 -11ZM182 98Q182 97 187 90T196 79T206 67T218 55T233 44T250 35T271 29T295 26Q330 26 363 46T412 113Q424 148 424 212Q424 287 412 323Q385 405 300 405Q270 405 239 390T188 347L182 339V98Z" transform="translate(250,0)" style="stroke-width: 3;"/><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(806,0)" style="stroke-width: 3;"/><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1334,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1723,0)" style="stroke-width: 3;"/><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(2167,0)" style="stroke-width: 3;"/><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" transform="translate(2561,0)" style="stroke-width: 3;"/><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(3061,0)" style="stroke-width: 3;"/><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3455,0)" style="stroke-width: 3;"/><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(3899,0)" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mtext>avgTCPthruput</mtext><mo>=</mo><mfrac><mrow><mfrac><mn>3</mn><mn>4</mn></mfrac><mi>W</mi></mrow><mrow><mi>R</mi><mi>T</mi><mi>T</mi></mrow></mfrac><mtext> bytes/sec</mtext></math></mjx-assistive-mml></mjx-container><h3 id="4-TCP的公平性">4.TCP的公平性</h3><p>在本章第六部分的第1小节的情景一中我们引入了一种场景，即两条连接共享具有无限大缓存的单跳路由，这里我们忽略缓存的部分，只考虑主机A和B共享一条容量为R的链路。当时我们默认主机A和B的发送速率都是R/2。不知道当时你有没有好奇为什么两条连接的最终发送速率要相等呢？笔者当时也没搞明白，看到这一节才恍然大悟。</p><p>如果K个TCP会话分享一个链路带宽为R的瓶颈，每一个会话的有效带宽为R/K，我们将TCP的这种特点称之为<strong>TCP的公平性</strong>。</p><p><img src="https://bu.dusays.com/2024/11/26/67457b2292a5a.png" alt="30"></p><p>为什么TCP会有这种性质呢？让我们整理一下前面学到的拥塞控制的内容，然后观察下图：</p><p><img src="https://bu.dusays.com/2024/11/26/67457b2aa5f00.png" alt="31"></p><p>我们首先假设两条连接最开始的状态位于A点，此时连接1的吞吐量大于连接2，由于A点位于RR的下方，说明两条连接都处于拥塞控制状态（忽略慢启动）。此时每过一个RTT，两条连接的cwnd都会加一，也就是说此时的状态会由A点45度向右上角移动。当到达B点后，由于B点位于RR上方，超过了带宽的承受能力，两条连接的吞吐量都会回退到原本来的一半（依旧忽略慢启动）。回退后会回到A点吗？当然不是。因为连接1的吞吐量比较大，减半后减少的吞吐量会更多，所以会退到C点，然后继续进入拥塞控制状态慢慢移动到D点。以此类推，最终会收敛到两条连接的吞吐量相等的位置。</p><p>当然，在实际情况中，这种公平性不是绝对的，如果两条连接的RTT不相等，那么RTT较短的那条连接的吞吐量增长速率显然会更快，从而占据更多的带宽。</p><p>UDP有很强的侵略性，如果和TCP公用一条链路，它会严重压制TCP的流量，因为UDP不需要考虑拥塞控制的问题，而TCP要考虑的就多了（doge）。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《计算机网络 自顶向下方法》笔记：第二章 应用层</title>
      <link href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/"/>
      <url>/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥计算机网络 自顶向下方法 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网">《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</a></li><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第二章 应用层">《计算机网络 自顶向下方法》笔记：第二章 应用层</a></li><li><a href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第三章 传输层">《计算机网络 自顶向下方法》笔记：第三章 传输层</a></li><li><a href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面">《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</a></li><li><a href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面">《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</a></li><li><a href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网">《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</a></li></ol></blockquote><h2 id="一、应用层协议原理">一、应用层协议原理</h2><h3 id="1-网络应用程序体系结构">1.网络应用程序体系结构</h3><h4 id="（1）客户-服务器体系结构（client-server-architecture）">（1）客户-服务器体系结构（client-server architecture）</h4><p><strong>服务器</strong>：一直运行；固定的IP地址和周知的端口号（约定）；</p><p><strong>客户端</strong>：主动与服务器通信；与互联网有间歇性的连接；可能是动态IP地址；不直接与其他客户端通信；</p><p><strong>特点</strong>：扩展性差，对数据中心进行扩展；</p><h4 id="（2）对等体（P2P）体系结构">（2）对等体（P2P）体系结构</h4><ul class="lvl-0"><li class="lvl-2"><p>几乎没有一直运行的服务器；</p></li><li class="lvl-2"><p>任意端系统之间可以进行通信；</p></li><li class="lvl-2"><p>每一个节点既是客户端又是服务器；</p></li><li class="lvl-2"><p>参与的主机间歇性连接且可以改变IP地址；</p></li></ul><p><strong>特点</strong>：难以管理；自扩展性（self-scalability）---新peer节点带来新的服务能力，当然也带来新的服务请求；</p><h3 id="2-进程通信">2.进程通信</h3><p><strong>进程（process）</strong>：在主机上运行的应用程序；</p><p><strong>客户端进程</strong>：发起通讯的进程；</p><p><strong>服务器进程</strong>：等待连接的进程；</p><p>在同一个主机内，使用进程间通信机制通信（由操作系统定义）；</p><p>不同主机，通过交换报文（message）来通信；</p><p><strong>注意</strong>：P2P架构的应用也有着客户端进程和服务器进程之分；</p><h3 id="3-分布式进程通信需要解决的问题">3.分布式进程通信需要解决的问题</h3><h4 id="（1）进程标识和寻址问题">（1）进程标识和寻址问题</h4><p>进程为了接收报文，必须有一个标识，即：<strong>SAP（服务访问点）</strong>（发送同样需要标识）</p><p><strong>标识三要素</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>主机IP地址：仅IP地址不能唯一标识进程，因为一台端系统上有多个进程在运行；</p></li><li class="lvl-2"><p>所采用的传输层协议：TCP or UDP；</p></li><li class="lvl-2"><p>端口号（Port Numbers）：标识在主机上运行的特定应用程序或服务；</p></li></ul><h4 id="（2）传输层如何向应用层提供服务">（2）传输层如何向应用层提供服务</h4><p><strong>层间接口必须要携带的信息</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>需要传输的报文：对于本层来说就是<strong>SDU（Segment Data Unit，段数据单元）</strong></p></li><li class="lvl-2"><p>谁传的：对方的应用进程的标示，IP+TCP(UDP）端口</p></li><li class="lvl-2"><p>传给谁：对方的应用进程的标示，IP+TCP(UDP）端口</p></li></ul><p>传输层实体（TCP或UDP实体）根据这些信息进行TCP报文段（UDP数据报）的封装。</p><p>而每次传输报文，都携带如此多的信息，过于繁琐，不便管理，我们使用代号标示通信的双方或单方：<strong>socket（套接字）</strong></p><blockquote><p><strong>TCP socket</strong>：在TCP应用中，套接字可以被视为一个四元组，其中包含了本地意义的标识（不具有全局意义）。</p><p><strong>四元组</strong>：源IP，源Port，目标IP，目标Port</p><p><strong>UDP socket</strong>：在UDP应用中，套接字可以被视为一个二元组，其中包含了本地意义的标识。</p><p><strong>二元组</strong>：源端IP，源端Port；</p></blockquote><p>基于TCP socket和UDP socket的区别，TCP应用发送数据时要包含socket，数据内容；而UDP应用发送数据时要包含socket，数据内容，目标IP和Port；</p><h4 id="（3）如何使用传输层提供的服务实现应用">（3）如何使用传输层提供的服务实现应用</h4><p>应用层协议：定义了运行在不同端系统上的应用进程如何相互交换报文；</p><p>应用层协议仅仅只是应用的一个组成部分，例如Web应用包括：HTTP协议，web客户端，web服务器，HTML；</p><p><strong>描述传输层所提供的服务</strong>：可靠性、流量控制、拥塞控制等</p><p><strong>TCP服务</strong>：可靠的传输服务，流量控制，拥塞控制，面向连接；</p><p><strong>无法提供的服务</strong>：时间保证，最小吞出保证和安全性；</p><p><strong>UDP服务</strong>：不可靠数据传输；</p><p><strong>无法提供的服务</strong>：可靠，流量控制，拥塞控制，时间，带宽保证，建立连接，安全性；</p><p><strong>UDP存在的必要性</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>能够区分不同的进程（IP服务没有这个功能）；</p></li><li class="lvl-2"><p>无需建立连接，省去了建立连接的时间；</p></li><li class="lvl-2"><p>不做可靠性的工作，例如检错重发；</p></li><li class="lvl-2"><p>没有拥塞控制和流量控制，应用能够按照设定的速度发送数据</p></li></ul><blockquote><p><strong>安全性问题</strong>：</p><p>TCP和UDP都没有加密，明文通过互联网传输；</p><p><strong>SSL（Secure Sockets Layer）</strong> 在TCP上面实现，提供加密的TCP连接；</p><p>SSL在应用层，应用采用SSL库，SSL库使用TCP通信；</p><p>因此传输层本身并不提供安全性服务，这些安全性服务通常通过更高层的协议来实现。</p></blockquote><h2 id="二、Web与HTTP">二、Web与HTTP</h2><h3 id="1-专业术语">1.专业术语</h3><p><strong>Web页</strong>：由一些对象组成，对象可以是HTML文件、JPEG图像、Java小程序、声音剪辑文件等。<br>Web页含有一个基本的HTML文件，该基本HTML文件又包含若干对象的引用（链接），通过URL对每个对象进行引用：访问协议，用户名，口令字，端口等；<br><strong>URL格式</strong>:</p><p><img src="https://bu.dusays.com/2024/11/26/674577f1cfda4.png" alt="1"></p><h3 id="2-HTTP概括">2.HTTP概括</h3><p>Web的<strong>应用层协议</strong>是<strong>超文本传输协议（HyperText Transfer Protocol，HTTP）</strong>，它是Web的核心，在RFC 1945（HTTP 1.0）和RFC 2616（HTTP 1.1）中进行定义。</p><p>HTTP由两个程序实现：客户程序，服务器程序；</p><ul class="lvl-0"><li class="lvl-2"><p>客户：请求、接受和显示Web对象的浏览器</p></li><li class="lvl-2"><p>服务器：对请求进行相应，发送对象的Web服务器</p></li></ul><p><strong>HTTP使用TCP作为它的支撑运输协议（而不是UDP）</strong>：</p><p>HTTP客户发起一个与服务器的TCP连接（建立套接字，端口号为80），一旦连接建立，该浏览器和服务器进程就可以通过套接字接口访问TCP。</p><p><strong>HTTP是无状态协议（stateless protocol）</strong>：HTTP服务器不会保存关于客户的任何信息</p><p>例如某个特定的客户在几秒内两次请求同一个对象，服务器不会因为刚刚为该客户提供了该对象就不再做出反应，而是重新发送该对象，因为它并不会储存任何关于客户的信息。</p><p>无状态服务器通常能够支持更多的客户端，因为它们不需要为每个客户端维护状态信息，可以更高效地处理并发请求。相比之下，有状态协议需要维护历史信息，这可能会增加服务器的负担，并限制服务器能够同时处理的客户端数量。</p><h3 id="3-HTTP连接">3.HTTP连接</h3><h4 id="（1）非持久HTTP">（1）非持久HTTP</h4><ul class="lvl-0"><li class="lvl-2"><p>最多只有一个对象在TCP连接上发送；</p></li><li class="lvl-2"><p>下载多个对象需要多个TCP连接；</p></li><li class="lvl-2"><p>HTTP 1.0使用非持久连接；</p></li></ul><p><img src="https://bu.dusays.com/2024/11/26/674578102043f.png" alt="2"></p><p><img src="https://bu.dusays.com/2024/11/26/6745781caa3ba.png" alt="3"></p><p><strong>响应时间模型</strong></p><p><strong>往返时间RTT（round-trip time）</strong>：一个小的分组从客户端到服务器，再回到客户端的时间（忽略传输时间，注意此处传输时间和传播时间的区别）</p><p><strong>响应时间</strong>：一个RTT用来发起TCP连接，一个RTT用来HTTP请求并等待HTTP相应，文件传输时间（文件的传输时间不可忽略）。共计2RTT+文件传输时间。</p><p>模型图如下：</p><p><img src="https://bu.dusays.com/2024/11/26/6745783895cc1.png" alt="4"></p><h4 id="（2）持久HTTP">（2）持久HTTP</h4><ul class="lvl-0"><li class="lvl-2"><p>多个对象可以在一个（在客户端和服务器之间的）TCP连接上传输；</p></li><li class="lvl-2"><p>HTTP 1.1默认使用持久连接</p></li></ul><p><strong>非持久HTTP的缺点</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>每个对象要2个RTT；</p></li><li class="lvl-2"><p>操作系统必须为每个TCP连接都分配资源；</p></li><li class="lvl-2"><p>浏览器通常会通过并行打开多个TCP连接来获取页面中引用的多个对象，增加网络负载和服务器负担；</p></li></ul><p><strong>持久HTTP</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>服务器在发送响应后，仍保持TCP连接；</p></li><li class="lvl-2"><p>在相同客户端和服务器之间的后续请求和响应报文通过相同的连接进行传送；</p></li><li class="lvl-2"><p>客户端在遇到一个引用对象的时候，就可以尽快发送该对象的请求；</p></li></ul><h4 id="（3）持久HTTP又分为非流水方式和流水方式">（3）持久HTTP又分为非流水方式和流水方式</h4><p><strong>非流水方式的持久HTTP</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>客户端只能在收到前一个响应后才能发出新的请求；</p></li><li class="lvl-2"><p>每一个引用对象花费一个RTT；</p></li></ul><p><strong>流水方式的持久HTTP</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>HTTP 1.1的默认模式；</p></li><li class="lvl-2"><p>客户端遇到一个引用对象就立即产生一个请求（不必等待前一个的响应）；</p></li><li class="lvl-2"><p>所有引用对象只花费一个RTT是可能的；</p></li></ul><h3 id="4-HTTP报文格式">4.HTTP报文格式</h3><h4 id="（1）HTTP请求报文">（1）HTTP请求报文</h4><p><img src="https://bu.dusays.com/2024/11/26/6745784b75db4.png" alt="5"></p><p>以上方请求报文为例，报文由普通的ASCII文本书写，可以直接阅读；该报文有5行，每一行由一个回车和换行符结束，最后一行再附加一个回车换行符。实际上一个请求报文可以有更多的行或者至少为一行。</p><p>HTTP请求报文的第一行叫做<strong>请求行（request line）</strong>，其后继的行叫做<strong>首部行（header line）</strong>；</p><p><strong>请求行</strong>有三个字段：方法字段、URL字段和HTTP版本字段；</p><p>方法字段可以取几种不同的值：GET（请求）、POST（提交）、HEAD（只请求头部）等；</p><p>下面分析<strong>首部行</strong>的具体内容：</p><ul class="lvl-0"><li class="lvl-2"><p>Host: www. someschool.edu 指明了对象所在的主机；</p></li><li class="lvl-2"><p>User-agent: Mozilla/4.0 用来指明用户代理，即向服务器发送请求的浏览器的类型；</p></li><li class="lvl-2"><p>Connection: close 该浏览器告诉服务器不要麻烦地使用持续连接，要求服务器发送完被请求的对象后就关闭连接；</p></li><li class="lvl-2"><p>Accept-language: fr 表示用户想得到该对象的法语版本（如果服务器有这样的对象的话），否则，服务器应当发送它的默认版本；</p></li></ul><p><strong>HTTP请求报文通用格式</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/67457857304ca.png" alt="6"></p><p>我们发现，通用格式在首部行（和附加的回车和换行）后有一个<strong>实体体（entity body）</strong> ，使用GET方法时实体体为空，而使用POST方法时才能使用该实体体；</p><p><strong>提交表单输入</strong></p><p>用户提交表单时，HTTP客户常常使用<strong>POST方法</strong>，例如当用户向搜索引擎提供搜索关键词时。使用POST报文时，用户仍可以向服务器请求一个Web页面，但Web页面的特定内容依赖于用户在表单字段中输入的内容。如果方法字段的值为POST时，则实体体中包含的就是用户在表单字段中的输入值；</p><p>实际上，HTML表单经常使用<strong>GET方法</strong>，并在（表单字段中）所请求的URL中包括输入的数据。例如一个表单使用GET方法，它有两个字段，分别填写的是“monkeys”和“bananas”，这样，该URL结果为www.somesite.com/animalsearch?monkeys&amp;banana。通过这样的URL，浏览器可以将表单数据作为查询参数附加在URL中，然后将整个URL发送给服务器进行处理。服务器可以解析URL中的查询参数，并据此执行相应的操作。再比如http://www. baidu.com/s?wd=xx+yy+zzz&amp;cl=3， 表示携带的参数为wd和cl，参数的值分别为xx+yy+zzz和3。</p><p>在URL的查询字符串中，有时候会出现只有参数名而没有参数值的情况。这种情况通常发生在一些特定的场景下，例如在某些API设计中或者特定的查询需求中。在这种情况下，参数名本身就是起到一种标识或者开关的作用，而不需要具体的参数值。</p><p><strong>方法类型</strong>：</p><p><strong>HTTP 1.0</strong>：GET、POST、HEAD</p><p><strong>HTTP 1.1</strong>：GET、POST、HEAD、PUT（将实体主体中的文件上载到URL字段规定的路径）、DELETE（删除URL字段规定的文件）</p><h4 id="（2）HTTP响应报文">（2）HTTP响应报文</h4><p><img src="https://bu.dusays.com/2024/11/26/67457864edf6e.png" alt="7"></p><p>该响应报文分为三个部分：一个初始<strong>状态行（status line）</strong>，6个<strong>首部行（header line）</strong>，然后是<strong>实体体（entity body）</strong>。</p><p><strong>实体体部分</strong>是报文的主要部分，即它包含了所请求对象本身。</p><p><strong>状态行</strong>有3个字段：协议版本字段、状态码和响应状态信息。</p><blockquote><p><strong>HTTP响应状态码</strong>：</p><ul class="lvl-1"><li class="lvl-2"><strong>200 OK</strong>：请求成功，请求对象包含在响应报文的后续部分</li><li class="lvl-2"><strong>301 Moved Permanently</strong>：请求的对象已经被永久转移了，新的URL在响应报文的Location：首部行中指定。客户端软件自动用新的URL去获取对象</li><li class="lvl-2"><strong>400 Bad Request</strong>：一个通用的差错代码，表示该请求不能被服务器解读</li><li class="lvl-2"><strong>404 Not Found</strong>：请求的文档在该服务上没有找到</li><li class="lvl-2"><strong>505 HTTP Version Not Supported</strong>：服务不支持请求报文使用的HTTP协议版本</li></ul></blockquote><h3 id="5-用户与服务器的交互：cookie">5.用户与服务器的交互：cookie</h3><p>HTTP服务器是无状态的，当Web站点希望能够识别用户，从而对用户的访问进行限制，或者是为了能够为用户提供个性化内容时，需要借助<strong>cookie</strong>。<strong>cookie</strong>在[RFC 6265]中定义，它允许站点对用户进行跟踪。</p><p><strong>cookie技术有4个组件</strong>：</p><p><strong>（1）HTTP响应报文中的Cookie首部行</strong>：当服务器向客户端发送HTTP响应时，可以通过在响应报文的头部添加Set-Cookie首部行来设置Cookie。这样客户端（通常是浏览器）会接收并存储这些Cookie，以便在后续的请求中发送回服务器。</p><p><strong>（2）HTTP请求报文中的Cookie首部行</strong>：当客户端向服务器发送HTTP请求时，可以在请求报文的头部添加Cookie首部行，将之前存储的Cookie信息发送给服务器。这样服务器可以根据这些Cookie来识别用户、保持会话状态等。</p><p><strong>（3）用户端系统中保留的Cookie文件</strong>：在用户端系统（通常是浏览器）中，会保存一个Cookie文件，其中包含了用户与各个网站之间的Cookie信息。浏览器会根据服务器发送的Set-Cookie首部行来管理这些Cookie，包括存储、发送和更新等操作。</p><p><strong>（4）Web站点的后端数据库</strong>：Web站点的后端数据库通常不直接存储Cookie信息，但服务器会根据接收到的Cookie信息来处理用户请求，可能会将一些与用户相关的数据存储在后端数据库中，但这些数据通常与Cookie本身并不直接相关。</p><p><strong>具体事例</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>Susan总是用同一个PC使用Internet Explore上网；</p></li><li class="lvl-2"><p>她第一次访问了一个使用了Cookie的电子商务网站；</p></li><li class="lvl-2"><p>当最初的HTTP请求到达服务器时，该Web站点产生一个唯一的ID，并以此作为索引在它的后端数据库中产生一个项；</p></li><li class="lvl-2"><p>服务器在HTTP响应中返回一个名为&quot;Set-Cookie&quot;的头部字段，其中包含了刚生成的唯一ID或其他相关信息；</p></li><li class="lvl-2"><p>浏览器收到响应后，会将这个Cookie保存在Susan的PC上；</p></li><li class="lvl-2"><p>随后，Susan在网站上浏览商品、添加商品到购物车、填写订单等操作；</p></li><li class="lvl-2"><p>这些操作通过HTTP请求发送到服务器，服务器通过Cookie中的唯一ID识别Susan，并根据数据库中存储的信息处理她的请求；</p></li><li class="lvl-2"><p>过Cookie，服务器能够跟踪Susan的会话状态，保持她的登录状态，管理购物车内容，并提供个性化体验；</p></li><li class="lvl-2"><p>Susan的持续交互使得服务器不断更新后端数据库中与她相关的信息，以确保她的会话状态和数据保持同步；</p></li></ul><p>Cookie在整个过程中起到关键作用，帮助服务器识别和管理Susan的会话状态，实现个性化服务和持续登录功能。</p><p>Cookies允许站点知道许多关于用户的信息，可能会导致一些<strong>隐私问题</strong>。</p><h3 id="6-Web缓存">6.Web缓存</h3><p><strong>Web缓存（Web cache）即下图的代理服务器（proxy server）。</strong></p><p><img src="https://bu.dusays.com/2024/11/26/674578735b573.png" alt="8"></p><blockquote><p><strong>注意</strong>：准确的来说，代理服务器可以包含Web缓存功能，但Web缓存不仅仅是代理服务器的一部分。两者不应该是等同的关系。</p></blockquote><p><strong>目标</strong>：不访问<strong>原始服务器</strong>，就满足客户的请求</p><ul class="lvl-0"><li class="lvl-2"><p>配置用户的浏览器，使得用户的所有HTTP请求首先指向Web缓存器；</p></li><li class="lvl-2"><p>浏览器创建一个到Web缓存器的TCP连接，并向其发送HTTP请求;</p></li><li class="lvl-2"><p>若请求对象在缓存中，缓存直接返回对象；</p></li><li class="lvl-2"><p>如对象不在缓存，缓存请求原始服务器，获得请求对象后，在本地存储空间存储一份副本，并向客户端的浏览器用HTTP响应报文发送该副本（通过现有的客户浏览器和Web缓存器之间的TCP连接）</p></li></ul><blockquote><p><strong>注意</strong>：<strong>Web缓存器既是服务器又是客户</strong>。通常缓存是由ISP安装(大学、公司、居民区ISP)。</p></blockquote><p><strong>Web缓存的优点</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>降低客户端的请求响应时间；</p></li><li class="lvl-2"><p>可以大大减少一个机构内部网络与Internent接入链路上的流量；</p></li><li class="lvl-2"><p>互联网大量采用了缓存：可以使较弱的ICP也能够有效提供内容；</p></li><li class="lvl-2"><p>相比于增加接入链路带宽，使用web缓存减少响应时间的方式更廉价；</p></li></ul><h3 id="7-条件GET方法">7.条件GET方法</h3><p>高速缓存减少响应时间的同时也引入了一个问题：存放在缓存器中的副本可能是陈旧的，即原对象可能已经被更新修改了。而HTTP协议有一种机制，允许缓存器证实它的对象是最新的，这种机制就是<strong>条件GET（conditional GET）方法</strong>。</p><p><strong>目标</strong>：如果缓存器中的对象拷贝是最新的，就不要发送对象</p><p><strong>缓存器</strong>: 在HTTP请求中指定缓存拷贝的日期<strong>If-modified-since: date</strong>（该条件GET报文告诉服务器，仅当自指定日期之后该对象被修改过，才发送该对象）。</p><p><strong>服务器</strong>: 如果对象没有修改，则响应报文没包含对象: <strong>HTTP/1.0 304 Not Modified</strong>（表示对象没有被修改，缓存器可以向请求的浏览器转发其缓存的该对象副本）。</p><h2 id="三、FTP">三、FTP</h2><p><strong>FTP（File Transfer Protocol，文件传输协议）</strong> 允许用户通过客户端和服务器之间的连接来传输文件，常见操作有上传、下载、创建、删除和重命名文件等。</p><p><strong>客户端-服务器模型</strong>：FTP遵循客户端-服务器模型。客户端是发送请求的一方，而服务器则响应这些请求并提供文件服务。</p><ul class="lvl-0"><li class="lvl-2"><p>客户端：发送请求的一方</p></li><li class="lvl-2"><p>服务器：响应这些请求并提供文件服务</p></li></ul><p>FTP定义在RFC 959，FTP服务器端口号为21；</p><p><strong>控制连接和数据连接</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>客户端通过21号端口与服务器建立控制连接；</p></li><li class="lvl-2"><p>客户端通过控制连接发送命令（如上传、下载文件）</p></li><li class="lvl-2"><p>根据命令，服务器通过20号端口与客户端建立连接（注意是服务器主动建立）</p></li><li class="lvl-2"><p>数据连接用于传输文件内容；</p></li><li class="lvl-2"><p>传输完成后，数据连接关闭，但控制连接保持打开；</p></li></ul><p>控制连接：<strong>带外（out of band）传送</strong>；带外传送是一种在控制连接中使用独立通道传输控制信息的机制，以确保控制信息和数据信息在传输过程中不会互相干扰。</p><p>FTP是一种<strong>有状态</strong>的协议，服务器会维护用户的状态信息：当前路径、用户账户及控制连接的对应。</p><p>FTP中的<strong>命令</strong>和<strong>响应</strong>都是以<strong>ASCII文本</strong>方式传输的。</p><h2 id="四、Email">四、Email</h2><h3 id="1-组成">1.组成</h3><p>因特网电子邮件系统有三个主要组成部分：<strong>用户代理（user agent）</strong>、<strong>邮件服务器（mail server）<strong>和</strong>简单邮件传输协议（Simple Mail Transfer Protocol，SMTP）</strong></p><p><strong>用户代理</strong>，又名“邮件阅读器”，允许用户阅读、回复、转发、保存和撰写报文。例如微软的Outlook和Apple Mail。</p><p><strong>邮件服务器</strong>，形成了电子邮件体系的核心，每个接收方在其中的某个邮件服务器上都有一个邮箱（mailbox），管理和维护着发给其的报文。（邮件从发送方的用户代理开始，传输到发送方的邮件服务器，再传输到接收方的邮件服务器，然后在这里被分发到接收方的邮箱中）</p><p><strong>简单邮件传输协议</strong>：邮件服务器之间借助SMTP发送email报文，它定义了邮件服务器之间交换电子邮件的规则和格式。</p><ul class="lvl-0"><li class="lvl-2"><p>SMTP使用TCP在客户端和服务器之间传送报文，端口号为25；</p></li><li class="lvl-2"><p>其发出的命令和响应得到的状态码与状态信息都是以ASCII码的形式；</p></li><li class="lvl-2"><p>SMTP要求报文（首部和主体）必须都是<strong>7位的ASCII编码</strong>；</p></li><li class="lvl-2"><p>传输的三个阶段：握手、传输报文、关闭；</p></li><li class="lvl-2"><p>SMTP使用持久连接，一个连接上可发送多个邮件，邮件发送完才会关闭；</p></li></ul><h3 id="2-邮件发送过程">2.邮件发送过程</h3><ul class="lvl-0"><li class="lvl-2"><p>邮件从发送方A的用户代理开始，传输到发送方A的邮件服务器，邮件放在报文队列中（不会立即发送，而是<strong>定时统一</strong>进行发送）</p></li><li class="lvl-2"><p>SMPT的客户端打开到接收方B邮件服务器的TCP连接，通过TCP连接发送邮件（可以发现这里TCP的连接是由发送方的机器发起的）</p></li><li class="lvl-2"><p>接收方B的邮件服务器将邮件放到B的邮箱中，B调用他的用户代理来阅读邮件;</p></li></ul><h3 id="3-SMTP与HTTP的对比">3.SMTP与HTTP的对比</h3><ul class="lvl-0"><li class="lvl-2"><p>二者都采用请求（命令）-响应模型，且都是以ASCII码的形式；</p></li><li class="lvl-2"><p>SMTP基本上是一个<strong>推协议（push protocol）</strong>，即发送邮件服务器把文件推向接收邮件服务器；HTTP主要是一个<strong>拉协议（pull protocol）</strong>，即用户从服务器中拉取信息</p></li><li class="lvl-2"><p>SMTP是<strong>面向文本</strong>的协议，用于传输电子邮件内容和元数据（描述数据的数据，如邮件的主题、大小、日期等）；HTTP是<strong>面向超文本</strong>的协议，用于传输网页内容、图片、视频和其他资源；</p></li><li class="lvl-2"><p>HTTP每个对象封装在各自的报文中，SMTP多个（邮件）对象可以包含在一个（邮件）报文中；</p></li><li class="lvl-2"><p>SMTP是一种<strong>无状态协议</strong>，每个邮件传输都是独立的，没有保持状态；而HTTP是一种<strong>有状态协议</strong>，通过使用cookie等机制来维护客户端和服务器之间的状态;（HTTP的传输是在一条TCP连接上进行的。HTTP初始设计是无状态的，通过cookie的作用可以把它变成有状态的协议）</p></li></ul><h3 id="4-邮件报文格式">4.邮件报文格式</h3><p><strong>SMTP</strong>：交换email报文的协议;<br><strong>RFC 5322</strong>：规范了邮件的头部和正文的格式，包括邮件地址的表示、日期时间格式等元数据字段的使用规范。</p><p>一个典型的电子邮件报文的格式：</p><p><img src="https://bu.dusays.com/2024/11/26/674578827d53b.png" alt="9"></p><p><strong>空白行</strong>上方是<strong>报文首部</strong>，下方是<strong>报文主体</strong>，两者由空白行隔开；首部行和报文主体只能是ASCII码字符；每个首部必须含有一个From：首部行和To：首部行，其余可选；首部行不同于SMTP命令，是邮件报文自身的一部分；</p><h3 id="5-邮件访问协议">5.邮件访问协议</h3><h4 id="（1）邮件访问协议与SMTP的区别">（1）邮件访问协议与SMTP的区别</h4><p><img src="https://bu.dusays.com/2024/11/26/6745788b9e84b.png" alt="10"></p><p>SMTP：传送到接收方的邮件服务器（推操作）邮件访问协议：从服务器访问邮件（拉操作）</p><p><strong>常见的邮件访问协议</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>第三版的邮局协议（Post Office Protocol——Version 3，POP 3）</strong></p></li><li class="lvl-2"><p><strong>因特网邮件访问协议（Internet Mail Access protocol，IMAP）</strong></p></li><li class="lvl-2"><p><strong>HTTP</strong></p></li></ul><h4 id="（2）POP3协议">（2）POP3协议</h4><p>POP3协议按照三个阶段进行工作：<strong>特许（authorization）</strong>、<strong>事务处理</strong>以及<strong>更新</strong>。</p><ul class="lvl-0"><li class="lvl-2"><p>特许阶段：用户代理发送（以明文形式）用户名和口令以鉴别用户；</p></li><li class="lvl-2"><p>事务处理阶段：用户代理取回报文；该阶段还可以进行：对报文做删除标记、取消报文删除标记以及获取邮件的统计信息；</p></li><li class="lvl-2"><p>更新阶段：出现在客户发送了quit命令之后，目的是结束该POP3会话；这时，该邮件服务器删除哪些被标记为删除的报文；</p></li></ul><p>在POP3处理过程中，用户代理发送一些命令，服务器对每个命令作答，回答有两种：<strong>+OK</strong>（有时还跟有服务器到客户端的数据），被服务器用来指示前面的命令是正常的；<strong>-ERR</strong>，被服务器用来指示前面的命令出现了某些差错；</p><p><strong>常见指令</strong>:</p><p><img src="https://bu.dusays.com/2024/11/26/674578972fdde.png" alt="11"></p><p>POP3协议支持两种主要模式“<strong>下载并删除模式</strong>”和“<strong>下载并保留模式</strong>”：前者用户通过POP3从邮件服务器下载邮件后，邮件会被标记为已删除，并在会话结束后从服务器上删除；后者用户通过POP3从服务器下载邮件后，邮件不会被立即删除，而是保留在服务器上，允许用户在多个设备上访问相同的邮件，或者在需要时保留邮件的备份。</p><p>POP3在会话中是<strong>无状态</strong>的，不支持远程目录维护，只能<strong>本地管理文件</strong>；</p><h4 id="（3）IMAP">（3）IMAP</h4><p><strong>IMAP服务器将每个报文与一个文件夹联系起来</strong>：当报文第一次到达服务器时，它与收件人的INBOX文件夹相关联。收件人则能够把邮件转移到一个新的、用户创建的文件夹中，阅读邮件、删除邮件等。</p><p>IMAP在会话过程中保留用户状态，是<strong>有状态</strong>的，能够<strong>远程管理文件夹</strong>；</p><h2 id="五、DNS">五、DNS</h2><h3 id="1-DNS提供的服务">1.DNS提供的服务</h3><p><strong>主机名（hostname）</strong>：主机的一种标识方法，如www.facebook.com；</p><p><strong>IP地址</strong>：由四个字节组成，并有着严格的层次结构。其中的每个自检都被句点分割，表示了0~255的十进制数字。</p><p><strong>DNS（Domain Name System，DNS）的服务</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>域名解析（主要任务）</strong>，即将人类能够理解的域名转换为计算机可理解的IP地址（通常由其他应用层协议使用，如HTTP，SMTP，FTP）。此外，将一个域名解析为对应的IP地址称为<strong>正向解析</strong>，将一个IP地址解析为对应的域名称为<strong>逆向解析</strong>，这两种服务DNS均可提供。</p></li><li class="lvl-2"><p><strong>负载均衡（Load Distribution）</strong>，即根据服务器的负载情况将用户请求分发到不同的服务器，以确保流量分布均衡；</p></li><li class="lvl-2"><p><strong>主机别名（host aliasing）</strong>，一些复杂的主机名有时会有一些便于记忆的别名，在这种情况下，其原本的复杂名字也被称为<strong>规范主机名（canonical hostname）</strong>。应用程序可以调用DNS来获取主机别名的规范主机名及主机的IP地址；</p></li><li class="lvl-2"><p><strong>邮件服务器别名（mail server aliasing）</strong>，邮件服务器别名到正规名字的转换；</p></li></ul><p><strong>DNS是</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>一个由分层的DNS服务器（DNS server）实现的分布式数据库；</p></li><li class="lvl-2"><p>一个使得主机能够查询分布式数据库的<strong>应用层协议</strong>；</p></li><li class="lvl-2"><p>运行在UDP之上端口为53的应用服务；</p></li></ul><h3 id="2-DNS层次结构">2.DNS层次结构</h3><p><strong>DNS域名结构</strong>：DNS采用层次树状结构的命名方法。Internet跟被划为几百个顶级域（top lever domains），每个（子）域下面可划分为若干子域（subdomains），树叶是主机。</p><p><strong>根域名服务器</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>共有13个根域名服务器，全球分布，这种分布式架构有助于提高DNS系统的稳定性；</p></li><li class="lvl-2"><p>根域名服务器存储了所有顶级域（TLD）服务器的地址信息（每一个根域名服务器并不存储全部顶级域服务器的地址信息，而是只存储一部分TLD服务器的地址信息）</p></li></ul><p><strong>顶级域（TLD）服务器</strong>：负责顶级域名（如com，org，net等）和所有国家级的顶级域名（如cn，uk，jp等）</p><p><strong>权威DNS服务器</strong>：组织机构的DNS服务器，提供组织机构服务器（如Web和mail）可访问的主机和IP之间的映射。</p><p>根域名服务器、顶级域（TLD）服务器、权威DNS服务器都属于DNS的层次结构中，但有一类重要的DNS服务器，<strong>本地DNS服务器（local DNS server）</strong>。一个本地DNS服务器并不属于该服务器的层次结构，每一个ISP都有一台本地DNS服务器（也叫默认名字服务器）。当一个主机发起DNS查询时，查询被送到其本地DNS服务器，起着代理的作用，将查询转发到层次结构中。</p><p><strong>域名（Domain Name）</strong>：从本域往上，直到树根，中间使用句点间隔不同级别。域的域名可用于表示一个域，主机的域名表示一个域上的一个主机。</p><p><strong>域名的管理</strong>：一个域管理其下的子域，例如.cn被划分为edu.cn，com.cn。创建一个新的域，必须征得它所属域的同意。</p><p><strong>域与物理网络无关</strong>：域的划分是逻辑的，而不是物理的。域名系统中的域名与物理网络之间并没有直接的关联。域名系统提供了一种抽象的命名机制，使得用户可以通过易记的域名访问互联网资源，而物理网络则负责实际的数据传输和通信。一个域的主机可以不再一个网络，一个网络的主机不一定在一个域。</p><h3 id="3-域名服务器">3.域名服务器</h3><p><strong>单个域名服务器的问题</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>单点故障</strong>：可靠性问题</p></li><li class="lvl-2"><p><strong>通信容量</strong>：扩展性问题</p></li><li class="lvl-2"><p><strong>远距离的集中式数据库</strong>：远距离时间延迟问题</p></li><li class="lvl-2"><p><strong>维护</strong>：集中数据库难以维护</p></li></ul><p><strong>区域（zone）</strong>：区域的划分由管理者自己决定，将DNS域名空间划分为互不相交的区域，每一个区域都是树的一部分。</p><p><strong>域名服务器</strong>：每一个区域都有一个域名服务器，维护着它所管辖区域的权威信息，域名服务器允许被放置在区域之外，以保障可靠性。</p><h3 id="4-DNS记录和报文">4.DNS记录和报文</h3><p>共同实现DNS分布式数据库的所有DNS服务器存储了<strong>资源记录（Resource Record，RR）</strong>，RR提供了主机名到IP地址的映射。</p><p>资源记录是一个包含了下列字段的四元组：（Name，Value，Type，TTL）</p><p><strong>TTL</strong>是该记录的生存时间，它决定了资源记录应当从缓存中删除的时间；</p><p><strong>Name和Value的值取决于Type</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/674578aa6a587.png" alt="12"></p><h3 id="5-域名解析过程">5.域名解析过程</h3><h4 id="（1）用户输入域名">（1）用户输入域名</h4><p>当用户在浏览器中输入一个域名（如www.example.com），浏览器会首先检查本地缓存（如浏览器缓存或操作系统的DNS缓存）中是否有该域名对应的IP地址。</p><h4 id="（2）本地缓存检查">（2）本地缓存检查</h4><p>如果在本地缓存中找到对应的IP地址，浏览器会直接使用该IP地址与目标服务器建立连接。如果未找到，浏览器会向操作系统的DNS解析器发送请求。</p><h4 id="（3）查询本地域名服务器">（3）查询本地域名服务器</h4><p>DNS解析器会首先查询用户所在网络的本地域名服务器（通常由ISP提供），以查看是否在其缓存中存在对应的IP地址。如果找到，返回结果；如果未找到，则继续向上查询。</p><h4 id="（4）递归查询和迭代查询">（4）递归查询和迭代查询</h4><p>DNS查询方式分为递归查询和迭代查询两种。</p><p><strong>递归查询</strong>：请求方只发起一次DNS查询，如果接收方查找不到对应的映射地址，则接收方将以请求者的身份发起新的DNS查询，递归地执行下去，直至遇到能够处理请求的接受方后，将域名映射结果依次返回给最初的请求方。</p><p><img src="https://bu.dusays.com/2024/11/26/674578b5382f0.png" alt="13"></p><p><strong>迭代查询</strong>：请求方发出DNS查询后，若接收方查找不到对应的映射地址，则接收方将指示请求方寻找其他接受方式获取查询结果，请求方则根据指示发送新的请求，如此反复，直到获取最终结果。</p><p><img src="https://bu.dusays.com/2024/11/26/674578bf9d5bc.png" alt="14"></p><p><strong>区别</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>递归是自己调用自己，每次把问题规模缩小；迭代是自己执行很多次，每次都更接近目标。</p></li><li class="lvl-2"><p>递归查询下，根域名服务器的压力较大。主机向本地域名服务器查询常使用递归查询，为了减少根域名服务器的压力，域名服务器之间的查询常使用迭代查询方式。</p></li></ul><p><strong>（5）根域名服务器查询</strong><br>本地域名服务器首先向根域名服务器发送查询请求。根域名服务器不保存具体的域名和IP地址的对应关系，但它知道顶级域名服务器（如 .com、.org）的地址，因此会返回顶级域名服务器的地址。（本地域名服务器与其他域名服务器之间通过迭代方式进行查询。）</p><p><strong>（6）顶级域名服务器（TLD DNS）查询</strong><br>本地域名服务器根据根域名服务器提供的地址，向相应的顶级域名服务器发送查询请求。TLD DNS服务器会返回该域名对应的权威DNS服务器地址。</p><p><strong>（7）权威DNS服务器查询</strong><br>最后，本地域名服务器向权威DNS服务器查询，该服务器保存着具体的域名和IP地址的对应关系。权威DNS服务器返回正确的IP地址。</p><p><strong>（8）返回结果</strong><br>本地域名服务器将IP地址返回给DNS解析器，DNS解析器将结果缓存并返回给浏览器。</p><p><strong>（9）建立连接</strong><br>浏览器使用该IP地址与目标服务器建立连接，并开始加载网站内容。</p><h3 id="6-DNS缓存">6.DNS缓存</h3><p>一旦名字服务器学到了一个映射，就会将该映射缓存起来，以备下次查询。经过了TTL时间后（默认是两天），就会把缓存的映射删除。</p><blockquote><p><strong>注</strong>：缓存是为了提高性能与效率，删除则是为了确保数据的准确和一致性。</p></blockquote><p>根服务器的IP地址通常被缓存或预配置在本地服务器（如本地域名服务器或DNS解析器）中，这意味着本地域名服务器不需要每次都去查找根服务器的地址，而是可以直接访问这些服务器来开始域名解析过程。</p><h2 id="六、P2P应用">六、P2P应用</h2><p>P2P是建立在客户/服务器模型的基础上的，它把单个服务器的负担分摊给了若干个客户节点。</p><h3 id="1-文件共享">1.文件共享</h3><h4 id="（1）文件分割">（1）文件分割</h4><p>在P2P文件共享系统中，大文件通常会被分割成多个小块。这些小块可以独立于彼此进行传输，增加了文件传输的并发性和效率。</p><h4 id="（2）文件索引和查找">（2）文件索引和查找</h4><p>P2P网络中没有中央服务器来存储文件的完整列表，因此节点需要通过查询其他节点来找到文件的来源。文件的索引信息通常存储在DHT（分布式哈希表）中，或者通过洪泛机制传播。</p><blockquote><p><strong>洪泛（Flooding）</strong>：是一种网络通信中的信息传播策略，尤其在分布式网络中常见。泛洪的基本原理是将数据包从一个节点发送到所有相邻节点，这些节点在接收到数据包后，再次将其转发给它们的所有相邻节点。这个过程会一直持续，直到数据包覆盖整个网络或达到某种停止条件。</p></blockquote><h4 id="（3）块传输">（3）块传输</h4><p>一旦找到某个文件的提供者，下载者可以从多个提供者处并行下载文件的不同块。这不仅加快了下载速度，也减少了对单一节点的依赖，增加了文件共享的可靠性。</p><h4 id="（4）文件完整性验证">（4）文件完整性验证</h4><p>文件下载完成后，每个块的哈希值通常会被校验，以确保文件传输过程中没有出现错误或被恶意篡改。完整性验证在下载过程中也可能实时进行，以防止无效或损坏的块传输。</p><h4 id="（5）上传和下载平衡">（5）上传和下载平衡</h4><p>P2P文件共享网络通常鼓励节点上传与下载的平衡。某些系统通过信用机制或速率限制，来鼓励节点积极分享文件，否则可能会限制其下载速度。</p><h3 id="2-C-S模型与P2P模型两种模型下文件分发速度的比较">2.C/S模型与P2P模型两种模型下文件分发速度的比较</h3><p><strong>C/S模型</strong></p><p>发送一个拷贝文件用时：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.927ex;" xmlns="http://www.w3.org/2000/svg" width="3.76ex" height="4.994ex" role="img" focusable="false" viewBox="0 -1356 1662.1 2207.6" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(456.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><rect width="1422.1" height="60" x="120" y="220"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mfrac><mi>F</mi><msub><mi>U</mi><mi>S</mi></msub></mfrac></math></mjx-assistive-mml></mjx-container><p>下载带宽最小的客户端的下载时间：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.909ex;" xmlns="http://www.w3.org/2000/svg" width="5.276ex" height="4.977ex" role="img" focusable="false" viewBox="0 -1356 2332.1 2199.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(791.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><rect width="2092.1" height="60" x="120" y="220"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mfrac><mi>F</mi><msub><mi>d</mi><mrow data-mjx-texclass="ORD"><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mfrac></math></mjx-assistive-mml></mjx-container><p>则，将一个F大小的文件分发给N个客户端耗时：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -2.148ex;" xmlns="http://www.w3.org/2000/svg" width="27.088ex" height="5.428ex" role="img" focusable="false" viewBox="0 -1449.5 11973 2399" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(861,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(760,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mi" transform="translate(1260,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(2535.8,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3591.6,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width: 3;"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)" style="stroke-width: 3;"/><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)" style="stroke-width: 3;"/></g><g data-mml-node="mrow" transform="translate(5619.3,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(750,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g></g><g data-mml-node="msub" transform="translate(427.5,-686)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><rect width="1837" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(2827,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(3271.7,0)"><g data-mml-node="mi" transform="translate(791.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><rect width="2092.1" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(5603.7,0) translate(0 -0.5)"><path data-c="7D" d="M131 1414T131 1429T133 1447T148 1450H153H167L182 1444Q276 1404 336 1343T415 1207Q421 1184 421 1154T423 851L424 531L426 517Q434 462 460 415T518 339T571 296T608 274Q615 270 616 267T618 251Q618 241 618 238T615 232T608 227Q542 194 491 132T426 -15L424 -29L423 -350Q422 -622 422 -652T415 -706Q397 -780 337 -841T182 -943L167 -949H153Q137 -949 134 -946T131 -928Q131 -914 132 -911T144 -904Q146 -903 148 -902Q299 -820 323 -680Q324 -663 325 -349T327 -19Q355 145 541 241L561 250L541 260Q356 355 327 520Q326 537 325 850T323 1181Q315 1227 293 1267T244 1332T193 1374T151 1401T132 1413Q131 1414 131 1429Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mi>D</mi><mrow data-mjx-texclass="ORD"><mi>C</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>S</mi></mrow></msub><mo>≥</mo><mo data-mjx-texclass="OP" movablelimits="true">max</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">{</mo><mfrac><mrow><mi>N</mi><mi>F</mi></mrow><msub><mi>U</mi><mi>S</mi></msub></mfrac><mo>,</mo><mfrac><mi>F</mi><msub><mi>d</mi><mrow data-mjx-texclass="ORD"><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mfrac><mo data-mjx-texclass="CLOSE">}</mo></mrow></math></mjx-assistive-mml></mjx-container><p>可以看到大括号里的第一项随着N线性增长。</p><p><strong>P2P模型</strong></p><p>服务器至少需要上载一份完整地拷贝文件发送一个拷贝的时间：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.927ex;" xmlns="http://www.w3.org/2000/svg" width="3.76ex" height="4.994ex" role="img" focusable="false" viewBox="0 -1356 1662.1 2207.6" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(456.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><rect width="1422.1" height="60" x="120" y="220"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mfrac><mi>F</mi><msub><mi>U</mi><mi>S</mi></msub></mfrac></math></mjx-assistive-mml></mjx-container><p>每个客户端必修下载一个拷贝下载带宽最小的客户端的下载时间：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.909ex;" xmlns="http://www.w3.org/2000/svg" width="5.276ex" height="4.977ex" role="img" focusable="false" viewBox="0 -1356 2332.1 2199.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(791.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><rect width="2092.1" height="60" x="120" y="220"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mfrac><mi>F</mi><msub><mi>d</mi><mrow data-mjx-texclass="ORD"><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mfrac></math></mjx-assistive-mml></mjx-container><p>因为除了服务器外，其他所有的peer节点也都可以上载，所以最大上载带宽是：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -1.018ex;" xmlns="http://www.w3.org/2000/svg" width="11.46ex" height="3.167ex" role="img" focusable="false" viewBox="0 -950 5065.1 1400" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1444.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2444.5,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(4055.2,0)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mi>U</mi><mi>S</mi></msub><mo>+</mo><mo data-mjx-texclass="OP">∑</mo><msub><mi>U</mi><mi>i</mi></msub></math></mjx-assistive-mml></mjx-container><p>将一个F大小的文件分发给N个客户端耗时：</p><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="38.259ex" height="5.451ex" role="img" focusable="false" viewBox="0 -1449.5 16910.7 2409.5" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(751,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1251,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(2604.4,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(3660.2,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width: 3;"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)" style="stroke-width: 3;"/><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)" style="stroke-width: 3;"/></g><g data-mml-node="mrow" transform="translate(5687.8,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(750,0)"><g data-mml-node="mi" transform="translate(456.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><rect width="1422.1" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(2412.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(2856.8,0)"><g data-mml-node="mi" transform="translate(791.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g></g><rect width="2092.1" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(5188.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(5633.5,0)"><g data-mml-node="mrow" transform="translate(1601.2,676)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1777.8,0)"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(3000.4,0)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(716,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4010.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g><rect width="4599.4" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(10472.8,0) translate(0 -0.5)"><path data-c="7D" d="M131 1414T131 1429T133 1447T148 1450H153H167L182 1444Q276 1404 336 1343T415 1207Q421 1184 421 1154T423 851L424 531L426 517Q434 462 460 415T518 339T571 296T608 274Q615 270 616 267T618 251Q618 241 618 238T615 232T608 227Q542 194 491 132T426 -15L424 -29L423 -350Q422 -622 422 -652T415 -706Q397 -780 337 -841T182 -943L167 -949H153Q137 -949 134 -946T131 -928Q131 -914 132 -911T144 -904Q146 -903 148 -902Q299 -820 323 -680Q324 -663 325 -349T327 -19Q355 145 541 241L561 250L541 260Q356 355 327 520Q326 537 325 850T323 1181Q315 1227 293 1267T244 1332T193 1374T151 1401T132 1413Q131 1414 131 1429Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mi>D</mi><mrow data-mjx-texclass="ORD"><mi>P</mi><mn>2</mn><mi>P</mi></mrow></msub><mo>≥</mo><mo data-mjx-texclass="OP" movablelimits="true">max</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">{</mo><mfrac><mi>F</mi><msub><mi>U</mi><mi>S</mi></msub></mfrac><mo>,</mo><mfrac><mi>F</mi><msub><mi>d</mi><mrow data-mjx-texclass="ORD"><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mfrac><mo>,</mo><mfrac><mrow><mi>N</mi><mi>F</mi></mrow><mrow><mo stretchy="false">(</mo><msub><mi>U</mi><mi>S</mi></msub><mo data-mjx-texclass="OP">∑</mo><msub><mi>U</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo data-mjx-texclass="CLOSE">}</mo></mrow></math></mjx-assistive-mml></mjx-container><p>可以看到分子NF随着N线性变化,但是每个peer也带了服务能力，随着peer节点的增多，分母也在变大。</p><p><strong>分发文件耗时D随N的变化曲线</strong>：</p><p><img src="https://bu.dusays.com/2024/11/26/674578d0d4659.png" alt="15"></p><h3 id="3-C-S模型与P2P模型的区别">3.C/S模型与P2P模型的区别</h3><table><thead><tr><th style="text-align:center">网络模型</th><th style="text-align:center">C/S模型</th><th style="text-align:center">P2P模型</th></tr></thead><tbody><tr><td style="text-align:center"><strong>基本概念</strong></td><td style="text-align:center">存在特定的服务器以及与服务器相连的客户端</td><td style="text-align:center">不区分客户端和服务器，每个节点既可充当客户端又可充当服务器</td></tr><tr><td style="text-align:center"><strong>网络类型</strong></td><td style="text-align:center">集中式网络</td><td style="text-align:center">分散式网络</td></tr><tr><td style="text-align:center"><strong>可靠性</strong></td><td style="text-align:center">客户端依赖于服务器，服务器故障将影响到所有客户端的功能</td><td style="text-align:center">存在多个提供服务的完整节点，一部分节点失效后剩余节点仍可形成完整网络，更可靠</td></tr><tr><td style="text-align:center"><strong>服务访问时间</strong></td><td style="text-align:center">多个客户端从一个服务器请求服务，所以服务访问时间长</td><td style="text-align:center">服务提供节点分布在网络中，所以请求节点不需要等待较长的时间</td></tr><tr><td style="text-align:center"><strong>费用</strong></td><td style="text-align:center">实施成本很高</td><td style="text-align:center">不需要大量的硬件来建立网络</td></tr><tr><td style="text-align:center"><strong>安全性</strong></td><td style="text-align:center">相对来说更安全</td><td style="text-align:center">相对来说不稳定</td></tr><tr><td style="text-align:center"><strong>数据存储</strong></td><td style="text-align:center">数据存储在一个服务器中</td><td style="text-align:center">每个节点保留自己的数据</td></tr><tr><td style="text-align:center"><strong>可扩展性</strong></td><td style="text-align:center">服务器能支持的客户端数量有限，扩展性不佳</td><td style="text-align:center">无传统服务器连接带宽的限制，可支持较多的客户端连接，扩展性较好</td></tr><tr><td style="text-align:center"><strong>应用场景</strong></td><td style="text-align:center">万维网、文件传输FTP、电子邮件等</td><td style="text-align:center">P2P文件共享、即时通信、加密货币等</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</title>
      <link href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/"/>
      <url>/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥计算机网络 自顶向下方法 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网">《计算机网络 自顶向下方法》笔记：第一章 计算机网络和因特网</a></li><li><a href="/2024/09/22/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%BA%94%E7%94%A8%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第二章 应用层">《计算机网络 自顶向下方法》笔记：第二章 应用层</a></li><li><a href="/2024/09/26/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/" title="《计算机网络 自顶向下方法》笔记：第三章 传输层">《计算机网络 自顶向下方法》笔记：第三章 传输层</a></li><li><a href="/2024/10/13/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面">《计算机网络 自顶向下方法》笔记：第四章 网络层：数据平面</a></li><li><a href="/2024/10/24/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2/" title="《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面">《计算机网络 自顶向下方法》笔记：第五章 网络层：控制平面</a></li><li><a href="/2024/10/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91/" title="《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网">《计算机网络 自顶向下方法》笔记：第六章 链路层和局域网</a></li></ol></blockquote><h2 id="一、什么是因特网">一、什么是因特网</h2><p>两种回答方式：</p><ul class="lvl-0"><li class="lvl-2"><p>其一，描述因特网的具体构成，即构成因特网的基本硬件和软件组件；</p></li><li class="lvl-2"><p>其二，根据为分布式应用提供服务的联网基础设施来描述因特网。</p></li></ul><h3 id="1-从具体构成的角度描述其组成">1.从具体构成的角度描述其组成</h3><p>网络由节点和边组成，而计算机网络则是联网的计算机所构成的系统。</p><h4 id="（1）计算机网络的结点：">（1）计算机网络的结点：</h4><p>主机结点：<strong>主机</strong>（<strong>host，也叫做端系统（end system）</strong>，一些能够联网的设备）及其上运行的应用程序。是数据的源，也是数据的目标。</p><p>数据交换节点：<strong>路由器（router，工作在网络层）</strong>， <strong>交换机（switch，工作在链路层）</strong> 等网络交换设备。既不是数据的源也不是数据的目标，是数据的中转节点。</p><h4 id="（2）计算机网络的边，即通信链路（communication-link，将节点连接在一起）：">（2）计算机网络的边，即通信链路（communication link，将节点连接在一起）：</h4><p>接入网链路：主机连到互联网的链路。（即连接主机结点和数据交换节点）</p><p>主干链路：路由器间的链路。（即连接数据交换节点和数据交换节点）</p><blockquote><p><strong>注</strong>：链路的<strong>传输速率（transmission rate）</strong> 以比特/秒（bit/s，或<strong>bps</strong>）度量。</p></blockquote><h4 id="（3）协议（protocol，第三个组成部分，支撑互联网工作的一些标准）：">（3）协议（protocol，第三个组成部分，支撑互联网工作的一些标准）：</h4><p>协议控制发送、接受消息，如：TCP、IP、HTTP、FTP、PPP</p><p><strong>协议</strong>定义了在两个或多个通信实体之间交换的报文的<strong>格式</strong>和顺序，以及报文发送和接收一条报文或其他事件所采取的<strong>动作</strong>。（即规范了报文的<strong>语法、语义、时序、动作</strong>）</p><h3 id="2-从服务的角度描述其组成">2.从服务的角度描述其组成</h3><p>（1）使用通信设施进行通信的<strong>分布式应用</strong>：Web、email、分布式游戏、电子商务等</p><p>（2）为分布式应用提供通讯服务的<strong>基础设施</strong>：将发送和接收数据的apps与互联网连接起来，为app应用提供服务选择。服务又分为两种：</p><ul class="lvl-0"><li class="lvl-2"><p>面向连接的可靠服务，如TCP（传输控制协议）</p></li><li class="lvl-2"><p>无连接的不可靠服务，如UDP（用户数据报协议）</p></li></ul><h3 id="3-网络的层次结构：网络边缘、网络核心、接入网">3.网络的层次结构：网络边缘、网络核心、接入网</h3><ul class="lvl-0"><li class="lvl-2"><p>网络边缘：与用户直接相连的部分，包括终端设备和用户所在的局域网</p></li><li class="lvl-2"><p>网络核心：是网络中的主干部分，它由多个路由器和交换机组成，用于转发和路由数据包。将边缘结点连接在一起，使任意两个端系统能够通信</p></li><li class="lvl-2"><p>接入网：接入网是连接网络边缘和网络核心的部分，它提供了用户与网络核心之间的连接。</p></li></ul><h2 id="二、网络边缘">二、网络边缘</h2><h3 id="1-计算机网络架构模式">1.计算机网络架构模式</h3><p><strong>客户端-服务器（Client-Server）模式</strong>： 客户端发送请求给服务器，并等待服务器响应来获取所需的服务或资源。</p><p><strong>特点</strong>： 中心化，可扩展性较差</p><p><strong>P2P（Peer-to-Peer）模式</strong>： 是一种分布式计算和通信模式，节点在对等的基础上进行直接交互，而无需依赖中央服务器。每个节点既可以作为客户端，也可以作为服务器，可以提供资源和请求资源。</p><p><strong>特点</strong>： 去中心化，可扩展性强，高容错</p><h3 id="2-基础设施为通讯提供的服务">2.基础设施为通讯提供的服务</h3><p><strong>采用网络设施的面向连接服务</strong>： TCP服务（传输控制协议，Transmission Control Protocol）</p><p><strong>特点</strong>： 握手（两个通信主机之间为连接建立状态），可靠的，保证顺序的（确认和重传），流量控制（协调发送方的发送速度和接收方的接受速度，使两者能够有序地进行），拥塞控制（网络拥塞时，发送方降低）</p><p><strong>采用基础设施的无连接服务</strong>： UDP服务（用户数据报协议，User Datagram Protocol）</p><p><strong>特点</strong>： 无连接，不可靠数据传输，无流量控制，无拥塞控制</p><h2 id="三、网络核心">三、网络核心</h2><p>网络核心实现数据交换作用的两种方式：<strong>电路交换（circuit switching）和分组交换（packet switching）</strong></p><h3 id="1-电路交换">1.电路交换</h3><p>端到端的资源被分配给从源端到目标端的呼叫。</p><p><strong>特点</strong>：资源独享，保证性能（每个呼叫一旦建立就能够保证性能，因为连接是专用的，数据传输不会受到网络拥塞或其他通信干扰的影响），要求建立呼叫连接，如果呼叫没有数据发送，被分配的资源就会被浪费。</p><h3 id="2-电路交换三种常见的多路复用技术（将网络资源如带宽分片）：">2.电路交换三种常见的多路复用技术（将网络资源如带宽分片）：</h3><p><strong>频分复用（Frequency Division Multiplexing，FDM）</strong></p><p>频分复用是一种将不同信号或数据流分配到不同频率带宽上的技术。</p><p><strong>时分复用（Time Division Multiplexing，TDM）</strong></p><p>时分复用是一种将不同信号或数据流按照时间片分配的技术。</p><p><strong>波分复用（Wavelength Division Multiplexing，WDM）</strong></p><p>波分复用是一种将不同信号或数据流分配到不同光波长上的技术。</p><p><img src="https://bu.dusays.com/2024/11/26/6745768c7e84b.png" alt="1"></p><h3 id="3-电路交换不适合计算机之间通信的原因">3.电路交换不适合计算机之间通信的原因</h3><ul class="lvl-0"><li class="lvl-2"><p>连接建立时间长</p></li><li class="lvl-2"><p>计算机之间的通信有突发性，如果使用线路交换，则浪费的资源较多（因为连接都是专用的，即使没有传递数据，其占据的资源也不能被别的呼叫所使用）</p></li><li class="lvl-2"><p>可靠性不高</p></li></ul><h3 id="4-分组交换">4.分组交换</h3><h4 id="（1）以分组（packet）为单位的存储-转发方式">（1）以分组（packet）为单位的存储-转发方式</h4><ul class="lvl-0"><li class="lvl-2"><p>网络带宽资源不再分为一个个片，传输时使用全部带宽；</p></li><li class="lvl-2"><p>主机直接传输的数据被分为一个个分组；</p></li></ul><h4 id="（2）资源共享，按需使用">（2）资源共享，按需使用</h4><p>分组每次只移动一<strong>跳（hop）</strong>；在转发之前，节点必须确保接收到了单个完整的分组，以保证数据的正确传输，因此延时比电路交换要大；存在排队延时；</p><h4 id="（3）分组交换的排队延迟和丢失">（3）分组交换的排队延迟和丢失</h4><p>如果数据到达链路的速率&gt;链路的输出速率，可能导致：</p><ul class="lvl-0"><li class="lvl-2"><p>分组将会排队，等待传输；</p></li><li class="lvl-2"><p>如果路由器的缓存用完，分组将会被抛弃；</p></li></ul><h3 id="5-网络核心的关键功能">5.网络核心的关键功能</h3><ul class="lvl-0"><li class="lvl-2"><p><strong>转发</strong>：将分组从路由器的输入链路转移到输出链路（局部）</p></li><li class="lvl-2"><p><strong>路由</strong>：决定分组采用的源到目标的路径（全局）</p></li></ul><h3 id="6-分组交换的统计多路复用">6.分组交换的统计多路复用</h3><p>分组交换采用的是时分复用，但是没有固定的模式，我们称之为<strong>统计多路复用</strong>，它是一种特殊的时分复用。</p><h3 id="7-分组交换VS-电路交换">7.分组交换VS.电路交换</h3><p>同样的网络资源，分组交换允许更多用户使用网络（因为计算机之间的通信有突发性，其只有一小部分时间是活跃的而分组交换有资源共享、简单、不必建立呼叫的特点，更适合应对突发式数据传输）</p><p>分组交换过度使用会造成网络拥塞：分组延时和丢失（当流量强度=1时，排队延迟无限大），可靠的数据传输需要协议来约束（拥塞控制）</p><h3 id="8-分组交换的存储-转发">8.分组交换的存储-转发</h3><p><strong>分组（packet）</strong> 的存储转发按照有无网络层的连接分为以下两种：</p><h4 id="（1）数据报网络（Datagram-Network）">（1）数据报网络（Datagram Network）</h4><ul class="lvl-0"><li class="lvl-2"><p>数据被划分为较小的数据包（称为数据报或分组）进行传输。</p></li><li class="lvl-2"><p>在通信前无须建立连接，有数据就传输。</p></li><li class="lvl-2"><p>每个数据报都独立地传输，它包含了目标地址和其他必要的控制信息，使其能够独立地在网络中寻找最佳路径到达目标节点。</p></li><li class="lvl-2"><p>在数据报网络中，每个数据报都可以独立地选择不同的路径进行传输，因此数据报网络具有较好的灵活性和容错性。</p></li></ul><h4 id="（2）虚电路网络（Virtual-Circuit-Network）">（2）虚电路网络（Virtual Circuit Network）</h4><ul class="lvl-0"><li class="lvl-2"><p>虚电路网络是一种面向连接的网络模型，其中在通信之前需要建立一个虚拟的通信路径（称为虚电路）。</p></li><li class="lvl-2"><p>一旦建立了虚电路，后续的数据传输将沿着该虚电路进行，而不需要再次确定路径。</p></li><li class="lvl-2"><p>虚电路网络通常具有较低的延迟和较高的传输效率，适用于需要保证通信质量和资源分配的应用。</p></li></ul><p><img src="https://bu.dusays.com/2024/11/26/674576b318b68.png" alt="2"></p><p>虚电路靠信令建立，这里的连接方式可以理解为H0对应B2，所以A传到B，传输值为2，对应B表由A传来2 然后到C。</p><h3 id="9-网络分类">9.网络分类</h3><p><img src="https://bu.dusays.com/2024/11/26/674576cc495d9.png" alt="3"></p><h2 id="四、接入网和物理媒体">四、接入网和物理媒体</h2><p><strong>接入网</strong>：数字用户线路（Digital Subscriber Line，DSL）、光纤接入网（Fiber to the Home，FTTH）、无线接入网</p><p><strong>物理媒体</strong>：导引型媒体（Guided Media）（同轴电缆，光纤）、非导引型媒体（Unguided Media）（无线局域网（Wi-Fi）、蓝牙、卫星通信）</p><h2 id="五、Internet结构和ISP">五、Internet结构和ISP</h2><p><strong>ISP（Internet Service Provider）</strong>：因特网服务提供者（提供商）</p><p><strong>互联网络结构</strong>：网络的网络，松散的层次模型</p><ul class="lvl-0"><li class="lvl-2"><p>第一层ISP（作为中心）：国家/国际覆盖，速率极高，直接与其他第一层ISP相连，与大量的第二层ISP和其他客户网络相连</p></li><li class="lvl-2"><p>第二层ISP：更小些的（通常是局域型的）ISP，与一个或多个第一层ISP相连，也可能与其他第二层ISP相连</p></li><li class="lvl-2"><p>第三层ISP与其他本地ISP：接入网（与端系统最近，端系统通过接入ISP连接到互联网）</p></li></ul><blockquote><p><strong>网络和互联网的区别</strong>：</p><p>计算机网络（简称网络）把许多计算机连接在一起，而互联网把许多网络连接在一起，是网络的网络。</p></blockquote><h2 id="六、分组延时、丢失和吞吐量">六、分组延时、丢失和吞吐量</h2><h3 id="1-四种分组延时">1.四种分组延时</h3><p><strong>（1）节点处理延时</strong>：检查bit级差错；检查分组首部和决定将分组导向何处；</p><p><strong>（2）排队延时</strong>：在输出链路上等待传输的时间，依赖于路由器的拥塞程度；</p><p>R（链路带宽），L（分组长度），a（分组到达队列的平均速率）</p><p><strong>流量强度=La/R</strong>：</p><ul class="lvl-0"><li class="lvl-2"><p>La/R~0：平均排队延时很小</p></li><li class="lvl-2"><p>La/R-&gt;1：排队延时很大</p></li><li class="lvl-2"><p>La/R&gt;1：比特到达队列的速率超过了从该队列输出的速率，平均排队延时趋向于无穷大</p></li></ul><blockquote><p><strong>注</strong>：La/R=1时，排队延时也是无限大。</p></blockquote><p><strong>（3）传输延时</strong>：传输延迟是指发送方将数据全部推向链路所花的时间，它取决于数据的大小和传输速率；传输延迟 = 数据大小/传输速率；</p><p><strong>（4）传播延时</strong>：传播延迟是指信号在传输介质中传播所需的时间，它取决于信号传播的距离和传播介质的特性，如光纤、电缆或无线信号的传播速度；传播延迟 = 传输距离/传播速度；</p><p><strong>节点延时 = 处理延时 + 排队延时 + 传输延时 + 传播延时</strong></p><h3 id="2-分组丢失">2.分组丢失</h3><p>分组到达链路的速率超过了链路输出的能力，分组就会在可用的缓冲区处排队等待，如果没有可用的缓冲区，则该分组会被丢弃（分组丢失，即丢包），丢失的分组可能会被前一个节点重传，可能会被源端系统重传，也可能根本不重传。</p><h3 id="3-吞吐量">3.吞吐量</h3><p><strong>吞吐量（throughput）</strong>：单位时间内通过某个网络（或信道、接口）的实际数据量（数据量/时间）</p><p><strong>瞬间吞吐量（instantaneous throughput）</strong>：在一个时间点的速率</p><p><strong>平均吞吐量（average throughput）</strong>：在一个长时间内的平均值</p><p><strong>瓶颈链路（bottleneck link）</strong>：端到端路径上，限制端到端吞吐的链路（总吞吐量由吞吐量最小的那一段决定）</p><h2 id="七、协议层次和服务模型">七、协议层次和服务模型</h2><h3 id="1-协议层次">1.协议层次</h3><ul class="lvl-0"><li class="lvl-2"><p>协议要通过访问下层的服务才能实现，协议的目的是为了向上层提供更好的服务，协议是平行的。</p></li><li class="lvl-2"><p>每一层向上层提供的服务包括了所有上层提供服务的总和以及和对等层的实体交互过程中形成的一些新的服务特性。（即每一层不仅仅是对服务的单纯分解，在传递分解的过程中还会加入和同一层的实体交互后获得的新特性）</p></li></ul><h3 id="2-服务和服务访问点">2.服务和服务访问点</h3><p><strong>服务（Service）</strong>：底层实体向上层实体提供他们之间的通信的能力（服务是垂直的）</p><ul class="lvl-0"><li class="lvl-2"><p>服务用户（Service user）；</p></li><li class="lvl-2"><p>服务提供者（Service provider）；</p></li></ul><p><strong>原语（primitive）</strong>：上层使用下层服务的形式，高层使用低层提供的服务，以及低层向高层提供服务都是通过服务访问原语来进行交互的——<strong>提供服务的形式</strong></p><p><strong>服务访问点SAP（Services Access Point）</strong>：上层使用下层提供的服务通过层间的接口——<strong>提供服务的地点</strong></p><h3 id="3-服务的类型">3.服务的类型</h3><p><strong>面向连接的服务（Connection-oriented service）</strong> 是一种网络通信模式，其中在进行数据传输之前，通信的两个端点需要先建立一个持久的连接。面向连接的服务提供了可靠的数据传输，确保数据的有序性和完整性。如TCP（Transmission Control Protocol，传输控制协议）</p><p><strong>无连接的服务（Connectionless service）</strong> 是一种网络通信模式，其中通信的两个端点在进行数据传输之前不需要建立持久的连接。无连接的服务通常用于对实时性要求较高的应用程序。如UDP（User Datagram Protocol，用户数据报协议），IP（Internet Protocol，互联网协议）</p><h3 id="4-服务与协议的区别和联系">4.服务与协议的区别和联系</h3><p><strong>服务与协议的区别</strong></p><ul class="lvl-0"><li class="lvl-2"><p><strong>服务</strong>：低层实体向上层实体提供他们之间的通信的能力，通过原语来操作，是垂直的。</p></li><li class="lvl-2"><p><strong>协议</strong>：对等层实体之间在相互通信的过程中，需要遵守的规则的集合，是水平的。</p></li></ul><p><strong>服务与协议的联系</strong></p><ul class="lvl-0"><li class="lvl-2"><p>本层协议的实现要靠下层提供的服务来实现；</p></li><li class="lvl-2"><p>本层实体通过协议为上层提供更高级的服务；</p></li></ul><h3 id="5-Internet协议栈">5.Internet协议栈</h3><p><strong>应用层</strong>：网络应用</p><ul class="lvl-0"><li class="lvl-2"><p>网络应用程序及他们的应用层协议存留的地方；</p></li><li class="lvl-2"><p>HTTP、DNS、FTP、SMTP</p></li><li class="lvl-2"><p>数据单元：报文（message）</p></li></ul><p><strong>传输层</strong>：主机之间的数据传输</p><ul class="lvl-0"><li class="lvl-2"><p>在网络层提供的端到端通信基础上，细分为进程到进程（一个主机同时在运行多个进程）</p></li><li class="lvl-2"><p>将不可靠的通信变成可靠的通信；</p></li><li class="lvl-2"><p>TCP、UDP</p></li><li class="lvl-2"><p>数据单元：报文段（segment）</p></li></ul><p><strong>网络层</strong>：为数据报从源到目的选择路由</p><ul class="lvl-0"><li class="lvl-2"><p>端到端通信</p></li><li class="lvl-2"><p>路由和转发</p></li><li class="lvl-2"><p>IP、路由协议</p></li><li class="lvl-2"><p>数据单元：数据报（datagram）</p></li></ul><p><strong>链路层</strong>：相邻网络节点间的数据传输，</p><ul class="lvl-0"><li class="lvl-2"><p>点到点通信</p></li><li class="lvl-2"><p>数据单元：帧（frame）</p></li></ul><p><strong>物理层</strong>：将帧中的一个个比特从一个节点移动到下一个节点</p><ul class="lvl-0"><li class="lvl-2"><p>数据单元：比特（bit）</p></li></ul><h3 id="6-ISO-OSI参考模型">6.ISO/OSI参考模型</h3><p>国际标准化组织（ISO）提出计算机网络围绕七层来组织，成为开放系统互联（OSI）模型。</p><p>七层分别为：应用层、<strong>表示层</strong>、<strong>会话层</strong>、运输层、网络层、链路层、物理层</p><p><strong>表示层</strong>：使通信的应用程序能够解释交换数据的含义，这些服务包括数据压缩和数据加码（它们是自解释的）以及数据描述（这使得应用程序不必担心在各台计算机中表示/存储的内部格式不同的问题）。</p><p><strong>会话层</strong>：提供了数据交换的界定和同步功能，包括了建立检查底单和恢复方案的方法。</p><blockquote><p><strong>注</strong>：互联网协议栈并没有这两层，如果需要这些服务的话，将会在应用层实现。</p></blockquote><h3 id="7-封装和解封装">7.封装和解封装</h3><p><strong>封装（encapsulation）</strong>：指在发送端将数据从上层协议传递到下层协议时，为数据附加每个协议的头部或尾部的过程。这个过程也被称为数据的封装或数据的包装。封装的目的是为了在网络中正确传输和处理数据。</p><p><strong>解封装（decapsulation）</strong>：指在接收端将数据从下层协议传递到上层协议时，逐层去除每个协议的头部或尾部的过程。这个过程也被称为数据的解封装或数据的拆包。解封装的目的是为了将数据恢复到原始的上层协议格式，以便应用程序能够正确处理和使用数据。</p><p>展示如下一条物理路径：</p><p><img src="https://bu.dusays.com/2024/11/26/674576e1c1400.png" alt="4"></p><p>（1）数据在源端进行一个大的封装。从应用层开始，逐层封装到物理层的数据帧中。</p><p>（2）在链路层交换机进行两层的解封装和封装。数据到达交换机时，交换机会解析数据帧的头部信息，根据目标MAC地址进行转发（链路层交换机不抽取IP层）。然后，交换机会封装数据帧，添加适当的头部信息（如源MAC地址和目标MAC地址），以便在局域网中正确传输数据。</p><p>（3）在路由器进行三层的解封装和封装，路由器会解析数据帧的头部信息，提取出IP数据报。根据目标IP地址进行路由选择，然后封装IP数据报，添加适当的头部信息（如源IP地址和目标IP地址），以便在网络中正确传输数据。</p><p>（4）最后在目的地进行一次大的解封装。 目的地主机会解析数据帧的头部信息，提取出IP数据报，然后根据上层协议（如TCP或UDP）解析数据报的数据部分，以获取应用层的数据。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（六）：生命周期钩子、路由、Element Plus</title>
      <link href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/"/>
      <url>/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、生命周期钩子">一、生命周期钩子</h2><h3 id="1-生命周期">1.生命周期</h3><p>每个 Vue 组件实例在创建时都需要经历一系列的初始化步骤，比如设置好数据侦听，编译模板，挂载实例到 DOM，以及在数据改变时更新 DOM。</p><p>我们一般把生命周期分为以下四个阶段，先大致了解一下即可：</p><h4 id="（1）创建阶段">（1）创建阶段</h4><p><strong>beforeCreate:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>组件实例初始化之后，数据观测和事件机制尚未启动。</p></li><li class="lvl-2"><p>无法访问<code>data</code>、<code>computed</code>、<code>methods</code>等中的数据，因为它们还未被初始化。</p></li></ul><p><strong>created:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>组件实例已经创建完成，数据观测和事件机制已经启动。</p></li><li class="lvl-2"><p>可以访问和修改<code>data</code>、<code>computed</code>、<code>methods</code>，此时可以进行数据的初始化等操作。</p></li><li class="lvl-2"><p>组件还未挂载到 DOM 中，因此无法进行 DOM 操作。</p></li></ul><h4 id="（2）挂载阶段">（2）挂载阶段</h4><p><strong>beforeMount:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>在挂载开始之前被调用</p></li><li class="lvl-2"><p>此时模板已编译，但尚未渲染到页面上</p></li><li class="lvl-2"><p>可以访问并修改 DOM，虽然此时的 DOM 仍未完全生成。</p></li></ul><p><strong>mounted:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>组件挂载完成后调用，此时组件的 DOM 已经生成并插入到页面中。</p></li><li class="lvl-2"><p>适合进行依赖于 DOM 的操作，比如访问子组件或使用第三方库操作 DOM。</p></li></ul><h4 id="（3）更新阶段">（3）更新阶段</h4><p><strong>beforeUpdate:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>组件的响应式数据发生变化，开始重新渲染之前调用。</p></li><li class="lvl-2"><p>此时可以在数据变化前执行一些操作，如手动修改数据。</p></li></ul><p><strong>updated:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>组件的重新渲染完成之后调用。</p></li><li class="lvl-2"><p>可以在这个钩子中执行依赖于 DOM 结构更新后的操作。</p></li></ul><h4 id="（4）取消挂载阶段">（4）取消挂载阶段</h4><p><strong>beforeUnmount:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>在组件实例即将从 DOM 中移除之前调用。</p></li><li class="lvl-2"><p>此时组件仍然存在于 DOM 中，你可以执行一些清理工作，比如移除事件监听器或取消定时器。</p></li><li class="lvl-2"><p>适用于需要在组件完全移除前进行处理的场景。</p></li></ul><p><strong>unmounted:</strong></p><ul class="lvl-0"><li class="lvl-2"><p>组件实例从 DOM 中移除之后调用。</p></li><li class="lvl-2"><p>此时组件的所有绑定事件、子组件等都已被解除，DOM 元素也被彻底删除。</p></li><li class="lvl-2"><p>适合用于完全清理资源或进行一些统计、日志记录等操作。</p></li><li class="lvl-2"><p>下面这张图可以帮助我们更好地了解一个 Vue 组件所经历生命周期：</p></li></ul><p><img src="https://bu.dusays.com/2024/11/29/67491bc161530.png" alt="1"></p><h3 id="2-钩子函数">2.钩子函数</h3><p>上述 Vue 组件的这些生命周期阶段为我们提供了不同的钩子函数，可以帮助我们在组件的不同生命周期阶段执行特定的逻辑。</p><p>下面让我们以最常用的钩子函数<code>mounted()</code>进行举例说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; message &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#x27;欢迎来到 TIC!&#x27;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // 设置页面标题</span><br><span class="line">    document.title = &#x27;Vue 示例&#x27;;</span><br><span class="line">    // 控制台输出消息</span><br><span class="line">    console.log(&#x27;组件已挂载，页面标题已设置。&#x27;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/67491bc653c3b.png" alt="2"></p><p>可以看到网页的标题成功修改，同时控制台也打印了相关信息。</p><p><code>mounted()</code>钩子函数在 Vue 组件中广泛用于绘图，尤其是我们需要在组件挂载后操作 DOM 或使用外部库来绘制图表或图形时。因为<code>mounted()</code>确保了组件的模板已经渲染完毕，DOM 元素已经存在，因此非常适合在这个阶段进行绘图操作。</p><p>读者如果感兴趣可以自行去了解 chart.js，mermaid 等绘图工具的使用。</p><p>**注意：**不要在 <code>updated</code> 钩子中更改组件的状态，因为这会导致无限的更新循环。</p><h2 id="二、路由">二、路由</h2><h3 id="1-路由的含义">1.路由的含义</h3><p>Vue 的路由管理通常通过 Vue Router 来实现，它是 Vue.js 官方提供的路由库。路由的作用是根据 URL 的变化来渲染不同的组件，帮助开发者构建单页面应用（SPA）。但如果我们只需要一个简单的页面路由，而不想为此引入一整个路由库，可以通过动态组件的方式。</p><h3 id="2-动态组件方式实现路由">2.动态组件方式实现路由</h3><p>让我们以下面这段代码为例进行解释:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import Home from &#x27;./Home.vue&#x27;;</span><br><span class="line">import About from &#x27;./About.vue&#x27;;</span><br><span class="line">import NotFound from &#x27;./NotFound.vue&#x27;;</span><br><span class="line"> </span><br><span class="line">const routes = &#123;</span><br><span class="line">  &#x27;/&#x27;: Home,</span><br><span class="line">  &#x27;/about&#x27;: About</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      currentPath: window.location.hash.slice(1) || &#x27;/&#x27;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    currentView() &#123;</span><br><span class="line">      return routes[this.currentPath] || NotFound;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    window.addEventListener(&#x27;hashchange&#x27;, () =&gt; &#123;</span><br><span class="line">      this.currentPath = window.location.hash.slice(1);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;nav&gt;</span><br><span class="line">      &lt;a href=&quot;#/&quot;&gt;Home&lt;/a&gt; |</span><br><span class="line">      &lt;a href=&quot;#/about&quot;&gt;About&lt;/a&gt; |</span><br><span class="line">      &lt;a href=&quot;#/non-existent-path&quot;&gt;Broken Link&lt;/a&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;component :is=&quot;currentView&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="（1）引入组件部分">（1）引入组件部分</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;./Home.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;./About.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotFound</span> <span class="keyword">from</span> <span class="string">&#x27;./NotFound.vue&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这部分代码导入了三个组件：Home.vue、About.vue 和 NotFound.vue。这些组件对应不同的页面视图。当用户导航到不同的路径时，将显示不同的组件。当然，我们要事先在对应的路径上创建好这三个组件。</p><h4 id="（2）定义路由对象">（2）定义路由对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = &#123;</span><br><span class="line">  <span class="string">&#x27;/&#x27;</span>: <span class="title class_">Home</span>,</span><br><span class="line">  <span class="string">&#x27;/about&#x27;</span>: <span class="title class_">About</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>routes</code> 是一个简单的对象，用于将路径映射到组件。前面的键是路径字符串，后面的值是对应的组件。这意味着当路径为 '/' 时，将显示 Home 组件；当路径为 <code>'/about'</code> 时，将显示 About 组件。</p><h4 id="（3）data-选项">（3）data 选项</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">currentPath</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">slice</span>(<span class="number">1</span>) || <span class="string">&#x27;/&#x27;</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>data 返回了一个对象，包含了组件的响应式状态。这里的 <code>currentPath</code> 用于存储当前的路径。<code>window.location.hash.slice(1)</code> 是获取当前 URL 的 hash 值并去掉前面的 #。如果没有 hash，则默认返回 '/'。</p><p>那么什么是 hash 呢？</p><p>hash 是指 URL 中的一个片段，它以 # 开头，通常用来表示页面中的某个部分或状态。hash 是 URL 的一部分，但它不会被发送到服务器，因此不会触发页面的重新加载。例如一个典型的 URL 包含以下部分：<code>http://example.com/path/page.html#section</code></p><p>其中，<code>#section</code> 就是 hash。也就是说，hash 是 URL 的一部分，用于表示页面中的特定位置或状态。它不会触发页面重新加载，因此非常适合在单页面应用中实现无刷新导航和客户端路由。</p><h4 id="（4）computed-选项">（4）computed 选项</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">currentView</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> routes[<span class="variable language_">this</span>.<span class="property">currentPath</span>] || <span class="title class_">NotFound</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>computed</code> 定义了计算属性 <code>currentView</code>。它根据 <code>currentPath</code> 返回相应的组件。如果 <code>currentPath</code> 对应的路径在 <code>routes</code> 中存在，返回相应组件；如果不存在，返回 <code>NotFound</code> 组件。</p><h4 id="（5）mounted-生命周期钩子">（5）mounted 生命周期钩子</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;hashchange&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">currentPath</span> = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>mounted</code> 是我们前面刚刚讲到的 Vue 的生命周期钩子之一，表示组件已经挂载到 DOM 上。这里使用 <code>window.addEventListener</code> 监听 <code>hashchange</code> 事件。当 URL 的 <code>hash</code> 改变时，更新 <code>currentPath</code>，从而触发视图重新渲染。</p><h4 id="（6）模板部分">（6）模板部分</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;nav&gt;</span><br><span class="line">      &lt;a href=&quot;#/&quot;&gt;Home&lt;/a&gt; |</span><br><span class="line">      &lt;a href=&quot;#/about&quot;&gt;About&lt;/a&gt; |</span><br><span class="line">      &lt;a href=&quot;#/non-existent-path&quot;&gt;Broken Link&lt;/a&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;component :is=&quot;currentView&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;nav&gt;</code>标签中定义了三个链接，点击这些链接会改变 URL 的 hash 部分，从而触发路径更新和视图切换。</p><p><code>&lt;component :is=&quot;currentView&quot; /&gt;</code> 是 Vue 的动态组件，用于根据 <code>currentView</code> 的值动态渲染不同的组件。</p><h4 id="（7）实现效果">（7）实现效果</h4><p><img src="https://bu.dusays.com/2024/11/29/67491bcd8d044.png" alt="3"></p><p><img src="https://bu.dusays.com/2024/11/29/67491bd119f9f.png" alt="4"></p><p><img src="https://bu.dusays.com/2024/11/29/67491bd51d339.png" alt="5"></p><p>可以看到，当我们点击不同的链接时，会改变 URL 的 hash 部分，从而触发 Vue.js 应用中对应的组件显示。</p><h3 id="3-Vue-Router-实现路由">3.Vue Router 实现路由</h3><p>相较于动态组件方式实现路由，Vue Router 提供了一种灵活且强大的方式来管理 Vue.js 应用中的路由，使得开发者能够创建复杂的单页面应用（SPA）。它支持动态路由、嵌套路由、懒加载组件和导航守卫等特性，能够简化页面导航逻辑、提高应用性能，并增强用户体验。通过集成 Vue Router，开发者可以更轻松地管理应用的视图状态，进行组件的动态切换，以及实现复杂的路由控制和权限管理。</p><p>由于内容较多，就不在此处进行展开，读者如果感兴趣，可以自行前往官方文档：<a href="https://router.vuejs.org/zh/">Vue Router - Vue.js 的官方路由</a> 了解更多关于 Vue Router 的使用方式和细节。</p><h2 id="三、Element-Plus">三、Element Plus</h2><p>Vue.js 是一个高度组件化的前端框架。组件化是 Vue.js 的核心特性之一，它将用户界面分解成可重用的、独立的组件，使得开发和维护变得更加高效和组织化。相信通过前面的学习，大家对此应该也有所体会。既然是一个如此高度组件化的前端框架，那么有没有什么能够直接供我们使用的组件呢？</p><p>这就是我们现在要介绍的 Element Plus 了：<a href="https://element-plus.org/zh-CN/">Element Plus - 基于 Vue 3，面向设计师和开发者的组件库</a></p><p>Element Plus 是一个与 Vue 3 完美匹配的 UI 组件库，专门为构建现代网页应用设计。它提供了很多现成的组件，比如按钮、表单和对话框，让你可以轻松地用 Vue 的方式快速创建漂亮的界面。每个组件都封装了自己的样式和功能，像一个个积木块一样，方便你在不同地方重复使用。通过结合 Vue 的组件化特性，Element Plus 使得设计和维护界面变得更加简单和高效。</p><p>善用 Element Plus 能够使我们的 Vue 项目开发事半功倍。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（五）：深入了解组件（下）</title>
      <link href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、组件事件（-emit）">一、组件事件（$emit）</h2><p>在组件的模版表达时候中，我们可以直接使用<code>$emit</code>方法触发自定义事件，触发自定义事件的目的一般是组件之间传递数据。可是在上一篇博客中我们讲到的<code>Props</code>的作用就是数据传递，为什么我们这里还要讲<code>$emit</code>呢？</p><p>实际上，在<code>Props</code>的内容里我们也提到过，那就是其只能用于父组件向子组件传递数据，而<code>$emit</code>能够实现子组件向父组件传递数据。</p><p>依旧是两个父子嵌套关系的文件：</p><p><strong>Parent:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child @someEvent = &quot;getHandle&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        methods: &#123;</span><br><span class="line">            getHandle(data) &#123;</span><br><span class="line">                console.log(&quot;成功触发&quot;);</span><br><span class="line">                console.log(data)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Child:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">    &lt;button @click = &quot;clickEventHandle&quot;&gt;数据传递&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        emits: [&quot;someEvent&quot;],</span><br><span class="line">        methods: &#123;</span><br><span class="line">            clickEventHandle() &#123;</span><br><span class="line">                this.$emit(&quot;someEvent&quot;, &quot;路卡利欧&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>我们首先在 Child 文件中给按钮的<code>click</code>事件绑定一个<code>clickEventHandle()</code>函数，在函数中使用<code>this.$emit</code>的方式将自定义事件<code>someEvent</code>传递给 Parent（注意这里我们可以选择使用两个参数，第二个参数用于额外的数据传递，可以不加）。然后我们就可以在 Parent 中以<code>&lt;Child @someEvent = &quot;getHandle&quot;/&gt;</code>的方式将接收到的自定义事件与正常函数绑定使用了。</p><p>此外，我们需要在子组件添加<code>emits</code>选项来声明自定义事件的名称，否则控制台会出现警告。</p><h2 id="二、组件与-v-model">二、组件与 v-model</h2><p>在前面的学习中我们已经了解了<code>v-model</code>在单个元素中的使用，其双向绑定的功能可以帮助我们轻松实现实时读取用户在输入框内输入的数据并将其同步显示出来。但如果用户输入的地方和我们想要显示或使用数据的地方不在同一个组件中，我们又该怎么解决这种跨组件的问题呢？</p><p><strong>Show:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;搜索内容为：&#123;&#123; Text &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;Search @searchEvent = &quot;getSearch&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Search from &quot;./Search.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                Text: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Search</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            getSearch(data) &#123;</span><br><span class="line">                this.Text = data</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Search:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    搜索：&lt;input type = &quot;text&quot; v-model = &quot;Text&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                Text: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emits: [&quot;searchEvent&quot;],</span><br><span class="line">        watch: &#123;</span><br><span class="line">            Text(newValue, oldValue) &#123;</span><br><span class="line">                this.$emit(&quot;searchEvent&quot;, newValue)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/67491b318e668.png" alt="1"></p><p>这里我们实现的功能是在 Search 组件中输入数据然后在 Show 组件中将其实时显示出来。下面我们对整个过程详细解释：</p><p>首先我们在 Search 组件中使用<code>v-model</code>指令将 input 组件与<code>Text</code>双向绑定，为数据<code>Text</code>设置一个监听函数，每当<code>Text</code>内容更新时，就会触发监听函数，将变化后的新值通过<code>$emit</code>传递给Show组件，Show 组件每次接收到全新的<code>Text</code>值就会触发我们的自定义事件，将对自己的<code>Text</code>进行更新，将其渲染在网页上。这里我们巧妙的借助了监听函数与自定义事件的结合，实现了数据的跨组件实时传递功能。</p><h2 id="三、组件数据传递">三、组件数据传递</h2><p>前面我们讲到关于数据传递的内容有：</p><ul class="lvl-0"><li class="lvl-2"><p>父组件给子组件传递数据：采用<code>props</code></p></li><li class="lvl-2"><p>子组件给父组件传递数据：采用自定义事件</p></li></ul><p>除了自定义事件能够实现子传父之外，我们还可以使用<code>props</code>。咳咳，是的，你没看错，就是<code>props</code>。虽然<code>props</code>不能够直接实现子传父，但是我们可以借助回调函数实现这一功能。前面关于<code>props</code>的内容我们讲到，<code>props</code>传递的可以是字符串、数组、对象，实际上，他还能够传递函数，由于函数是能够携带参数的，借助这一特点，我们便能够实现子传父。下面给出示例代码：</p><p><strong>Parent：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;父元素：&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;Child :onEvent = &quot;dataFn&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                message: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            dataFn(data) &#123;</span><br><span class="line">                this.message = data</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Child:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; onEvent(&quot;传递数据&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: &#123;</span><br><span class="line">            onEvent: &#123;</span><br><span class="line">                type: Function</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="四、透传-Attributes">四、透传 Attributes</h2><h3 id="1-透传-Attributes-的使用">1.透传 Attributes 的使用</h3><p>透传 Attributes 指的是以类似于继承的方式将一个属性或<code>v-on</code>事件监听器传递给子组件。这要求继承该内容的组件只能以单个根元素作渲染。例如我们存在下面这样一个以单元素为根的组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;哲尔尼亚斯&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .pk&#123;</span><br><span class="line">        color: pink;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>当其父元素以<code>&lt;Child class = &quot;pk&quot;/&gt;</code>使用该组件时，相当于为其唯一的根元素传递了一个<code>class</code>属性，从而使 CSS 样式生效，字体颜色变为粉色。</p><p>但如果子组件存在多个根元素，继承则不会生效，例如我们为上面的代码再添加一个<code>&lt;h3&gt;</code>标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;哲尔尼亚斯&lt;/h3&gt;</span><br><span class="line">    &lt;h3&gt;伊菲尔塔尔&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>此时，CSS 样式不会对任何一个元素生效，字体颜色都为默认的黑色。</p><h3 id="2-禁用透传-Attributes">2.禁用透传 Attributes</h3><p>如果我们不想要一个组件自动地继承<code>attribute</code>，可以在组件选项中设置：<code>inheritAttrs: false</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        inheritAttrs: false</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>实际上，我们在日常中很少为用到透传 Attributes，一般情况下也不建议大家通过这种方式来为组件元素设置属性。</p><h2 id="五、插槽-Slots">五、插槽 Slots</h2><h3 id="1-插槽的使用">1.插槽的使用</h3><p>前面我们了解到<code>props</code>能够用于接收任意类型的 JavaScript 的值，但如果我们想要传递的是一些 HTML 片段呢？这时我们就需要借助插槽了。具体使用方式来看下面的示例代码：</p><p><strong>Parent:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h3&gt;插槽&lt;/h3&gt;</span><br><span class="line">            &lt;p&gt;插槽内容&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/Child&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Child:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">    &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>这里我们将原本的<code>&lt;Child/&gt;</code>单标签修改为双标签，在里面写下我们需要传递的 HTML 片段。然后我们就可以在 Child 以<code>&lt;slot&gt;&lt;/slot&gt;</code>的方式使用该片段。这里的<code>&lt;slot&gt;</code>元素是一个插槽出口，标示了父元素提供的插槽内容将会在哪里被渲染，我们可以自行为其选定位置，也可以多次使用。下面这张来自官网的图片也能够帮我们更加具体的了解插槽的使用原理：</p><p><img src="https://bu.dusays.com/2024/11/29/67491b3ecfd9c.png" alt="2"></p><h3 id="2-渲染作用域">2.渲染作用域</h3><p>插槽的内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模版中定义的：</p><p><strong>parent:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h3&gt;插槽&lt;/h3&gt;</span><br><span class="line">            &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/Child&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return&#123;</span><br><span class="line">                message: &quot;插槽内容&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>简单来说就是当我们需要在插槽内添加动态数据时，应该把数据内容写在父组件中，而不是子组件。</p><h3 id="3-插槽默认值">3.插槽默认值</h3><p>我们在子组件中使用插槽时，可以为其设置默认值，当父组件没有传递插槽内容或传递内容为空时，子组件中的插槽部分就会显示默认值的内容，否则正常显示来自父组件的插槽内容，实现方式也很简单，直接写在标签中间即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;slot&gt;插槽默认值&lt;/slot&gt;</span><br></pre></td></tr></table></figure><h3 id="4-具名插槽">4.具名插槽</h3><p>如果我们想要传递多个不同的插槽，可以通过为插槽起名字的方式，借助<code>v-slot</code>指令实现将不同的内容传递给对应名字的插槽：</p><p><strong>Parent:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child&gt;</span><br><span class="line">        &lt;template v-slot:A&gt;</span><br><span class="line">            &lt;h3&gt;插槽A&lt;/h3&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;template v-slot:B&gt;</span><br><span class="line">            &lt;h3&gt;插槽B&lt;/h3&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/Child&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Child:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">     &lt;slot name = &quot;A&quot;&gt;&lt;/slot&gt;</span><br><span class="line">     &lt;slot name = &quot;B&quot;&gt;&lt;/slot&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>我们在 Child 中通过<code>name</code>属性为不同的插槽取名，然后在 Parent 中就可以使用<code>v-slot</code>指令将对应的片段传递给相应名字的插槽，这里的<code>v-slot:</code>必须写在<code>&lt;template&gt;</code>标签中。此外，<code>v-slot:</code> 也可以简写为<code>#</code>符号。</p><p>注意：<code>v-slot:</code>或<code>#</code>后不要跟空格，直接写对应插槽的名字，如果在其后面添加了空格，Vue 会将其视为无效的指令，并显示错误消息（个人亲身经历，找了好久才发现是这个问题23333）。</p><h3 id="5-插槽中的数据传递">5.插槽中的数据传递</h3><p>前面我们讲到在插槽内添加动态数据时，应该把数据内容写在父组件中。但在某些场景下插槽的内容可能想要同时使用父组件域内和子组件域内的数据，想要做到这一点，我们需要一种方式来让子组件在渲染时将一部分数据提供给插槽。那就是像对组件传递<code>props</code>那样，向一个插槽的出口上传递<code>attributes</code>。示例代码如下：</p><p><strong>Parent:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child v-slot = &quot;SlotProps&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; SlotProps.msg &#125;&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;/Child&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Child:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">     &lt;slot :msg = &quot;Childmessage&quot;&gt;&lt;/slot&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                Childmessage: &quot;子组件数据&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>其大致流程是：我们先把数据传递给父组件，父组件的插槽在接收到数据后再将该数据传递回子组件。</p><p>我们在子组件中以<code>:</code> （<code>v-bind:</code>的简写）加属性的方式发送数据，然后在<code>&lt;Child&gt;</code>中以<code>v-slot = &quot;SlotProps&quot;</code>的方式来接收。注意此处的<code>&quot;SlotProps&quot;</code>是一个对象，名字可自定义，此处便于理解我们将其起名为<code>SlotProps</code>。下面我们就可以在插槽内通过访问对象内容的方式来访问我们接收到的数据了。</p><p>**注意：**此处使用的是<code>v-slot =</code>而不是<code>v-slot:</code> 因此不可以简写为<code>#</code>。</p><p>而对于具名插槽，我们可以将两者写在一起：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template v-slot:A = &quot;SlotProps&quot;&gt;</span><br><span class="line">    &lt;h3&gt;&#123;&#123; SlotProps.msg &#125;&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;!-- 或者 --&gt;</span><br><span class="line">&lt;template #A = &quot;SlotProps&quot;&gt;</span><br><span class="line">    &lt;h3&gt;&#123;&#123; SlotProps.msg &#125;&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（四）：深入了解组件（上）</title>
      <link href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
      <url>/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、组件基础">一、组件基础</h2><h3 id="1-引子">1.引子</h3><p>组件允许我们将 UI 划分为独立的、可重用的部分，并且可以对每个部分进行单独的思考。当我们使用构建步骤时，我们一般会将 Vue 组件定义在一个单独的<code>.vue</code>文件中，这被叫做单文件组件（简称 SFC）。实际上，我们前面的代码示例也都是在一个单独的组件内实现的。</p><h3 id="2-组件组成结构">2.组件组成结构</h3><p>一个最基本的组件，其组成结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;HTML标签&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>&lt;template&gt;</code>用来承载所有的 HTML 标签；</p></li><li class="lvl-2"><p><code>&lt;script&gt;</code>用于承载所有的业务逻辑；</p></li><li class="lvl-2"><p><code>&lt;style&gt;</code>用于承载各种样式；</p></li></ul><p>可以看到，一个完整的 Vue 组件包含所有我们在网页上需要呈现的内容：HTML，JavaScript 以及 CSS。</p><p>有些人可能会注意到这里的<code>&lt;style&gt;</code>标签里有一个<code>scoped</code>，它的作用是什么呢？</p><p>答案很简单，<code>scoped</code>的作用是让当前样式只在当前组件中生效，如果不加<code>scoped</code>，这里的样式就为成为全局样式，对于任何组件都会生效，所以一般为了避免各个组件之间相互干扰，我们都会选择给<code>&lt;style&gt;</code>标签加上一个<code>scoped</code>，对其作用域进行限制。</p><h3 id="3-组件的引用">3.组件的引用</h3><p>组件的引用分为三个步骤：</p><p>首先，在<code>&lt;script&gt;</code>标签中使用 ES6 所提供的<code>import</code>去引入这个组件，格式为<code>import MyComponent from &quot;./components.MyComponent.vue&quot;</code>。前面的<code>MyComponent</code>是用户自己为所引入组件所起的名字，可以不与文件名相同，后面的引号内容则是所要引入组件的文件地址。然后，在<code>export default</code>中与<code>data</code>同级的<code>components</code>里注册组件。这个组件将会以其注册时的名字作为模板中的标签名。最后，我们在<code>&lt;template&gt;</code>中以标签的形式将组件显示出来。代码示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 第三步：显示组件 --&gt;</span><br><span class="line">  &lt;MyComponent/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  //第一步：引入组件</span><br><span class="line">  import MyComponent from &quot;./components/MyComponent.vue&quot;</span><br><span class="line">  //第二步：注册组件</span><br><span class="line">  export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">      MyComponent</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><p>1.这里的<code>&lt;MyComponent/&gt;</code>我们也可以写成<code>&lt;my-component/&gt;</code>，两者的关系是等价的。因为 Vue 支持将模板中使用 <code>kebab-case</code> 的标签解析为使用 <code>PascalCase</code> 注册的组件。</p><p>2.同一个组件可以被我们使用多次，但要注意是，每一个组件都在维护着各自的状态，是不同的 count，因为每当我们使用一个组件，就创建了一个新的实例，具体理解有点类似于我们在 c++ 中学到的对象。</p><h2 id="二、组件嵌套关系">二、组件嵌套关系</h2><p>在实际应用中，组件常常被我们组织成层层嵌套的树状结构：</p><p><img src="https://bu.dusays.com/2024/11/29/67491ad9463c1.png" alt="1"></p><p>上方这张图来自于官方文档，就让我们以这张图所提供的嵌套方式为例，进行页面创建：</p><p><strong>App.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Header/&gt;</span><br><span class="line">  &lt;Main/&gt;</span><br><span class="line">  &lt;Aside/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Header from &quot;./pages/Header.vue&quot;</span><br><span class="line">  import Main from &quot;./pages/Main.vue&quot;</span><br><span class="line">  import Aside from &quot;./pages/Aside.vue&quot;</span><br><span class="line">  export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">      Header,</span><br><span class="line">      Main,</span><br><span class="line">      Aside</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Main.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class = &quot;main&quot;&gt;</span><br><span class="line">        &lt;h3&gt;Main&lt;/h3&gt;</span><br><span class="line">        &lt;Article/&gt;</span><br><span class="line">        &lt;Article/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Article from &quot;./Article.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Article</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    .main &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 70%;</span><br><span class="line">        height: 400px;</span><br><span class="line">        border: 5px solid DimGray;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        border-top: 0;</span><br><span class="line">        background-color:lightgray;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>Article.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Article&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    h3 &#123;</span><br><span class="line">        width: 80%;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        text-align: center;</span><br><span class="line">        line-height: 100px;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        margin-top: 50px;</span><br><span class="line">        background: #999;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>Aside.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class = &quot;aside&quot;&gt;</span><br><span class="line">        &lt;h3&gt;Aside&lt;/h3&gt;</span><br><span class="line">        &lt;Item/&gt;</span><br><span class="line">        &lt;Item/&gt;</span><br><span class="line">        &lt;Item/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Item from &quot;./Item.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Item</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .aside &#123;</span><br><span class="line">        float: right;</span><br><span class="line">        width: 30%;</span><br><span class="line">        height: 400px;</span><br><span class="line">        border: 5px solid DimGray;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        border-left: 0;</span><br><span class="line">        border-top: 0;</span><br><span class="line">        background-color:lightgray;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>Item.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Item&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    h3 &#123;</span><br><span class="line">        width: 80%;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        text-align: center;</span><br><span class="line">        line-height: 100px;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        background-color: #999;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>这里我们单独建立了一个 pages 网页用于存储各个组件，读者可根据实际情况自行调整文件路径。最后我们就能得到如下的网页了，怎么样，是不是和官方文档的图片很像呢？记得要仔细观察各个组件之间的嵌套逻辑以及嵌套实现方式哦！</p><p><img src="https://bu.dusays.com/2024/11/29/67491adf68a11.png" alt="2"></p><h2 id="三、组件注册方式">三、组件注册方式</h2><p>一个 Vue 组件在被我们使用前需要先被“注册”，这样 Vue 才能在渲染模版的时候找到其对应的实现，组件的注册方式有两种：全局注册和局部注册。</p><h3 id="1-全局注册">1.全局注册</h3><p>一般情况下，我们使用 Vue 应用实例的<code>.component()</code>方法来让组件全局可用，打开我们项目中的<code>main.js</code>文件，我们会发现它存在下面这样的默认内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>我们首先使用<code>import</code>将组件文件引入，接着将此处的<code>createApp(App).mount('#app')</code>拆分为两部分，最后在他们之间写入我们要全局注册的内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Header.vue&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"><span class="comment">//在此处写组件的注册</span></span><br><span class="line">app.<span class="title function_">component</span>(<span class="string">&quot;Header&quot;</span>,<span class="title class_">Header</span>)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这里的<code>app.component(&quot;Header&quot;,Header)</code>中第一个<code>&quot;Header&quot;</code>是我们为注册的组件取得变量名，即日后我们引入该组件时使用的名字，第二个<code>Header</code>则是我们要所注册的组件的名字。通过这种方式注册的组件就可以直接在全局中使用了。</p><p><code>.component()</code>方法也可以被链式调用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app</span><br><span class="line">  .<span class="title function_">component</span>(<span class="string">&quot;Header&quot;</span>, <span class="title class_">Header</span>)</span><br><span class="line">  .<span class="title function_">component</span>(<span class="string">&quot;Main&quot;</span>, <span class="title class_">Main</span>)</span><br><span class="line">  .<span class="title function_">component</span>(<span class="string">&quot;Aside&quot;</span>, <span class="title class_">Aside</span>)</span><br></pre></td></tr></table></figure><h3 id="2-局部注册">2.局部注册</h3><p>实际上，前面我们讲到的组件的引用就是采用的局部注册方式。对于局部注册，我们要注意的是，<strong>局部注册的组件在其后代组件中不可用</strong>，只能使用于当前组件。与局部注册相比，全局注册似乎有着天然的优势，那么我们为什么又要选择局部注册呢？前者的劣势又是什么呢？</p><h3 id="3-全局注册的劣势">3.全局注册的劣势</h3><ol><li class="lvl-3"><p>全局注册，但没有被使用的组件无法在生产打包时被自动移除（也叫做 tree-shaking），仍然会出现在打包后的 JS 文件中。</p></li><li class="lvl-3"><p>全局注册在大型项目中使项目的依赖关系变得不这么明确，在父组件中使用子组件时，不容易定位子组件的实现，和使用过多的全局变量一样，可能会影响应用长期的可维护性。</p></li></ol><p>与之相对应的也就是局部注册的优势啦，这里就不再一一赘述。</p><h2 id="四、组件传递数据（Props）">四、组件传递数据（Props）</h2><h3 id="1-Props-传递静态数据">1.Props 传递静态数据</h3><p>我们先创建出有着嵌套关系的Parent和Child文件，然后结合示例代码详细讲解数据传递的过程：</p><p><strong>Parent.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child test = &quot;雷希拉姆&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Child.vue:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; test &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: [&quot;test&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>首先我们在Parent文件的<code>&lt;Child/&gt;</code>标签中以<code>key = value</code>的形式写下我们想要传递给 Child 的数据，然后在 Child 的<code>props</code>中接收数据，注意这里要以数组的形式，且<code>key</code>要加双引号。之后，我们就可以在 Child 文件中正常使用该数据了。</p><p>实际上<code>props</code>能够传递任何数据类型，包括数字，字符串，数组，对象等。</p><p><strong>props 也支持同时传递多个数据：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Parent文件：</span><br><span class="line">    &lt;Child test1 = &quot;雷希拉姆&quot; test2 = &quot;捷克罗姆&quot;/&gt;</span><br><span class="line"> </span><br><span class="line">Child文件：</span><br><span class="line">    props: [&quot;test1&quot;, &quot;test2&quot;]</span><br></pre></td></tr></table></figure><h3 id="2-props-传递动态数据">2.props 传递动态数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Parent&lt;/h3&gt;</span><br><span class="line">    &lt;Child :test = &quot;message&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Child from &quot;./Child.vue&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                message: &quot;雷希拉姆&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            Child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>要注意<code>Props</code>传递动态数据时，我们需要借助<code>v-bind</code>指令，这里我们采用的是其简写形式。</p><h3 id="3-使用一个对象绑定多个-prop">3.使用一个对象绑定多个 prop</h3><p>如果我们想要将一个对象的所有属性都当作 props 传入，可以选择使用没有参数的<code>v-bind</code>，即只使用<code>v-bind</code>而非<code>: prop-name</code>。示例如下：</p><p>存在对象：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pika: &#123;</span><br><span class="line">  id: 25,</span><br><span class="line">  color: yellow</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以使用以下方式为其每一个属性都绑定一个<code>prop</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Child v-bind = &quot;pika&quot; /&gt;</span><br></pre></td></tr></table></figure><p>这种实现方式实际上等价于：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Child :id = &quot;pika.id&quot; :title = &quot;pika.title&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="4-单向数据流">4. 单向数据流</h3><p>所有的props都遵循着单向绑定的原则，即只能父组件给子组件传递数据，不能反其道而行之。这样<code>props</code>因父组件的更新而变化，自然地就会将新的状态向下流往子组件，而不会逆向传递，避免了子组件意外修改父组件的状态。（当然，我们其实还是有方法实现逆向传递数据的，这点我们后面会讲到）</p><p>其次，<code>pros</code>是只读的，这也就意味着我们不能在子组件中去更改一个<code>prop</code>，否则 Vue 会在程序台上报错。</p><h3 id="5-Prop-校验">5.Prop 校验</h3><p>Vue 组件可以更加细致地声明对传入的<code>props</code>的校验要求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; test &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: &#123;</span><br><span class="line">            test: &#123;</span><br><span class="line">                type: Number</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>上面这段代码的含义就是要求接受到的<code>test</code>的数据类型为<code>Number</code>（注意此处的 N 要大写，否则会显示<code>number</code>未定义），如果不是<code>Number</code>类型，控制台就会出现警告。</p><p><img src="https://bu.dusays.com/2024/11/29/67491ae70025e.png" alt="3"></p><p>同样的<code>Prop</code>还能校验<code>String</code>，<code>Array</code>，<code>Object</code>等数据类型，此外还能兼容多个数据类型，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type</span>: [<span class="title class_">Number</span>, <span class="title class_">String</span>, <span class="title class_">Array</span>]</span><br></pre></td></tr></table></figure><p>表示允许接受的数据类型为这三种的任何一种。</p><h3 id="6-默认值">6.默认值</h3><p>有时候我们在子组件中选择接收某个数据，但是实际上父组件并没有传递该数据，这时网页上将会直接不显示该数据，而当网页的内容多起来时我们往往很难注意到这一点。想要解决这个问题我们可以通过设置默认值的方式来填补这块空白，以便我们观察或达成格式的统一。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h3&gt;Child&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; test &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        props: &#123;</span><br><span class="line">            test: &#123;</span><br><span class="line">                type: [Number, String, Array],</span><br><span class="line">                default: &quot;未接收&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>此时，我们取消父组件的数据传递，我们发现，原本应该出现“雷希拉姆”（原<code>test</code>数据内容）的地方变成了我们设置的默认值：未接收。</p><p>需要注意的是，如果默认值是字符串或者数字，我们可以直接写在<code>default:</code> 的后面，但如果是数组或对象，我们必须通过函数返回值的形式来设置默认值。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">default() &#123;</span><br><span class="line">    return [&quot;雷希拉姆&quot;, &quot;捷克罗姆&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-必选项">7.必选项</h3><p>在上一小节中我们了解到当子组件没有接受到来自父组件的数据时，会选择直接不在页面中显示对应模块，我们可以通过设置必选项的方式来让某个数据必须被接收到，否则控制台就会弹出警告。具体实现方式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">        test: &#123;</span><br><span class="line">            type: [Number, String, Array],</span><br><span class="line">            required: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/67491aeba8dba.png" alt="4"></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</title>
      <link href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/"/>
      <url>/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、计算属性">一、计算属性</h2><h3 id="1-使用方式">1.使用方式</h3><p>在前面模版语法的学习中我们了解到，Vue 在所有的数据绑定中都支持使用完整地 JavaScript 表达式。但当模版中的表达式较为复杂时，可能会显得十分臃肿，难以维护。这时就要用到我们的计算属性了。下面以一个简单的代码为例，用来检查<code>names</code>数组中是否有元素：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; isNames &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        names: [&quot;小火龙&quot;, &quot;妙蛙种子&quot;, &quot;杰尼龟&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">      isNames() &#123;</span><br><span class="line">        return this.names.length &gt; 0 ? &quot;Yes&quot; : &quot;No&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>我们通常将计算属性放在与<code>data</code>同级的<code>computed</code>中，与方法不同的是，我们在调用计算属性时不需要加括号，而是直接写函数名，使用方式与一般的属性相同。</p><p>既然提到方法，我们不免疑惑，我们使用方法似乎也能实现相同的功能，为什么又要引入所谓的计算属性呢？计算属性和传统的方法相比有什么优势？</p><h3 id="2-计算属性与方法的区别">2.计算属性与方法的区别</h3><p>计算属性与方法的不同之处在于计算属性值会基于其响应式依赖而被缓存。一个计算属性只会在其响应式依赖更新时才会重新计算，否则无论被访问多少次都会直接返回先前的计算结果，而不用重复执行函数。以上面的代码为例，如果我们额外添加一行  <code>&lt;p&gt;&#123;&#123; isNames &#125;&#125;&lt;/p&gt;</code>，<code>isNames</code>函数也只会被执行一次，只有当其所依赖的<code>names</code>更新时，其才会被重新执行。</p><p>与此相对的，方法调用总是会在重渲染发生时再次执行函数。</p><h2 id="二、类与样式绑定">二、类与样式绑定</h2><p>为了方便使用，Vue 为<code>class</code>和<code>style</code>属性的<code>v-bind</code>用法提供了功能增强，使其除了能和一般的属性一样绑定字符串外，还能够进行对象或者数组的绑定。</p><h3 id="1-Class-的绑定">1.Class 的绑定</h3><p><strong>绑定对象：</strong><br>我们可以通过给<code>v-bind: class</code>传递一个对象的方式来切换<code>class</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p :class = pokStyle&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name: &quot;宝可梦&quot;,</span><br><span class="line">        pokStyle: &#123;</span><br><span class="line">          Size: true,</span><br><span class="line">          Color: true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .Size &#123;</span><br><span class="line">    font-size: 40px;</span><br><span class="line">  &#125;</span><br><span class="line">  .Color &#123;</span><br><span class="line">    color: red;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>绑定数组：</strong><br>也可以将其修改为数组的形式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p :class = Class&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name: &quot;宝可梦&quot;,</span><br><span class="line">        Class: [&quot;Size&quot;, &quot;Color&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><code>：class</code>指令可以也和一般的<code>class</code>属性共存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class = &quot;active&quot; :class = Class&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="2-Style-绑定">2.Style 绑定</h3><p><code>style</code>与对象绑定的使用方法与<code>class</code>相同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p :style = &quot;&#123;color: Color, fontSize: fontSize + &#x27;px&#x27;&#125;&quot;&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name: &quot;宝可梦&quot;,</span><br><span class="line">        Color: &quot;blue&quot;,</span><br><span class="line">        fontSize :30</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><code>style</code>同样也可以与数组绑定，但其用处与对象绑定重合度较高且意义不大，这里就不在进行赘述。</p><h2 id="三、表单输入绑定">三、表单输入绑定</h2><h3 id="1-v-model-指令">1.v-model 指令</h3><p>在前端处理表单数据时，我们往往需要将用户在表单框中输入的内容同步给 JavaScript 中相应的变量。手动连接值绑定和更改事件监听器是一件很麻烦的事情，而 Vue 为我们提供的<code>v-model</code>指令可以帮助我们优雅地解决这个问题。</p><p>下面我们依旧以一段简单的代码为例进行讲解：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;input type = &quot;text&quot; v-model = &quot;name&quot;&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name: &quot;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这里我们使用<code>v-model</code>指令把表单与<code>name</code>进行绑定，当我们在表单中输入内容时，下方的<code>name</code>也会实时更新，与我们所输入的内容保持一致。</p><p>简单点的理解就是<code>v-bind</code>绑定属性，属于单向绑定，而<code>v-model</code>则属于双向绑定，修改任何一边都会同步到另外一边。</p><h3 id="2-v-model-修饰符">2.v-model 修饰符</h3><p><code>v-model</code>指令为我们提供了以下几种修饰符：</p><p><code>.laze</code></p><p>默认情况下，<code>v-model</code>会在每次<code>input</code>事件后更新数据，我们可以添加<code>.lazy</code>修饰符来改为在每次<code>change</code>事件后更新数据。这里的<code>change</code>事件我们可以简单理解为其失去焦点或者我们按下 Enter 键。</p><p><code>.number</code></p><p>强制将用户输入的内容转换为数字类型，这样我们的属性值就会始终是一个数字。但要注意的是该修饰符只会尝试将用户输入的值转换为数字类型。如果用户输入的值无法转换为有效的数字，那么属性的值将保持为 NaN（非数字）。</p><p><code>.trim</code></p><p>自动去除用户输入值的首尾空格。</p><h2 id="四、侦听器">四、侦听器</h2><p>侦听器的作用是侦听页面中响应式数据的变化，这些数据一旦发生变化，侦听器就会侦听到，从而进行一系列我们想要的逻辑操作。而所谓的响应式数据，我们可以简单理解为我们在<code>data</code>中声明、被 { { } } 绑定的数据。</p><p>让我们以下面的代码为例详细讲解：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;button @click = &quot;Update&quot;&gt;mega进化!&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name: &quot;喷火龙&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      Update() &#123;</span><br><span class="line">        this.name = &quot;mega喷火龙X&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      name(newValue, oldValue) &#123;</span><br><span class="line">        console.log(newValue, oldValue)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>我们一般把侦听函数放在与<code>data</code>同级的<code>watch</code>中，且侦听函数的函数名必须要与其侦听的数据名相同，例如我们这里的<code>name()</code>函数的作用就是侦听<code>name</code>的变化。同时侦听函数可以使用两个参数分别表示数据变化后的新值和变化前的旧值。</p><p>当我们点击按钮后，“喷火龙”mega进化为“mega喷火龙X”，<code>name()</code>函数侦听到这一变化，开始执行，将<code>name</code>的新值和旧值分别打印出来。</p><h2 id="五、模版引用">五、模版引用</h2><h3 id="1-引子">1.引子</h3><p>在讲模版引用之前，我们先回顾一下目前已经掌握的对 DOM 的几种操作：</p><ul class="lvl-0"><li class="lvl-2"><p>改变内容：使用 { { } } 模版语法；</p></li><li class="lvl-2"><p>改变属性：使用<code>v-bind</code>指令；</p></li><li class="lvl-2"><p>绑定事件：使用<code>v-on</code>指令；</p></li></ul><p>可以看到，目前为止，我们对于 DOM 的操作，都是通过 Vue 为我们提供的方案来实现的。虽然这几种方法已经基本满足了我们对于 DOM 操作的需求，但如果在某些特殊的情况下我们依旧想要直接地去操作 DOM，我们可以通过模版引用的方式。</p><h3 id="2-模版引用获取-DOM-操作">2.模版引用获取 DOM 操作</h3><p>想要实现直接访问底层 DOM 元素，我们可以使用特殊的<code>ref</code>属性。<code>ref</code>属性允许我们在一个特定的 DOM 元素或子组件实例被挂载后，获得对它的直接引用。在挂载结束后，引用都会被暴露在<code>this.$refs</code>之上，下面给出代码示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div ref = &quot;container&quot;&gt;&#123;&#123; name &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;button @click = &quot;getElementHandle&quot;&gt;超极巨化&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name: &quot;皮卡丘&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      getElementHandle() &#123;</span><br><span class="line">        console.log(this.$refs.container);</span><br><span class="line">        this.$refs.container.innerHTML = &quot;超极巨皮卡丘&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>可以看到，我们给 div 标签添加了<code>ref = &quot;container&quot;</code>时，当该标签被挂载后，我们可以直接使用<code>this.$refs.container</code>获取相应的 DOM 节点（注意此处的写法，不要漏掉 $ 符号和 s），将该组件打印出来，并修改其文本内容。而此处的<code>innerHTML</code>就是原生 JS 里的属性，同样，通过这种方式我们可以实现以前我在原生 JS 中的所有操作。</p><p>需要注意的是，我们只有在组件挂载后才能访问模版引用，而如果我们在模版中的表达式上访问<code>this.$refs.container</code>，那么在初次渲染时会是<code>undefined</code>。这是因为在初次渲染前这个元素还不存在。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</title>
      <link href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/"/>
      <url>/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、事件处理">一、事件处理</h2><p>在 Vue 中我们可以使用 <code>v-on</code> 指令来监听 DOM 事件，并在事件触发时执行对应的 JavaScript。此外，<code>v-on</code> 指令可以缩写为 @ 符号。</p><p>具体用法为：<code>v-on: click = &quot;handler&quot;</code>或者<code>@click = &quot;handler&quot;</code>。</p><p>事件处理器 （handler）的值可以是内联事件处理器，也可以是方法事件处理器。</p><h3 id="1-内联事件处理器">1.内联事件处理器</h3><p>内联事件处理器是指事件被触发时执行的内联 JavaScript 语句 (与 <code>onclick</code> 类似)，通常用于简单场景：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click = &quot;count++&quot;&gt;Add&lt;/button&gt;</span><br><span class="line">  &lt;p&gt;Counter is: &#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          count: 0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-方法事件处理器">2.方法事件处理器</h3><p>方法事件处理器是一个指向组件上定义的方法的属性名或是路径，能够更加灵活地处理一些较为复杂的问题。</p><p>一般我们将所有的方法或者函数都放在与<code>data</code>同级的<code>methods</code>中，通过<code>this</code>读取<code>data</code>中的数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click = &quot;addCount&quot;&gt;Add&lt;/button&gt;</span><br><span class="line">  &lt;p&gt;Counter is: &#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          count:0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      addCount() &#123;</span><br><span class="line">        console.log(&quot;pika&quot;);</span><br><span class="line">        this.count ++</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="二、事件传参">二、事件传参</h2><p>事件参数可以获取<code>event</code>对象和通过事件传递数据，Vue 中的<code>event</code>对象与原生 JS 中的<code>event</code>类似</p><h3 id="1-获取-event-对象">1.获取 event 对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click = &quot;addCount&quot;&gt;Add&lt;/button&gt;</span><br><span class="line">  &lt;p&gt;Counter is: &#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          count:0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      addCount(e) &#123;</span><br><span class="line">        console.log(e);</span><br><span class="line">        e.target.innerHTML = &quot;Add&quot; + this.count;</span><br><span class="line">        this.count ++</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-传递参数">2.传递参数</h3><p>除了直接绑定方法名，我们还可以在内联事件处理器中调用方法。这允许我们向方法传入自定义参数以代替原生事件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p @click = &quot;Deliver(item)&quot; v-for = &quot;(item, index) of names&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          names: [&quot;小火龙&quot;, &quot;妙蛙种子&quot;, &quot;杰尼龟&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      Deliver(text) &#123;</span><br><span class="line">        console.log(text)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当我们用自定义参数代替原生事件后，如果我们还想要获取<code>event</code>，不能在参数后直接添加<code>event</code>，而是需要在<code>event</code>前添加一个**$**符号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p @click = &quot;Deliver(item, $event)&quot; v-for = &quot;(item, index) of names&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          names: [&quot;小火龙&quot;, &quot;妙蛙种子&quot;, &quot;杰尼龟&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      Deliver(text, e) &#123;</span><br><span class="line">        console.log(text,e)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="三、修饰符">三、修饰符</h2><h3 id="1-事件修饰符">1.事件修饰符</h3><p>在处理事件时调用<code>event.preventDefault()</code> 阻止默认事件或<code>event.stopPropagation()</code> 阻止事件冒泡是很常见的。尽管我们可以直接在方法内调用，但如果方法能更专注于数据逻辑而不用去处理 DOM 事件的细节会更好。</p><p>为解决这一问题，Vue 为<code>v-on</code>提供了事件修饰符。修饰符是用 <code>.</code> 表示的指令后缀，例如以下这些：</p><p><code>.stop</code>单击事件将停止传递</p><p><code>.prevent</code>   提交事件将不再重新加载页面</p><p><code>.self</code>        只有在事件是从绑定的元素本身触发时才触发处理器。</p><p><code>.once</code>        确保事件处理程序最多只触发一次</p><p><code>.passive</code>   提升事件的性能，尤其是滚动事件。</p><p>下面以<code>.stop</code>为例，阻止事件冒泡：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div @click.stop = &quot;clickDiv&quot;&gt;</span><br><span class="line">    &lt;p @click.stop = &quot;clickP&quot;&gt;测试冒泡&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      clickDiv() &#123;</span><br><span class="line">        console.log(&quot;DIV&quot;)</span><br><span class="line">      &#125;,</span><br><span class="line">      clickP() &#123;</span><br><span class="line">        console.log(&quot;P&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当我们点击“测试冒泡”时，只打印了 P，而没有打印外层的 DIV，说明阻止冒泡成功。</p><p>同时修饰语既可以采用链式书，写也可以只有修饰符 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 修饰语可以使用链式书写 --&gt;</span><br><span class="line">&lt;a @click.stop.prevent=&quot;doThat&quot;&gt;&lt;/a&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!-- 也可以只有修饰符 --&gt;</span><br><span class="line">&lt;form @submit.prevent&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure><h3 id="2-按键修饰符">2.按键修饰符</h3><p>在监听键盘事件时，我们经常需要检查某些特定的按键。Vue 允许我们在<code>v-on</code>或<code>@</code>监听按键事件时</p><p>添加按键修饰符，同时为一些常用的按键提供了别名：</p><p><code>.enter</code></p><p><code>.tab</code></p><p><code>.delete</code>（捕获 “Delete” 和 “Backspace” 两个按键）</p><p><code>.esc</code></p><p><code>.space</code></p><p><code>.up</code></p><p><code>.down</code></p><p><code>.left</code></p><p><code>.right</code></p><p>下面以<code>.enter</code>为例，只有当 key 为 “Enter” 时，才会调用 “submit”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;input @keyup.enter=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      submit() &#123;</span><br><span class="line">        console.log(&quot;Submitted!&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>除了上述按键修饰符外，还存在四个特殊的系统按键修饰符：</p><p><code>.ctrl</code></p><p><code>.alt</code></p><p><code>.shift</code></p><p><code>.meta</code></p><p>系统按键修饰符和常规按键的区别在于：与<code>keyup</code>事件一起使用时，该按键必须在时间发出时处于按下状态。也就是说，<code>keyup.ctrl</code>只会在你仍然按住<code>ctrl</code>但松开了另一个键时被触发。若单独松开<code>ctrl</code>键将不会触发。这一点，大家在日常使用电脑的过程中应该也都深有体会。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Alt + Enter --&gt;</span><br><span class="line">&lt;input @keyup.alt.enter=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;!-- Ctrl + 点击 --&gt;</span><br><span class="line">&lt;div @click.ctrl=&quot;submit&quot;&gt;Ctrl + 点击&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="3-鼠标按键修饰符">3.鼠标按键修饰符</h3><p>鼠标按键修饰符有一下三种:</p><p><code>.left</code></p><p><code>.right</code></p><p><code>.middle</code></p><p>这些修饰符将处理程序限定为由特定鼠标按键触发的事件。具体用法与前文类似，这里就不在赘述。</p><h2 id="四、数组变化侦测">四、数组变化侦测</h2><h3 id="1-变更方法">1.变更方法</h3><p>Vue 能够侦听响应式数组的变更方法，并在他们被调用时触发相关的更新。这些变更方法包括：</p><p><code>push()</code></p><p><code>pop()</code></p><p><code>shift()</code></p><p><code>unshift()</code></p><p><code>splice()</code></p><p><code>sort()</code></p><p><code>reverse()</code></p><p>也就是说，当我使用上述这些变更方法时，UI 可以自动被实时更新，当数组发生变化，UI 便会产生相应的响应。下面我们来举例说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click = &quot;addList&quot;&gt;添加宝可梦&lt;/button&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li v-for = &quot;(item, index) of names&quot; :key = &quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        names:[&quot;小火龙&quot;, &quot;妙蛙种子&quot;, &quot;杰尼龟&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      addList() &#123;</span><br><span class="line">        this.names.push(&quot;皮卡丘&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/674919d0cefc8.png" alt="1"></p><p><img src="https://bu.dusays.com/2024/11/29/674919d44d082.png" alt="2"></p><p>可以看到，当我们点击按钮时，<code>names</code>数组被添加了一个元素，而 UI 界面也发生了变化，将新加入的元素渲染了出来。</p><h3 id="2-替换方法">2.替换方法</h3><p>变更方法会对调用他们的原数组进行变更。相对的，也有一些不可变方法：<code>filter()</code>，<code>concat()</code>和<code>slice()</code>，这些都不会更改原数组，而是返回一个新的数组，不会引起 UI 的变化。</p><p>例如，我们将上文的<code>addList</code>修改为如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>(<span class="string">&quot;皮卡丘&quot;</span>));</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">names</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/674919d808281.png" alt="3"></p><p><img src="https://bu.dusays.com/2024/11/29/67491a09f12ee.png" alt="4"></p><p>我们可以看到按下按钮后，我们得到了一个新的数组，而原数组并没有发生变化，UI 也没有更新。</p><p>特别的，如果我们在使用<code>concat()</code>时想要原数组也发生变化，可以通过给原数组赋值的方式实现：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">names</span> = <span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>(<span class="string">&quot;皮卡丘&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</title>
      <link href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/"/>
      <url>/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、模版语法">一、模版语法</h2><p>Vue 使用一种基于 HTML 的模板语法，使我们能够声明式地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。</p><h3 id="1-文本插值">1.文本插值</h3><p>文本插值最基本的数据绑定语法，采用双大括号{ {   } }的形式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        message: &quot;宝可梦百科&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>{ {   } }标签的内容将会被替代为对应组件实例中 message 属性的值，如果 message 属性的值发生了改变，{ {   } } 标签内容也会更新。</p><p>因此，如果不想改变标签的内容，可以通过使用 <code>v-once</code> 指令执行一次性地插值，当数据改变时，插值处的内容不会更新。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-once&gt;该值不会改变：&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>在上面的演示中，我们绑定的只是简单的属性名，但实际上，Vue在所有的数据绑定中都支持完整的 JavaScript 表达式。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&#123;&#123; message.split(&quot;&quot;).reverse().join(&quot;&quot;) &#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>但需要注意的是，每个绑定仅支持单一表达式，也就是一段能够被求值的 JavaScript 代码。我们可以通过其能否合法放在<code>return</code>的后面来进行判断。</p><h3 id="2-原始-HTML">2.原始 HTML</h3><p>双大括号会将数据插值为纯文本，而不是 HTML。若想插入 HTML，则需要使用<code>v-html</code>指令。我们可以通过下面的代码来观察两者的区别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; PMHtml &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p v-html = &quot;PMHtml&quot;&gt;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        PMHtml: &quot;&lt;a href=&#x27;https://wiki.52poke.com/wiki/%E4%B8%BB%E9%A1%B5&#x27;&gt;宝可梦百科&lt;/a&gt;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/674918d1f05b8.png" alt="1"></p><p>我们可以看到，前者只是做了单纯的文本替换，后者则是将我们想要的链接成功渲染出来（渲染方式为在p标签里嵌套一个a标签）。</p><h3 id="3-属性绑定">3.属性绑定</h3><p>从前文<code>v-html</code>指令的使用中，我们可以想到，既然双大括号不能用于插入 HTML，那么修改 HTML 属性显然也是不行的。当我们想要响应式地绑定一个属性，应该使用<code>v-bind</code>指令。而如果绑定的值是<code>null</code>或者<code>undefined</code>，那么该属性将会从渲染的元素上移除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;p v-bind:class = &quot;testClass&quot; v-bind:id = &quot;testId&quot; v-bind:title = &quot;testTitle&quot;&gt;小火龙&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        testClass: &quot;火&quot;,</span><br><span class="line">        testId: &quot;小火龙&quot;,</span><br><span class="line">        testTitle: null</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/674918dba625b.png" alt="2"></p><p>我们可以看到，在 HTML 中，<code>class</code>和<code>id</code>都被成功赋值，<code>title</code>由于被赋予的值为<code>null</code>而被移除。</p><p>由于<code>v-bind</code>指令使用过于频繁，我们可以通过简写的方式把<code>v-bind</code>省略，只保留冒号，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p :class = &quot;testClass&quot; :id = &quot;testId&quot; :title = &quot;testTitle&quot;&gt;小火龙&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><code>v-bind</code>也可用于绑定布尔属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button disabled&gt;按钮A&lt;/button&gt;</span><br><span class="line">  &lt;button v-bind:disabled = &quot;isDisabled&quot;&gt;按钮B&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        isDisabled:false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当我们想要动态绑定多属性时，也可以借助 JavaScript 对象：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;p v-bind = Object&gt;小火龙&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        Object: &#123;</span><br><span class="line">          class: &quot;火&quot;,</span><br><span class="line">          id: &quot;小火龙&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="二、条件渲染">二、条件渲染</h2><p>条件渲染主要借助<code>v-if</code>，<code>v-else</code>，<code>v-else-if</code>，<code>v-show</code>指令。其具体的用法与逻辑很简单，我们可以通过下面的例子具体感受：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-if = &quot;flag&quot;&gt;小火龙&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;div v-if = &quot;flag&quot;&gt;妙蛙种子&lt;/div&gt;</span><br><span class="line">  &lt;div v-else&gt;杰尼龟&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;div v-if = &quot;type === &#x27;A&#x27;&quot;&gt;小火龙&lt;/div&gt;</span><br><span class="line">  &lt;div v-else-if = &quot;type === &#x27;B&#x27;&quot;&gt;火恐龙&lt;/div&gt;</span><br><span class="line">  &lt;div v-else-if = &quot;type === &#x27;C&#x27;&quot;&gt;喷火龙&lt;/div&gt;</span><br><span class="line">  &lt;div v-else&gt;mega喷火龙X&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;div v-show = &quot;flag&quot;&gt;杰尼龟&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        flag: true,</span><br><span class="line">        type: &quot;D&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/674918ecad955.png" alt="3"></p><p>有些同学可能会发现，<code>v-if</code>与<code>v-show</code>的功能似乎是一样的，那么我们又为什么要引入<code>v-show</code>指令呢？或者说两者有什么区别呢？</p><p><strong><code>v-if</code>与<code>v-show</code>区别：</strong></p><p><code>v-if</code>是“真实的”按条件渲染，因为它确保了在切换时，条件区块内的事件监听和子组件都会被销毁与重建。</p><p>同事<code>v-if</code>也是惰性的，如果在初次渲染时条件值为 false，则不会做任何事。条件区块只有当条件首次变为 true 时才会被渲染。</p><p>相比之下，<code>v-show</code>更加简单，元素无论初始条件如何，始终会被渲染，只有 CSS 的<code>display</code>属性会被切换。</p><p>总的来说，<code>v-if</code>有更高的切换开销，而<code>v-show</code>有更高的初始渲染开销。因此，如果需要频繁切换，则使用<code>v-show</code>比较好；如果在运行时绑定条件很少改变，则<code>v-if</code>会更合适。</p><h2 id="三、列表渲染">三、列表渲染</h2><p>我们可以使用<code>v-for</code>指令基于一个数组来渲染一个列表。<code>v-for</code>指令的值需要使用<code>item in items</code>形式的特殊语法，其中<code>items</code>是源数据的数组，而<code>item</code>是迭代项的别名（可自行更改）。</p><p>遍历的对象既可以是数组，也可以是对象，或者是更为复杂的对象数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p v-for = &quot;item in names&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p v-for = &quot;item in pokemon&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        names: [&quot;小火龙&quot;,&quot;妙蛙种子&quot;,&quot;杰尼龟&quot;],</span><br><span class="line">        pokemon: &#123;</span><br><span class="line">            name: &quot;小火龙&quot;,</span><br><span class="line">            id: 1,</span><br><span class="line">            system: &quot;fire&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2024/11/29/674918f80fde8.png" alt="4"></p><p><code>v-for</code>也支持使用可选的参数<code>index</code>，<code>key</code>，<code>value</code>等（<code>value</code>可以替换为<code>item</code>）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p v-for = &quot;(item, index) in names&quot;&gt;&#123;&#123; index &#125;&#125;:&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p v-for = &quot;(value, key, index) in pokemon&quot;&gt;&#123;&#123;index&#125;&#125;-&#123;&#123; key &#125;&#125;:&#123;&#123; value &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        names: [&quot;小火龙&quot;,&quot;妙蛙种子&quot;,&quot;杰尼龟&quot;],</span><br><span class="line">        pokemon: &#123;</span><br><span class="line">            name: &quot;小火龙&quot;,</span><br><span class="line">            id: 1,</span><br><span class="line">            system: &quot;fire&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>此外，我们也可以用of作为分隔符来代替in，这更加接近JavaScript的迭代器语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-for = &quot;item of names&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="四、通过-key-管理状态">四、通过 key 管理状态</h2><p>Vue 默认按照“就地更新”的策略来更新通过<code>v-for</code>渲染的元素列表。当数据项的顺序改变时，Vue 不会随之移动DOM元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。为了给 Vue 一个提示，以便它可以跟踪每个节点的标识，从而重用和重新排序现有的元素，我们需要为每一个元素对应的块提供一个唯一的 key attribute。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p v-for = &quot;item in names&quot; :key = &quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">          names: [&quot;小火龙&quot;, &quot;妙蛙种子&quot;, &quot;杰尼龟&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><code>key</code>在这里是通过<code>v-blind</code>绑定的特殊 attribute（此处的<code>v-blind</code>被省略）。</p><p>推荐在任何可行的时候为<code>v-for</code>提供一个 key attribute（在 Vue2 版本中不添加key会导致出现警告信息，而在最新的 Vue3 版本中取消了这一限制，我们以最新的 Vue3 为基准）。</p><p><code>key</code>绑定的值期望是一个基础类型的值，例如字符串或<code>number</code>类型。一般情况下，不建议使用<code>index</code>作为<code>key</code>值，因为数据的插入和删除会导致<code>index</code>的改变，而我们要确保每一条数据的唯一索引不会发生变化。例如，如果对象数据存在唯一的<code>id</code>属性，我们可以把<code>id</code>属性的值作为<code>key</code>。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue环境配置(Windows)</title>
      <link href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/"/>
      <url>/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>🚥Vue2 系列文章导航🚥</strong></p><ol class="series-items"><li><a href="/2024/09/21/Vue%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Windows/" title="Vue环境配置(Windows)">Vue环境配置(Windows)</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A8%A1%E7%89%88%E8%AF%AD%E6%B3%95%E3%80%81%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E3%80%81%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E3%80%81key%E5%80%BC%E7%AE%A1%E7%90%86/" title="Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理">Vue学习笔记（一）：模版语法、条件渲染、列表渲染、key值管理</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E3%80%81%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82%E3%80%81%E4%BF%AE%E9%A5%B0%E7%AC%A6%E3%80%81%E6%95%B0%E7%BB%84%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B/" title="Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测">Vue学习笔记（二）：事件处理、事件传参、修饰符、数组变化侦测</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E3%80%81%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A%E3%80%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A%E3%80%81%E4%BE%A6%E5%90%AC%E5%99%A8%E3%80%81%E6%A8%A1%E7%89%88%E5%BC%95%E7%94%A8/" title="Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用">Vue学习笔记（三）：计算属性、类与样式绑定、表单输入绑定、侦听器、模版引用</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8A%EF%BC%89/" title="Vue学习笔记（四）：深入了解组件（上）">Vue学习笔记（四）：深入了解组件（上）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%8B%EF%BC%89/" title="Vue学习笔记（五）：深入了解组件（下）">Vue学习笔记（五）：深入了解组件（下）</a></li><li><a href="/2024/09/21/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E3%80%81%E8%B7%AF%E7%94%B1%E3%80%81Element-Plus/" title="Vue学习笔记（六）：生命周期钩子、路由、Element Plus">Vue学习笔记（六）：生命周期钩子、路由、Element Plus</a></li></ol></blockquote><h2 id="一、node-js安装配置">一、node.js安装配置</h2><p>vue的使用需要以node.js为前提，如果您的电脑上已经安装了node.js，可直接跳过这一步。</p><p>我们可以在终端（win+r，然后输入cmd打开终端）中输入<code>node -v</code>来查询电脑上是否已经安装node.js以及版本号。如下图显示，我的电脑上目前已经安装了node.js，且版本号为20.12.0。</p><p><img src="https://bu.dusays.com/2024/11/29/674917ef2d41a.png" alt="1"></p><p>node.js的下载地址为：<a href="https://nodejs.org/zh-cn">Node.js — 在任何地方运行 JavaScript</a></p><p>下载完成后打开刚刚下载的文件：</p><p><img src="https://bu.dusays.com/2024/11/29/674917f39f09d.png" alt="2"></p><p>选择安装路径：</p><p><img src="https://bu.dusays.com/2024/11/29/674917f8761bf.png" alt="3"></p><p>选择我们需要的安装模式（注意此处要手动修改）：</p><p><img src="https://bu.dusays.com/2024/11/29/674917fcec117.png" alt="4"></p><p>手动勾选此处的自动安装必要工具项（用于安装一些额外的开发工具和依赖）：</p><p><img src="https://bu.dusays.com/2024/11/29/674918013259a.png" alt="5"></p><p>选择安装：</p><p><img src="https://bu.dusays.com/2024/11/29/674918052c679.png" alt="6"></p><p>安装完成：</p><p><img src="https://bu.dusays.com/2024/11/29/67491809d89c0.png" alt="7"></p><p>然后我们可以使用前面提到的的方式，在终端中输入<code>node -v</code>来检查node.js是否成功安装。</p><h2 id="二、NPM方法安装Vue">二、NPM方法安装Vue</h2><p>由于 npm 安装速度慢，因此我们在下载时选择使用淘宝镜像及其命令 cnpm。</p><p>首先在电脑上<strong>全局安装cnpm</strong>。</p><p>打开电脑终端，输入指令<code>npm install -g cnpm --registry=https://registry.npmmirror.com</code>。下载完成后输入<code>cnpm -v</code>进行检查。</p><p><img src="https://bu.dusays.com/2024/11/29/6749180e7f1e0.png" alt="8"></p><blockquote><p><strong>注</strong>：cnpm是由淘宝NPM镜像提供的一个npm的镜像服务客户端，用于在中国大陆地区加速npm包的安装，因为直接使用npm在国内有时候会比较慢。cnpm和npm命令的用法几乎完全相同，所以我们可以无缝切换使用。</p></blockquote><p>然后我们就可以输入<code>cnpm init vue@latest</code>来创建一个vue项目。它使用了Vue团队推荐的最新项目模板，提供了一种无需全局安装Vue CLI的方式来创建Vue项目，更加简单快捷。当然，你可以先选择好该项目的路径。</p><p><img src="https://bu.dusays.com/2024/11/29/674918129987d.png" alt="9"></p><p>初次创建时，会询问我们是否下载对应的依赖项，我们输入y后回车即可。</p><p>其余设置无特殊要求，输入项目名称后，一路回车，保持默认即可。</p><p>然后我们依次输入他为我们提供的三条指令：</p><p><code>cd vue-project</code>     进入我们的vue项目目录，这里的vue-project为项目名称。</p><p><code>cnpm install</code>      安装项目所需的依赖项，使用cnpm下载速度更快。</p><p><code>npm run dev</code>      启动项目的开发服务器</p><p><img src="https://bu.dusays.com/2024/11/29/674918180c479.png" alt="10"></p><p>上图显示项目启动成功，运行在<code>http:// localhost:5173</code>。我们将网址复制，在浏览器中打开。</p><p><img src="https://bu.dusays.com/2024/11/29/6749181c9f385.png" alt="11"></p><p>现在，你就成功创建了一个你自己的Vue项目模板， 你可以按照自己的想法对各个模块进行修改。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2024/09/21/test-page/"/>
      <url>/2024/09/21/test-page/</url>
      
        <content type="html"><![CDATA[<p>测试文章。测测你的。测测我的。不可以测测。</p><div style="display: flex;">    <img src="https://bu.dusays.com/2024/12/11/67595c996c588.png" alt="Image 1" style="height: 180px; margin-right: 10px; object-fit: contain;">    <img src="https://bu.dusays.com/2024/12/11/67595e3d0d45f.png" alt="Image 2" style="height: 180px; object-fit: contain;"></div><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
